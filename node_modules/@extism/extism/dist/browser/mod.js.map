{
  "version": 3,
  "sources": ["../../node_modules/balanced-match/index.js", "../../node_modules/brace-expansion/index.js", "../../src/polyfills/browser-capabilities.ts", "../../src/interfaces.ts", "../../src/polyfills/browser-fs.ts", "../../src/polyfills/response-to-module.ts", "../../src/manifest.ts", "../../src/call-context.ts", "../../node_modules/@bjorn3/browser_wasi_shim/dist/wasi_defs.js", "../../node_modules/@bjorn3/browser_wasi_shim/dist/debug.js", "../../node_modules/@bjorn3/browser_wasi_shim/dist/wasi.js", "../../node_modules/@bjorn3/browser_wasi_shim/dist/fd.js", "../../node_modules/@bjorn3/browser_wasi_shim/dist/fs_core.js", "../../src/polyfills/browser-wasi.ts", "../../node_modules/minimatch/src/index.ts", "../../node_modules/minimatch/src/assert-valid-pattern.ts", "../../node_modules/minimatch/src/brace-expressions.ts", "../../node_modules/minimatch/src/unescape.ts", "../../node_modules/minimatch/src/ast.ts", "../../node_modules/minimatch/src/escape.ts", "../../src/polyfills/node-minimatch.ts", "../../src/http-context.ts", "../../src/foreground-plugin.ts", "../worker/browser/worker-url.ts", "../../src/polyfills/host-node-worker_threads.ts", "../../src/background-plugin.ts", "../../src/mod.ts"],
  "sourcesContent": ["'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n", "var balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m) return [str];\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  if (/\\$$/.test(m.pre)) {    \n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre+ '{' + m.body + '}' + post[k];\n      expansions.push(expansion);\n    }\n  } else {\n    var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isSequence = isNumericSequence || isAlphaSequence;\n    var isOptions = m.body.indexOf(',') >= 0;\n    if (!isSequence && !isOptions) {\n      // {a},b}\n      if (m.post.match(/,.*\\}/)) {\n        str = m.pre + '{' + m.body + escClose + m.post;\n        return expand(str);\n      }\n      return [str];\n    }\n\n    var n;\n    if (isSequence) {\n      n = m.body.split(/\\.\\./);\n    } else {\n      n = parseCommaParts(m.body);\n      if (n.length === 1) {\n        // x{{a,b}}y ==> x{a}y x{b}y\n        n = expand(n[0], false).map(embrace);\n        if (n.length === 1) {\n          return post.map(function(p) {\n            return m.pre + n[0] + p;\n          });\n        }\n      }\n    }\n\n    // at this point, n is the parts, and we know it's not a comma set\n    // with a single entry.\n    var N;\n\n    if (isSequence) {\n      var x = numeric(n[0]);\n      var y = numeric(n[1]);\n      var width = Math.max(n[0].length, n[1].length)\n      var incr = n.length == 3\n        ? Math.abs(numeric(n[2]))\n        : 1;\n      var test = lte;\n      var reverse = y < x;\n      if (reverse) {\n        incr *= -1;\n        test = gte;\n      }\n      var pad = n.some(isPadded);\n\n      N = [];\n\n      for (var i = x; test(i, y); i += incr) {\n        var c;\n        if (isAlphaSequence) {\n          c = String.fromCharCode(i);\n          if (c === '\\\\')\n            c = '';\n        } else {\n          c = String(i);\n          if (pad) {\n            var need = width - c.length;\n            if (need > 0) {\n              var z = new Array(need + 1).join('0');\n              if (i < 0)\n                c = '-' + z + c.slice(1);\n              else\n                c = z + c;\n            }\n          }\n        }\n        N.push(c);\n      }\n    } else {\n      N = [];\n\n      for (var j = 0; j < n.length; j++) {\n        N.push.apply(N, expand(n[j], false));\n      }\n    }\n\n    for (var j = 0; j < N.length; j++) {\n      for (var k = 0; k < post.length; k++) {\n        var expansion = pre + N[j] + post[k];\n        if (!isTop || isSequence || expansion)\n          expansions.push(expansion);\n      }\n    }\n  }\n\n  return expansions;\n}\n\n", "import type { Capabilities } from '../interfaces.ts';\n\nconst WebAssembly = globalThis.WebAssembly || {};\n\nexport const CAPABILITIES: Capabilities = {\n  supportsJSPromiseInterface:\n    typeof (WebAssembly as any).Suspending === 'function' && typeof (WebAssembly as any).promising === 'function',\n\n  // When false, shared buffers have to be copied to an array\n  // buffer before passing to Text{En,De}coding()\n  allowSharedBufferCodec: false,\n\n  // Whether or not the manifest supports the \"path:\" key.\n  manifestSupportsPaths: false,\n\n  // Whether or not cross-origin checks are enforced on this platform.\n  crossOriginChecksEnforced: true,\n\n  fsAccess: false,\n\n  hasWorkerCapability:\n    typeof globalThis !== 'undefined'\n      ? (globalThis as any).crossOriginIsolated && typeof SharedArrayBuffer !== 'undefined'\n      : true,\n\n  supportsWasiPreview1: true,\n\n  supportsTimeouts: true,\n\n  extismStdoutEnvVarSet: false,\n};\n", "import { CallContext } from './call-context.ts';\n\n/**\n * {@link Plugin} Config\n */\nexport interface PluginConfigLike {\n  [key: string]: string;\n}\n\n/**\n * `PluginOutput` is a view around some memory exposed by the plugin. Typically\n * returned by {@link Plugin#call | `plugin.call()`} or {@link CallContext#read\n * | `callContext.read()`}. It implements the read side of\n * [`DataView`](https://mdn.io/dataview) along with methods for reading string\n * and JSON data out of the backing buffer.\n */\nexport class PluginOutput extends DataView {\n  static #decoder = new TextDecoder();\n  #bytes: Uint8Array | null = null;\n\n  /** @hidden */\n  constructor(buffer: ArrayBufferLike) {\n    super(buffer);\n  }\n\n  json(): any {\n    return JSON.parse(this.string());\n  }\n\n  arrayBuffer(): ArrayBufferLike {\n    return this.buffer;\n  }\n\n  text(): string {\n    return this.string();\n  }\n\n  /** @hidden */\n  string(): string {\n    return PluginOutput.#decoder.decode(this.buffer);\n  }\n\n  bytes(): Uint8Array {\n    this.#bytes ??= new Uint8Array(this.buffer);\n    return this.#bytes;\n  }\n\n  override setInt8(_byteOffset: number, _value: number): void {\n    throw new Error('Cannot set values on output');\n  }\n\n  override setInt16(_byteOffset: number, _value: number, _littleEndian?: boolean): void {\n    throw new Error('Cannot set values on output');\n  }\n\n  override setInt32(_byteOffset: number, _value: number, _littleEndian?: boolean): void {\n    throw new Error('Cannot set values on output');\n  }\n\n  override setUint8(_byteOffset: number, _value: number): void {\n    throw new Error('Cannot set values on output');\n  }\n\n  override setUint16(_byteOffset: number, _value: number, _littleEndian?: boolean): void {\n    throw new Error('Cannot set values on output');\n  }\n\n  override setUint32(_byteOffset: number, _value: number, _littleEndian?: boolean): void {\n    throw new Error('Cannot set values on output');\n  }\n\n  override setFloat32(_byteOffset: number, _value: number, _littleEndian?: boolean): void {\n    throw new Error('Cannot set values on output');\n  }\n\n  override setFloat64(_byteOffset: number, _value: number, _littleEndian?: boolean): void {\n    throw new Error('Cannot set values on output');\n  }\n\n  override setBigInt64(_byteOffset: number, _value: bigint, _littleEndian?: boolean): void {\n    throw new Error('Cannot set values on output');\n  }\n\n  override setBigUint64(_byteOffset: number, _value: bigint, _littleEndian?: boolean): void {\n    throw new Error('Cannot set values on output');\n  }\n}\n\nexport type PluginConfig = Record<string, string>;\n\nexport interface Plugin {\n  /**\n   * Check if a function exists in the WebAssembly module.\n   *\n   * @param {string} funcName The function's name.\n   * @returns {Promise<boolean>} true if the function exists, otherwise false\n   */\n  functionExists(funcName: string): Promise<boolean>;\n  close(): Promise<void>;\n\n  /**\n   * Call a specific function from the WebAssembly module with provided input.\n   *\n   * @param {string} funcName The name of the function to call\n   * @param {Uint8Array | string} input The input to pass to the function\n   * @param {T} hostContext Per-call context to make available to host functions\n   * @returns {Promise<PluginOutput | null>} The result from the function call\n   */\n  call<T>(funcName: string, input?: string | number | Uint8Array, hostContext?: T): Promise<PluginOutput | null>;\n  getExports(): Promise<WebAssembly.ModuleExportDescriptor[]>;\n  getImports(): Promise<WebAssembly.ModuleImportDescriptor[]>;\n  getInstance(): Promise<WebAssembly.Instance>;\n\n  /**\n   * Whether the plugin is currently processing a call.\n   */\n  isActive(): boolean;\n\n  /**\n   * Reset Plugin memory. If called while the plugin is {@link Plugin#isActive|actively executing}, memory will not be reset.\n   *\n   * @returns {Promise<boolean>} Whether or not the reset was successful.\n   */\n  reset(): Promise<boolean>;\n}\n\n/**\n * Arguments to be passed to `node:worker_threads.Worker` when `runInWorker: true`.\n */\nexport interface NodeWorkerArgs {\n  name?: string;\n  execArgv?: string[];\n  argv?: string[];\n  env?: Record<string, string>;\n  resourceLimits?: {\n    maxOldGenerationSizeMb?: number;\n    maxYoungGenerationSizeMb?: number;\n    codeRangeSizeMb?: number;\n    stackSizeMb?: number;\n  };\n  [k: string]: any;\n}\n\n/**\n * Options for initializing an Extism plugin.\n */\nexport interface ExtismPluginOptions {\n  /**\n   * Whether or not to enable WASI preview 1.\n   */\n  useWasi?: boolean;\n\n  /**\n   * Whether or not to run the Wasm module in a Worker thread. Requires\n   * {@link Capabilities#hasWorkerCapability | `CAPABILITIES.hasWorkerCapability`} to\n   * be true. Defaults to false.\n   *\n   * This feature is marked experimental as we work out [a bug](https://github.com/extism/js-sdk/issues/46).\n   *\n   * @experimental\n   */\n  runInWorker?: boolean;\n\n  /**\n   * A logger implementation. Must provide `trace`, `info`, `debug`, `warn`, and `error` methods.\n   */\n  logger?: Console;\n\n  /**\n   * The log level to use.\n   */\n  logLevel?: LogLevel;\n\n  /**\n   * A map of namespaces to function names to host functions.\n   *\n   * ```js\n   * const functions = {\n   *   'my_great_namespace': {\n   *     'my_func': (callContext: CallContext, input: bigint) => {\n   *       const output = callContext.read(input);\n   *       if (output !== null) {\n   *         console.log(output.string());\n   *       }\n   *     }\n   *   }\n   * }\n   * ```\n   */\n  functions?:\n    | {\n        [key: string]: {\n          [key: string]: (callContext: CallContext, ...args: any[]) => any;\n        };\n      }\n    | undefined;\n  allowedPaths?: { [key: string]: string } | undefined;\n\n  /**\n   * A list of allowed hostnames. Wildcard subdomains are supported via `*`.\n   *\n   * Requires the plugin to run in a worker using `runInWorker: true`.\n   *\n   * @example\n   * ```ts\n   * await createPlugin('path/to/some/wasm', {\n   *   runInWorker: true,\n   *   allowedHosts: ['*.example.com', 'www.dylibso.com']\n   * })\n   * ```\n   */\n  allowedHosts?: string[] | undefined;\n\n  memory?: MemoryOptions;\n\n  timeoutMs?: number | null;\n\n  /**\n   * Whether WASI stdout should be forwarded to the host.\n   *\n   * Overrides the `EXTISM_ENABLE_WASI_OUTPUT` environment variable.\n   */\n  enableWasiOutput?: boolean;\n  config?: PluginConfigLike;\n  fetch?: typeof fetch;\n  sharedArrayBufferSize?: number;\n\n  /**\n   * Determines whether or not HTTP response headers should be exposed to plugins,\n   * when set to `true`, `extism:host/env::http_headers` will return the response\n   *  headers for HTTP requests made using `extism:host/env::http_request`\n   */\n  allowHttpResponseHeaders?: boolean;\n\n  /**\n   * Arguments to pass to the `node:worker_threads.Worker` instance when `runInWorker: true`.\n   *\n   * This is particularly useful for changing `process.execArgv`, which controls certain startup\n   * behaviors in node (`--import`, `--require`, warnings.)\n   *\n   * If not set, defaults to removing the current `execArgv` and disabling node warnings.\n   */\n  nodeWorkerArgs?: NodeWorkerArgs;\n}\n\nexport type MemoryOptions = {\n  /**\n   * Maximum number of pages to allocate for the WebAssembly memory. Each page is 64KB.\n   */\n  maxPages?: number | undefined;\n\n  /**\n   * Maximum number of bytes to read from an HTTP response.\n   */\n  maxHttpResponseBytes?: number | undefined;\n\n  /**\n   * Maximum number of bytes to allocate for plugin Vars.\n   */\n  maxVarBytes?: number | undefined;\n};\n\ntype CamelToSnakeCase<S extends string> = S extends `${infer T}${infer U}`\n  ? `${T extends Capitalize<T> ? '_' : ''}${Lowercase<T>}${CamelToSnakeCase<U>}`\n  : S;\n\ntype SnakeCase<T extends Record<string, any>> = {\n  [K in keyof T as CamelToSnakeCase<K & string>]: T[K];\n};\n\nexport interface NativeManifestOptions\n  extends Pick<ExtismPluginOptions, 'allowedPaths' | 'allowedHosts' | 'memory' | 'config' | 'timeoutMs'> {}\n/**\n * The subset of {@link ExtismPluginOptions} attributes available for configuration via\n * a {@link Manifest}. If an attribute is specified at both the {@link ExtismPluginOptions} and\n * `ManifestOptions` level, the plugin option will take precedence.\n */\nexport type ManifestOptions = NativeManifestOptions & SnakeCase<NativeManifestOptions>;\n\nexport interface InternalConfig extends Required<NativeManifestOptions> {\n  logger: Console;\n  logLevel: LogLevelPriority;\n  enableWasiOutput: boolean;\n  functions: { [namespace: string]: { [func: string]: any } };\n  fetch: typeof fetch;\n  wasiEnabled: boolean;\n  sharedArrayBufferSize: number;\n  allowHttpResponseHeaders: boolean;\n  nodeWorkerArgs: NodeWorkerArgs;\n}\n\nexport interface InternalWasi {\n  importObject(): Promise<Record<string, WebAssembly.ImportValue>>;\n  initialize(instance: WebAssembly.Instance): Promise<void>;\n  close(): Promise<void>;\n}\n\n/**\n * Represents the raw bytes of a WASM file loaded into memory\n *\n * @category Manifests\n */\nexport interface ManifestWasmData {\n  data: Uint8Array;\n}\n\n/**\n * Represents a url to a WASM module\n */\nexport interface ManifestWasmUrl {\n  url: URL | string;\n}\n\n/**\n * Represents a path to a WASM module\n */\nexport interface ManifestWasmPath {\n  path: string;\n}\n\n/**\n * Represents a WASM module as a response\n */\nexport interface ManifestWasmResponse {\n  response: Response;\n}\n\n/**\n * Represents a WASM module as a response\n */\nexport interface ManifestWasmModule {\n  module: WebAssembly.Module;\n}\n\n/**\n * The WASM to load as bytes, a path, a fetch `Response`, a `WebAssembly.Module`, or a url\n *\n * @property name The name of the Wasm module. Used when disambiguating {@link Plugin#call | `Plugin#call`} targets when the\n * plugin embeds multiple Wasm modules.\n *\n * @property hash The expected SHA-256 hash of the associated Wasm module data. {@link createPlugin} validates incoming Wasm against\n * provided hashes. If running on Node v18, `node` must be invoked using the `--experimental-global-webcrypto` flag.\n *\n * \u26A0\uFE0F `module` cannot be used in conjunction with `hash`: the Web Platform does not currently provide a way to get source\n * bytes from a `WebAssembly.Module` in order to hash.\n */\nexport type ManifestWasm = (\n  | ManifestWasmUrl\n  | ManifestWasmData\n  | ManifestWasmPath\n  | ManifestWasmResponse\n  | ManifestWasmModule\n) & {\n  name?: string;\n  hash?: string;\n};\n\n/**\n * The manifest which describes the {@link Plugin} code and runtime constraints. This is passed to {@link createPlugin}\n *\n * ```js\n * let manifest = {\n *   wasm: [{name: 'my-wasm', url: 'http://example.com/path/to/wasm'}],\n *   config: {\n *     'greeting': 'hello' // these variables will be available via `extism_get_var` in plugins\n *   }\n * }\n * ```\n *\n * Every member of `.wasm` is expected to be an instance of {@link ManifestWasm}.\n *\n * @see [Extism](https://extism.org/) > [Concepts](https://extism.org/docs/category/concepts) > [Manifest](https://extism.org/docs/concepts/manifest)\n */\nexport interface Manifest extends ManifestOptions {\n  wasm: Array<ManifestWasm>;\n}\n\n/**\n * Any type that can be converted into an Extism {@link Manifest}.\n * - `object` instances that implement {@link Manifest} are validated.\n * - `ArrayBuffer` instances are converted into {@link Manifest}s with a single {@link ManifestWasmData} member.\n * - `URL` instances are fetched and their responses interpreted according to their `content-type` response header. `application/wasm` and `application/octet-stream` items\n *   are treated as {@link ManifestWasmData} items; `application/json` and `text/json` are treated as JSON-encoded {@link Manifest}s.\n * - `string` instances that start with `http://`, `https://`, or `file://` are treated as URLs.\n * - `string` instances that start with `{` treated as JSON-encoded {@link Manifest}s.\n * - All other `string` instances are treated as {@link ManifestWasmPath}.\n *\n * ```js\n * let manifest = {\n *   wasm: [{name: 'my-wasm', url: 'http://example.com/path/to/wasm'}],\n *   config: {\n *     'greeting': 'hello' // these variables will be available via `extism_get_var` in plugins\n *   }\n * }\n *\n * let manifest = '{\"wasm\": {\"url\": \"https://example.com\"}}'\n * let manifest = 'path/to/file.wasm'\n * let manifest = new ArrayBuffer()\n * ```\n *\n * @throws [TypeError](https://mdn.io/TypeError) when `URL` parameters don't resolve to a known `content-type`\n * @throws [TypeError](https://mdn.io/TypeError) when the resulting {@link Manifest} does not contain a `wasm` member with valid {@link ManifestWasm} items.\n *\n * @see [Extism](https://extism.org/) > [Concepts](https://extism.org/docs/category/concepts) > [Manifest](https://extism.org/docs/concepts/manifest)\n */\nexport type ManifestLike = Manifest | Response | WebAssembly.Module | ArrayBuffer | string | URL;\n\nexport interface Capabilities {\n  /**\n   * Whether or not the environment supports [JSPI](https://github.com/WebAssembly/js-promise-integration/blob/main/proposals/js-promise-integration/Overview.md).\n   *\n   * If supported, host functions may be asynchronous without running the plugin with `runInWorker: true`.\n   *\n   * - \u2705 node 23+\n   * - \u274C deno\n   * - \u274C bun\n   * - \u274C firefox\n   * - \u274C chrome\n   * - \u274C webkit\n   */\n  supportsJSPromiseInterface: boolean;\n\n  /**\n   * Whether or not the environment allows SharedArrayBuffers to be passed to `TextDecoder.decode` and `TextEncoder.encodeInto` directly\n   *\n   * - \u2705 node\n   * - \u2705 deno\n   * - \u2705 bun\n   * - \u274C firefox\n   * - \u274C chrome\n   * - \u274C webkit\n   */\n  allowSharedBufferCodec: boolean;\n\n  /**\n   * Whether or not {@link ManifestWasm} items support the \"path:\" key.\n   *\n   * - \u2705 node\n   * - \u2705 deno\n   * - \u2705 bun\n   * - \u274C firefox\n   * - \u274C chrome\n   * - \u274C webkit\n   */\n  manifestSupportsPaths: boolean;\n\n  /**\n   * Whether or not cross-origin checks are enforced for outgoing HTTP requests on this platform.\n   *\n   * - \u274C node\n   * - \u274C deno\n   * - \u274C bun\n   * - \u2705 firefox\n   * - \u2705 chrome\n   * - \u2705 webkit\n   */\n  crossOriginChecksEnforced: boolean;\n\n  /**\n   * Whether or not the host environment has access to a filesystem.\n   *\n   * - \u2705 node\n   * - \u2705 deno\n   * - \u2705 bun\n   * - \u274C firefox\n   * - \u274C chrome\n   * - \u274C webkit\n   */\n  fsAccess: boolean;\n\n  /**\n   * Whether or not the host environment supports moving Wasm plugin workloads to a worker. This requires\n   * SharedArrayBuffer support, which requires `window.crossOriginIsolated` to be true in browsers.\n   *\n   * @see [`crossOriginalIsolated` on MDN](https://mdn.io/crossOriginIsolated)\n   *\n   * - \u2705 node\n   * - \u2705 deno\n   * - \u2705 bun\n   * - \uD83D\uDD12 firefox\n   * - \uD83D\uDD12 chrome\n   * - \uD83D\uDD12 webkit\n   */\n  hasWorkerCapability: boolean;\n\n  /**\n   * Whether or not the host environment supports WASI preview 1.\n   *\n   * @see [`WASI`](https://wasi.dev/) and [`WASI Preview 1`](https://github.com/WebAssembly/WASI/blob/main/legacy/preview1/docs.md)\n   *\n   * - \u2705 node (via [`node:wasi`](https://nodejs.org/api/wasi.html))\n   * - \u2705 deno (via [`deno.land/std/wasi/snapshot_preview1`](https://deno.land/std@0.200.0/wasi/snapshot_preview1.ts))\n   * - \u274C bun\n   * - \u2705 firefox (via [`@bjorn3/browser_wasi_shim`](https://www.npmjs.com/package/@bjorn3/browser_wasi_shim))\n   * - \u2705 chrome (via [`@bjorn3/browser_wasi_shim`](https://www.npmjs.com/package/@bjorn3/browser_wasi_shim))\n   * - \u2705 webkit (via [`@bjorn3/browser_wasi_shim`](https://www.npmjs.com/package/@bjorn3/browser_wasi_shim))\n   */\n  supportsWasiPreview1: boolean;\n\n  /**\n   * Whether or not the host environment supports timeouts.\n   *\n   * - \u2705 node\n   * - \u2705 deno\n   * - \u274C bun (Exhibits strange behavior when await'ing `worker.terminate()`.)\n   * - \u2705 firefox\n   * - \u2705 chrome\n   * - \u2705 webkit\n   */\n  supportsTimeouts: boolean;\n\n  /**\n   * Whether or not the `EXTISM_ENABLE_WASI_OUTPUT` environment variable has been set.\n   *\n   * This value is consulted whenever {@link ExtismPluginOptions#enableWasiOutput} is omitted.\n   */\n  extismStdoutEnvVarSet: boolean;\n}\n\nexport const SAB_BASE_OFFSET = 4;\n\nexport enum SharedArrayBufferSection {\n  End = 0xff,\n  RetI64 = 1,\n  RetF64 = 2,\n  RetVoid = 3,\n  Block = 4,\n}\n\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'silent';\n\nexport function logLevelToPriority(level: LogLevel): LogLevelPriority {\n  switch (level) {\n    case 'trace':\n      return 0;\n    case 'debug':\n      return 1;\n    case 'info':\n      return 2;\n    case 'warn':\n      return 3;\n    case 'error':\n      return 4;\n    case 'silent':\n      return 0x7fffffff;\n    default:\n      throw new TypeError(\n        `unrecognized log level \"${level}\"; expected one of \"trace\", \"debug\", \"info\", \"warn\", \"error\", \"silent\"`,\n      );\n  }\n}\n\nexport type LogLevelPriority = 0 | 1 | 2 | 3 | 4 | 0x7fffffff;\n\nexport function priorityToLogLevel(level: LogLevelPriority): LogLevel {\n  switch (level) {\n    case 0:\n      return 'trace';\n    case 1:\n      return 'debug';\n    case 2:\n      return 'info';\n    case 3:\n      return 'warn';\n    case 4:\n      return 'error';\n    case 0x7fffffff:\n      return 'silent';\n    default:\n      throw new TypeError(\n        `unrecognized log level \"${level}\"; expected one of \"trace\", \"debug\", \"info\", \"warn\", \"error\", \"silent\"`,\n      );\n  }\n}\n", "export async function readFile(_path: string): Promise<void> {\n  throw new Error('readFile not supported in this environment');\n}\n", "export async function responseToModule(\n  response: Response,\n  hasHash?: boolean,\n): Promise<{ module: WebAssembly.Module; data?: ArrayBuffer }> {\n  if (String(response.headers.get('Content-Type')).split(';')[0] === 'application/octet-stream') {\n    const headers = new Headers(response.headers);\n    headers.set('Content-Type', 'application/wasm');\n\n    response = new Response(response.body, {\n      status: response.status,\n      statusText: response.statusText,\n      headers: headers,\n    });\n  }\n\n  // XXX(chrisdickinson): Note that we want to pass a `Response` to WebAssembly.compileStreaming if we\n  // can to play nicely with V8's code caching [1]. At the same time, we need the original ArrayBuffer data\n  // to verify any hashes. There's no way back to bytes from `WebAssembly.Module`, so we have to `.clone()`\n  // the response to get the `ArrayBuffer` data if we need to check a hash.\n  //\n  // [1]: https://v8.dev/blog/wasm-code-caching#algorithm\n  const data = hasHash ? await response.clone().arrayBuffer() : undefined;\n  const module = await WebAssembly.compileStreaming(response);\n\n  return { module, data };\n}\n", "import type {\n  Manifest,\n  ManifestWasmUrl,\n  ManifestWasmData,\n  ManifestWasmPath,\n  ManifestWasmResponse,\n  ManifestWasmModule,\n  ManifestLike,\n  ManifestOptions,\n} from './interfaces.ts';\nimport { readFile } from './polyfills/node-fs.ts';\nimport { responseToModule } from './polyfills/response-to-module.ts';\n\nasync function _populateWasmField(candidate: ManifestLike, _fetch: typeof fetch): Promise<ManifestLike> {\n  if (candidate instanceof ArrayBuffer) {\n    return { wasm: [{ data: new Uint8Array(candidate as ArrayBuffer) }] };\n  }\n\n  if (candidate instanceof WebAssembly.Module) {\n    return { wasm: [{ module: candidate as WebAssembly.Module }] };\n  }\n\n  if (typeof candidate === 'string') {\n    if (candidate.search(/^\\s*\\{/g) === 0) {\n      return parseManifestFromJson(candidate);\n    }\n\n    if (candidate.search(/^(https?|file):\\/\\//) !== 0) {\n      return { wasm: [{ path: candidate }] };\n    }\n\n    candidate = new URL(candidate);\n  }\n\n  if (candidate instanceof Response || candidate?.constructor?.name === 'Response') {\n    const response: Response = candidate as Response;\n    const contentType = response.headers.get('content-type') || 'application/octet-stream';\n\n    switch (contentType.split(';')[0]) {\n      case 'application/octet-stream':\n      case 'application/wasm':\n        return { wasm: [{ response }] };\n      case 'application/json':\n      case 'text/json':\n        return _populateWasmField(parseManifestFromJson(await response.text()), _fetch);\n      default:\n        throw new TypeError(\n          `While processing manifest URL \"${response.url}\"; expected content-type of \"text/json\", \"application/json\", \"application/octet-stream\", or \"application/wasm\"; got \"${contentType}\" after stripping off charset.`,\n        );\n    }\n  }\n\n  if (candidate instanceof URL) {\n    return _populateWasmField(await _fetch(candidate, { redirect: 'follow' }), _fetch);\n  }\n\n  if (!('wasm' in candidate)) {\n    throw new TypeError('Expected \"wasm\" key in manifest');\n  }\n\n  if (!Array.isArray(candidate.wasm)) {\n    throw new TypeError('Expected \"manifest.wasm\" to be array');\n  }\n\n  const badItemIdx = candidate.wasm.findIndex(\n    (item) =>\n      !('data' in item) && !('url' in item) && !('path' in item) && !('module' in item) && !('response' in item),\n  );\n  if (badItemIdx > -1) {\n    throw new TypeError(\n      `Expected every item in \"manifest.wasm\" to include either a \"data\", \"url\", or \"path\" key; got bad item at index ${badItemIdx}`,\n    );\n  }\n\n  return { ...(candidate as Manifest) };\n}\n\nfunction parseManifestFromJson(json: string): Manifest {\n  const parsed = JSON.parse(json);\n\n  return {\n    wasm: parsed.wasm,\n    timeoutMs: parsed.timeoutMs ?? parsed.timeout_ms,\n    allowedPaths: parsed.allowedPaths ?? parsed.allowed_paths,\n    allowedHosts: parsed.allowedHosts ?? parsed.allowed_hosts,\n    config: parsed.config,\n    ...(parsed.memory\n      ? {\n          maxHttpResponseBytes: parsed.memory.maxHttpResponseBytes ?? parsed.memory.max_http_response_bytes,\n          maxPages: parsed.memory.maxPages ?? parsed.memory.max_pages,\n          maxVarBytes: parsed.memory.maxVarBytes ?? parsed.memory.max_var_bytes,\n        }\n      : {}),\n  };\n}\n\nasync function intoManifest(candidate: ManifestLike, _fetch: typeof fetch = fetch): Promise<Manifest> {\n  const manifest = (await _populateWasmField(candidate, _fetch)) as Manifest;\n  manifest.config ??= {};\n  return manifest;\n}\n\nexport async function toWasmModuleData(\n  input: ManifestLike,\n  _fetch: typeof fetch,\n): Promise<[ManifestOptions, string[], WebAssembly.Module[]]> {\n  const names: string[] = [];\n\n  const manifest = await intoManifest(input, _fetch);\n  const manifestOpts: ManifestOptions = {\n    allowedPaths: manifest.allowedPaths,\n    allowedHosts: manifest.allowedHosts,\n    config: manifest.config,\n    memory: manifest.memory,\n  };\n\n  const manifestsWasm = await Promise.all(\n    manifest.wasm.map(async (item, idx, all) => {\n      let module: WebAssembly.Module;\n      let buffer: ArrayBuffer | undefined;\n      if ((item as ManifestWasmData).data) {\n        const data = (item as ManifestWasmData).data;\n        buffer = data.buffer ? data.buffer : data;\n        module = await WebAssembly.compile(data);\n      } else if ((item as ManifestWasmPath).path) {\n        const path = (item as ManifestWasmPath).path;\n        const data = await readFile(path);\n        buffer = data.buffer as ArrayBuffer;\n        module = await WebAssembly.compile(data);\n      } else if ((item as ManifestWasmUrl).url) {\n        const response = await _fetch((item as ManifestWasmUrl).url, {\n          headers: {\n            accept: 'application/wasm;q=0.9,application/octet-stream;q=0.8',\n          },\n        });\n        const result = await responseToModule(response, Boolean(item.hash));\n        buffer = result.data;\n        module = result.module;\n      } else if ((item as ManifestWasmResponse).response) {\n        const result = await responseToModule((item as ManifestWasmResponse).response, Boolean(item.hash));\n        buffer = result.data;\n        module = result.module;\n      } else if ((item as ManifestWasmModule).module) {\n        (<any>names[idx]) = item.name ?? String(idx);\n        module = (item as ManifestWasmModule).module;\n      } else {\n        throw new Error(\n          `Unrecognized wasm item at index ${idx}. Keys include: \"${Object.keys(item).sort().join(',')}\"`,\n        );\n      }\n\n      let potentialName = String(idx);\n      if (item.hash) {\n        if (!buffer) {\n          throw new Error('Item specified a hash but WebAssembly.Module source data is unavailable for hashing');\n        }\n\n        const hashBuffer = new Uint8Array(await crypto.subtle.digest('SHA-256', buffer));\n        const checkBuffer = new Uint8Array(32);\n        let eq = true;\n        for (let i = 0; i < 32; ++i) {\n          checkBuffer[i] = parseInt(item.hash.slice(i << 1, (i << 1) + 2), 16);\n          // do not exit early: we want to do a constant time comparison\n          eq = eq && checkBuffer[i] === hashBuffer[i];\n        }\n        const hashAsString = () => [...hashBuffer].map((xs) => xs.toString(16).padStart(2, '0')).join('');\n\n        if (!eq) {\n          throw new Error(`Plugin error: hash mismatch. Expected: ${item.hash}. Actual: ${hashAsString()}`);\n        }\n\n        potentialName = hashAsString();\n      }\n\n      (<any>names[idx]) = item.name ?? (idx === all.length - 1 ? 'main' : potentialName);\n\n      return module;\n    }),\n  );\n\n  if (!names.includes('main')) {\n    throw new Error('manifest with multiple modules must designate one \"main\" module');\n  }\n\n  return [manifestOpts, names, manifestsWasm];\n}\n", "import {\n  LogLevel,\n  MemoryOptions,\n  type PluginConfig,\n  PluginOutput,\n  LogLevelPriority,\n  priorityToLogLevel,\n  logLevelToPriority,\n} from './interfaces.ts';\nimport { CAPABILITIES } from './polyfills/deno-capabilities.ts';\n\nexport const BEGIN = Symbol('begin');\nexport const END = Symbol('end');\nexport const ENV = Symbol('env');\nexport const SET_HOST_CONTEXT = Symbol('set-host-context');\nexport const GET_BLOCK = Symbol('get-block');\nexport const IMPORT_STATE = Symbol('import-state');\nexport const EXPORT_STATE = Symbol('export-state');\nexport const STORE = Symbol('store-value');\nexport const RESET = Symbol('reset');\n\nexport class Block {\n  buffer: ArrayBufferLike;\n  view: DataView;\n  local: boolean;\n\n  get byteLength(): number {\n    return this.buffer.byteLength;\n  }\n\n  constructor(arrayBuffer: ArrayBufferLike, local: boolean) {\n    this.buffer = arrayBuffer;\n    this.view = new DataView(this.buffer);\n    this.local = local;\n  }\n\n  static indexToAddress(idx: bigint | number): bigint {\n    return BigInt(idx) << 48n;\n  }\n\n  static addressToIndex(addr: bigint | number): number {\n    return Number(BigInt(addr) >> 48n);\n  }\n\n  static maskAddress(addr: bigint | number): number {\n    return Number(BigInt(addr) & ((1n << 48n) - 1n));\n  }\n}\n\nexport type CallState = {\n  blocks: [ArrayBufferLike | null, number][];\n  stack: [number | null, number | null, number | null][];\n};\n\nexport class CallContext {\n  #stack: [number | null, number | null, number | null][];\n  /** @hidden */\n  #blocks: (Block | null)[] = [];\n  #logger: Console;\n  #logLevel: LogLevelPriority;\n  #decoder: TextDecoder;\n  #encoder: TextEncoder;\n  #arrayBufferType: { new (size: number): ArrayBufferLike };\n  #config: PluginConfig;\n  #vars: Map<string, Uint8Array> = new Map();\n  #varsSize: number;\n  #memoryOptions: MemoryOptions;\n  #hostContext: any;\n\n  /** @hidden */\n  constructor(\n    type: { new (size: number): ArrayBufferLike },\n    logger: Console,\n    logLevel: LogLevelPriority,\n    config: PluginConfig,\n    memoryOptions: MemoryOptions,\n  ) {\n    this.#arrayBufferType = type;\n    this.#logger = logger;\n    this.#logLevel = logLevel ?? 0x7fff_ffff;\n    this.#decoder = new TextDecoder();\n    this.#encoder = new TextEncoder();\n    this.#memoryOptions = memoryOptions;\n\n    this.#varsSize = 0;\n    this.#stack = [];\n\n    // reserve the null page.\n    this.alloc(1);\n\n    this.#config = config;\n  }\n\n  hostContext<T = any>(): T {\n    return this.#hostContext as T;\n  }\n\n  /**\n   * Allocate a chunk of host memory visible to plugins via other extism host functions.\n   * Returns the start address of the block.\n   */\n  alloc(size: bigint | number): bigint {\n    const block = new Block(new this.#arrayBufferType(Number(size)), true);\n    const index = this.#blocks.length;\n    this.#blocks.push(block);\n\n    if (this.#memoryOptions.maxPages) {\n      const pageSize = 64 * 1024;\n      const totalBytes = this.#blocks.reduce((acc, block) => acc + (block?.buffer.byteLength ?? 0), 0);\n      const totalPages = Math.ceil(totalBytes / pageSize);\n\n      if (totalPages > this.#memoryOptions.maxPages) {\n        this.#logger.error(\n          `memory limit exceeded: ${totalPages} pages requested, ${this.#memoryOptions.maxPages} allowed`,\n        );\n        return 0n;\n      }\n    }\n\n    return Block.indexToAddress(index);\n  }\n\n  /**\n   * Read a variable from extism memory by name.\n   *\n   * @returns {@link PluginOutput}\n   */\n  getVariable(name: string): PluginOutput | null {\n    if (!this.#vars.has(name)) {\n      return null;\n    }\n    return new PluginOutput(this.#vars.get(name)!.buffer);\n  }\n\n  /**\n   * Set a variable to a given string or byte array value.\n   */\n  setVariable(name: string, value: string | Uint8Array) {\n    const buffer = typeof value === 'string' ? this.#encoder.encode(value) : value;\n\n    const variable = this.#vars.get(name);\n\n    const newSize = this.#varsSize + buffer.byteLength - (variable?.byteLength || 0);\n    if (newSize > (this.#memoryOptions?.maxVarBytes || Infinity)) {\n      throw new Error(\n        `var memory limit exceeded: ${newSize} bytes requested, ${this.#memoryOptions.maxVarBytes} allowed`,\n      );\n    }\n    this.#varsSize = newSize;\n    this.#vars.set(name, buffer);\n  }\n\n  /**\n   * Delete a variable if present.\n   */\n  deleteVariable(name: string) {\n    const variable = this.#vars.get(name);\n    if (!variable) {\n      return;\n    }\n    this.#vars.delete(name);\n    this.#varsSize -= variable.byteLength;\n  }\n\n  /**\n   * Given an address in extism memory, return a {@link PluginOutput} that represents\n   * a view of that memory. Returns null if the address is invalid.\n   *\n   * @returns bigint\n   */\n  read(addr: bigint | number): PluginOutput | null {\n    const blockIdx = Block.addressToIndex(addr);\n    const block = this.#blocks[blockIdx];\n    if (!block) {\n      return null;\n    }\n\n    const buffer =\n      !(block.buffer instanceof ArrayBuffer) && !CAPABILITIES.allowSharedBufferCodec\n        ? new Uint8Array(block.buffer).slice().buffer\n        : block.buffer;\n\n    return new PluginOutput(buffer);\n  }\n\n  /**\n   * Store a string or Uint8Array value in extism memory.\n   *\n   * @returns bigint\n   */\n  store(input: string | Uint8Array): bigint {\n    const idx = this[STORE](input);\n    if (!idx) {\n      throw new Error('failed to store output');\n    }\n    return Block.indexToAddress(idx);\n  }\n\n  length(addr: bigint): bigint {\n    const blockIdx = Block.addressToIndex(addr);\n    const block = this.#blocks[blockIdx];\n    if (!block) {\n      return 0n;\n    }\n    return BigInt(block.buffer.byteLength);\n  }\n\n  setError(err: string | Error | null = null) {\n    const blockIdx = err ? this[STORE](err instanceof Error ? err.message : err) : 0;\n    if (!blockIdx) {\n      throw new Error('could not store error value');\n    }\n\n    this.#stack[this.#stack.length - 1][2] = blockIdx;\n  }\n\n  get logLevel(): LogLevel {\n    return priorityToLogLevel(this.#logLevel);\n  }\n\n  set logLevel(v: LogLevel) {\n    this.#logLevel = logLevelToPriority(v);\n  }\n\n  /** @hidden */\n  [ENV]: Record<string, CallableFunction> = {\n    alloc: (n: bigint): bigint => {\n      return this.alloc(n);\n    },\n\n    free: (addr: number | bigint): void => {\n      this.#blocks[Block.addressToIndex(addr)] = null;\n    },\n\n    load_u8: (addr: bigint): number => {\n      const blockIdx = Block.addressToIndex(addr);\n      const offset = Block.maskAddress(addr);\n      const block = this.#blocks[blockIdx];\n      return block?.view.getUint8(Number(offset)) as number;\n    },\n\n    load_u64: (addr: bigint): bigint => {\n      const blockIdx = Block.addressToIndex(addr);\n      const offset = Block.maskAddress(addr);\n      const block = this.#blocks[blockIdx];\n      return block?.view.getBigUint64(Number(offset), true) as bigint;\n    },\n\n    store_u8: (addr: bigint, n: number): void => {\n      const blockIdx = Block.addressToIndex(addr);\n      const offset = Block.maskAddress(addr);\n      const block = this.#blocks[blockIdx];\n      block?.view.setUint8(Number(offset), Number(n));\n    },\n\n    store_u64: (addr: bigint, n: bigint): void => {\n      const blockIdx = Block.addressToIndex(addr);\n      const offset = Block.maskAddress(addr);\n      const block = this.#blocks[blockIdx];\n      block?.view.setBigUint64(Number(offset), n, true);\n    },\n\n    input_offset: (): bigint => {\n      const blockIdx = this.#stack[this.#stack.length - 1][0];\n      return Block.indexToAddress(blockIdx || 0);\n    },\n\n    input_length: (): bigint => {\n      return BigInt(this.#input?.byteLength ?? 0);\n    },\n\n    input_load_u8: (addr: bigint): number => {\n      const offset = Block.maskAddress(addr);\n      return this.#input?.view.getUint8(Number(offset)) as number;\n    },\n\n    input_load_u64: (addr: bigint): bigint => {\n      const offset = Block.maskAddress(addr);\n      return this.#input?.view.getBigUint64(Number(offset), true) as bigint;\n    },\n\n    output_set: (addr: bigint, length: bigint): void => {\n      const blockIdx = Block.addressToIndex(addr);\n      const block = this.#blocks[blockIdx];\n      if (!block) {\n        throw new Error(`cannot assign to this block (addr=${addr.toString(16).padStart(16, '0')}; length=${length})`);\n      }\n\n      if (length > block.buffer.byteLength) {\n        throw new Error('length longer than target block');\n      }\n\n      this.#stack[this.#stack.length - 1][1] = blockIdx;\n    },\n\n    error_set: (addr: bigint): void => {\n      const blockIdx = Block.addressToIndex(addr);\n      const block = this.#blocks[blockIdx];\n      if (!block) {\n        throw new Error('cannot assign error to this block');\n      }\n\n      this.#stack[this.#stack.length - 1][2] = blockIdx;\n    },\n\n    error_get: (): bigint => {\n      const error = this.#stack[this.#stack.length - 1][2];\n      if (error) {\n        return Block.indexToAddress(error);\n      }\n      return 0n;\n    },\n\n    config_get: (addr: bigint): bigint => {\n      const item = this.read(addr);\n\n      if (item === null) {\n        return 0n;\n      }\n\n      try {\n        const key = item.string();\n        if (key in this.#config) {\n          return this.store(this.#config[key]);\n        }\n      } finally {\n        this[ENV].free(addr);\n      }\n\n      return 0n;\n    },\n\n    var_get: (addr: bigint): bigint => {\n      const item = this.read(addr);\n\n      if (item === null) {\n        return 0n;\n      }\n\n      try {\n        const key = item.string();\n\n        const result = this.getVariable(key);\n        const stored = result ? this[STORE](result.bytes()) || 0 : 0;\n        return Block.indexToAddress(stored);\n      } finally {\n        this[ENV].free(addr);\n      }\n    },\n\n    var_set: (addr: bigint, valueaddr: bigint): void => {\n      const item = this.read(addr);\n\n      if (item === null) {\n        this.#logger.error(`attempted to set variable using invalid key address (addr=\"${addr.toString(16)}H\")`);\n        return;\n      }\n\n      const key = item.string();\n\n      if (valueaddr === 0n) {\n        this.deleteVariable(key);\n        return;\n      }\n\n      const valueBlock = this.#blocks[Block.addressToIndex(valueaddr)];\n      if (!valueBlock) {\n        this.#logger.error(\n          `attempted to set variable to invalid address (key=\"${key}\"; addr=\"${valueaddr.toString(16)}H\")`,\n        );\n        return;\n      }\n\n      try {\n        // Copy the variable value out of the block for TWO reasons:\n        // 1. Variables outlive blocks -- blocks are reset after each invocation.\n        // 2. If the block is backed by a SharedArrayBuffer, we can't read text out of it directly (in many browser contexts.)\n        const copied = new Uint8Array(valueBlock.buffer.byteLength);\n        copied.set(new Uint8Array(valueBlock.buffer), 0);\n        this.setVariable(key, copied);\n      } catch (err: any) {\n        this.#logger.error(err.message);\n        this.setError(err);\n        return;\n      }\n    },\n\n    http_request: (_requestOffset: bigint, _bodyOffset: bigint): bigint => {\n      this.#logger.error('http_request is not enabled');\n      return 0n;\n    },\n\n    http_status_code: (): number => {\n      this.#logger.error('http_status_code is not enabled');\n      return 0;\n    },\n\n    http_headers: (): bigint => {\n      this.#logger.error('http_headers is not enabled');\n      return 0n;\n    },\n\n    length: (addr: bigint): bigint => {\n      return this.length(addr);\n    },\n\n    length_unsafe: (addr: bigint): bigint => {\n      return this.length(addr);\n    },\n\n    log_warn: this.#handleLog.bind(this, logLevelToPriority('warn'), 'warn'),\n    log_info: this.#handleLog.bind(this, logLevelToPriority('info'), 'info'),\n    log_debug: this.#handleLog.bind(this, logLevelToPriority('debug'), 'debug'),\n    log_error: this.#handleLog.bind(this, logLevelToPriority('error'), 'error'),\n    log_trace: this.#handleLog.bind(this, logLevelToPriority('trace'), 'trace'),\n\n    get_log_level: (): number => {\n      return isFinite(this.#logLevel) ? this.#logLevel : 0xffff_ffff;\n    },\n  };\n\n  /** @hidden */\n  #handleLog(incomingLevel: LogLevelPriority, level: LogLevel, addr: bigint) {\n    const blockIdx = Block.addressToIndex(addr);\n    const block = this.#blocks[blockIdx];\n    if (!block) {\n      this.#logger.error(\n        `failed to log(${level}): bad block reference in addr 0x${addr.toString(16).padStart(64, '0')}`,\n      );\n      return;\n    }\n    try {\n      if (this.#logLevel <= incomingLevel) {\n        const text = this.#decoder.decode(block.buffer);\n        (this.#logger[level as keyof Console] as any)(text);\n      }\n    } finally {\n      this.#blocks[blockIdx] = null;\n    }\n  }\n\n  /** @hidden */\n  get #input(): Block | null {\n    const idx = this.#stack[this.#stack.length - 1][0];\n    if (idx === null) {\n      return null;\n    }\n    return this.#blocks[idx];\n  }\n\n  /** @hidden */\n  [RESET]() {\n    this.#hostContext = null;\n\n    // preserve the null page.\n    this.#blocks.length = 1;\n\n    // ... but dump the stack items.\n    this.#stack.length = 0;\n  }\n\n  /** @hidden */\n  [GET_BLOCK](index: number): Block {\n    const block = this.#blocks[index];\n    if (!block) {\n      throw new Error(`invalid block index: ${index}`);\n    }\n    return block;\n  }\n\n  /** @hidden */\n  [IMPORT_STATE](state: CallState, copy: boolean = false) {\n    // eslint-disable-next-line prefer-const\n    for (let [buf, idx] of state.blocks) {\n      if (buf && copy) {\n        const dst = new Uint8Array(new this.#arrayBufferType(Number(buf.byteLength)));\n        dst.set(new Uint8Array(buf));\n        buf = dst.buffer;\n      }\n      this.#blocks[idx] = buf ? new Block(buf, false) : null;\n    }\n    this.#stack = state.stack;\n  }\n\n  /** @hidden */\n  [EXPORT_STATE](): CallState {\n    return {\n      stack: this.#stack.slice(),\n      blocks: this.#blocks\n        .map((block, idx) => {\n          if (!block) {\n            return [null, idx];\n          }\n\n          if (block.local) {\n            block.local = false;\n            return [block.buffer, idx];\n          }\n          return null;\n        })\n        .filter(Boolean) as [ArrayBufferLike, number][],\n    };\n  }\n\n  /** @hidden */\n  [STORE](input?: string | Uint8Array): number | null {\n    if (typeof input === 'string') {\n      input = this.#encoder.encode(input);\n    }\n\n    if (!input) {\n      return null;\n    }\n\n    if (input instanceof Uint8Array) {\n      if (\n        input.buffer.constructor === this.#arrayBufferType &&\n        input.byteOffset === 0 &&\n        input.byteLength === input.buffer.byteLength\n      ) {\n        // no action necessary, wrap it up in a block\n        const idx = this.#blocks.length;\n        this.#blocks.push(new Block(input.buffer, true));\n        return idx;\n      }\n      const idx = Block.addressToIndex(this.alloc(input.length));\n      const block = this.#blocks[idx] as Block;\n      const buf = new Uint8Array(block.buffer);\n      buf.set(input, 0);\n      return idx;\n    }\n\n    return input;\n  }\n\n  /** @hidden */\n  [SET_HOST_CONTEXT](hostContext: any) {\n    this.#hostContext = hostContext;\n  }\n\n  /** @hidden */\n  [BEGIN](input: number | null) {\n    this.#stack.push([input, null, null]);\n  }\n\n  /** @hidden */\n  [END](): [number | null, number | null] {\n    this.#hostContext = null;\n    const [, outputIdx, errorIdx] = this.#stack.pop() as (number | null)[];\n    const outputPosition = errorIdx === null ? 1 : 0;\n    const idx = errorIdx ?? outputIdx;\n    const result: [number | null, number | null] = [null, null];\n\n    if (idx === null) {\n      return result;\n    }\n\n    const block = this.#blocks[idx];\n\n    if (block === null) {\n      // TODO: this might be an error? we got an output idx but it referred to a freed (or non-existant) block\n      return result;\n    }\n\n    result[outputPosition] = idx;\n\n    return result;\n  }\n}\n", "export const FD_STDIN=0;export const FD_STDOUT=1;export const FD_STDERR=2;export const CLOCKID_REALTIME=0;export const CLOCKID_MONOTONIC=1;export const CLOCKID_PROCESS_CPUTIME_ID=2;export const CLOCKID_THREAD_CPUTIME_ID=3;export const ERRNO_SUCCESS=0;export const ERRNO_2BIG=1;export const ERRNO_ACCES=2;export const ERRNO_ADDRINUSE=3;export const ERRNO_ADDRNOTAVAIL=4;export const ERRNO_AFNOSUPPORT=5;export const ERRNO_AGAIN=6;export const ERRNO_ALREADY=7;export const ERRNO_BADF=8;export const ERRNO_BADMSG=9;export const ERRNO_BUSY=10;export const ERRNO_CANCELED=11;export const ERRNO_CHILD=12;export const ERRNO_CONNABORTED=13;export const ERRNO_CONNREFUSED=14;export const ERRNO_CONNRESET=15;export const ERRNO_DEADLK=16;export const ERRNO_DESTADDRREQ=17;export const ERRNO_DOM=18;export const ERRNO_DQUOT=19;export const ERRNO_EXIST=20;export const ERRNO_FAULT=21;export const ERRNO_FBIG=22;export const ERRNO_HOSTUNREACH=23;export const ERRNO_IDRM=24;export const ERRNO_ILSEQ=25;export const ERRNO_INPROGRESS=26;export const ERRNO_INTR=27;export const ERRNO_INVAL=28;export const ERRNO_IO=29;export const ERRNO_ISCONN=30;export const ERRNO_ISDIR=31;export const ERRNO_LOOP=32;export const ERRNO_MFILE=33;export const ERRNO_MLINK=34;export const ERRNO_MSGSIZE=35;export const ERRNO_MULTIHOP=36;export const ERRNO_NAMETOOLONG=37;export const ERRNO_NETDOWN=38;export const ERRNO_NETRESET=39;export const ERRNO_NETUNREACH=40;export const ERRNO_NFILE=41;export const ERRNO_NOBUFS=42;export const ERRNO_NODEV=43;export const ERRNO_NOENT=44;export const ERRNO_NOEXEC=45;export const ERRNO_NOLCK=46;export const ERRNO_NOLINK=47;export const ERRNO_NOMEM=48;export const ERRNO_NOMSG=49;export const ERRNO_NOPROTOOPT=50;export const ERRNO_NOSPC=51;export const ERRNO_NOSYS=52;export const ERRNO_NOTCONN=53;export const ERRNO_NOTDIR=54;export const ERRNO_NOTEMPTY=55;export const ERRNO_NOTRECOVERABLE=56;export const ERRNO_NOTSOCK=57;export const ERRNO_NOTSUP=58;export const ERRNO_NOTTY=59;export const ERRNO_NXIO=60;export const ERRNO_OVERFLOW=61;export const ERRNO_OWNERDEAD=62;export const ERRNO_PERM=63;export const ERRNO_PIPE=64;export const ERRNO_PROTO=65;export const ERRNO_PROTONOSUPPORT=66;export const ERRNO_PROTOTYPE=67;export const ERRNO_RANGE=68;export const ERRNO_ROFS=69;export const ERRNO_SPIPE=70;export const ERRNO_SRCH=71;export const ERRNO_STALE=72;export const ERRNO_TIMEDOUT=73;export const ERRNO_TXTBSY=74;export const ERRNO_XDEV=75;export const ERRNO_NOTCAPABLE=76;export const RIGHTS_FD_DATASYNC=1<<0;export const RIGHTS_FD_READ=1<<1;export const RIGHTS_FD_SEEK=1<<2;export const RIGHTS_FD_FDSTAT_SET_FLAGS=1<<3;export const RIGHTS_FD_SYNC=1<<4;export const RIGHTS_FD_TELL=1<<5;export const RIGHTS_FD_WRITE=1<<6;export const RIGHTS_FD_ADVISE=1<<7;export const RIGHTS_FD_ALLOCATE=1<<8;export const RIGHTS_PATH_CREATE_DIRECTORY=1<<9;export const RIGHTS_PATH_CREATE_FILE=1<<10;export const RIGHTS_PATH_LINK_SOURCE=1<<11;export const RIGHTS_PATH_LINK_TARGET=1<<12;export const RIGHTS_PATH_OPEN=1<<13;export const RIGHTS_FD_READDIR=1<<14;export const RIGHTS_PATH_READLINK=1<<15;export const RIGHTS_PATH_RENAME_SOURCE=1<<16;export const RIGHTS_PATH_RENAME_TARGET=1<<17;export const RIGHTS_PATH_FILESTAT_GET=1<<18;export const RIGHTS_PATH_FILESTAT_SET_SIZE=1<<19;export const RIGHTS_PATH_FILESTAT_SET_TIMES=1<<20;export const RIGHTS_FD_FILESTAT_GET=1<<21;export const RIGHTS_FD_FILESTAT_SET_SIZE=1<<22;export const RIGHTS_FD_FILESTAT_SET_TIMES=1<<23;export const RIGHTS_PATH_SYMLINK=1<<24;export const RIGHTS_PATH_REMOVE_DIRECTORY=1<<25;export const RIGHTS_PATH_UNLINK_FILE=1<<26;export const RIGHTS_POLL_FD_READWRITE=1<<27;export const RIGHTS_SOCK_SHUTDOWN=1<<28;export class Iovec{static read_bytes(view,ptr){const iovec=new Iovec;iovec.buf=view.getUint32(ptr,true);iovec.buf_len=view.getUint32(ptr+4,true);return iovec}static read_bytes_array(view,ptr,len){const iovecs=[];for(let i=0;i<len;i++){iovecs.push(Iovec.read_bytes(view,ptr+8*i))}return iovecs}}export class Ciovec{static read_bytes(view,ptr){const iovec=new Ciovec;iovec.buf=view.getUint32(ptr,true);iovec.buf_len=view.getUint32(ptr+4,true);return iovec}static read_bytes_array(view,ptr,len){const iovecs=[];for(let i=0;i<len;i++){iovecs.push(Ciovec.read_bytes(view,ptr+8*i))}return iovecs}}export const WHENCE_SET=0;export const WHENCE_CUR=1;export const WHENCE_END=2;export const FILETYPE_UNKNOWN=0;export const FILETYPE_BLOCK_DEVICE=1;export const FILETYPE_CHARACTER_DEVICE=2;export const FILETYPE_DIRECTORY=3;export const FILETYPE_REGULAR_FILE=4;export const FILETYPE_SOCKET_DGRAM=5;export const FILETYPE_SOCKET_STREAM=6;export const FILETYPE_SYMBOLIC_LINK=7;export class Dirent{head_length(){return 24}name_length(){return this.dir_name.byteLength}write_head_bytes(view,ptr){view.setBigUint64(ptr,this.d_next,true);view.setBigUint64(ptr+8,this.d_ino,true);view.setUint32(ptr+16,this.dir_name.length,true);view.setUint8(ptr+20,this.d_type)}write_name_bytes(view8,ptr,buf_len){view8.set(this.dir_name.slice(0,Math.min(this.dir_name.byteLength,buf_len)),ptr)}constructor(next_cookie,name,type){this.d_ino=1n;const encoded_name=new TextEncoder().encode(name);this.d_next=next_cookie;this.d_namlen=encoded_name.byteLength;this.d_type=type;this.dir_name=encoded_name}}export const ADVICE_NORMAL=0;export const ADVICE_SEQUENTIAL=1;export const ADVICE_RANDOM=2;export const ADVICE_WILLNEED=3;export const ADVICE_DONTNEED=4;export const ADVICE_NOREUSE=5;export const FDFLAGS_APPEND=1<<0;export const FDFLAGS_DSYNC=1<<1;export const FDFLAGS_NONBLOCK=1<<2;export const FDFLAGS_RSYNC=1<<3;export const FDFLAGS_SYNC=1<<4;export class Fdstat{write_bytes(view,ptr){view.setUint8(ptr,this.fs_filetype);view.setUint16(ptr+2,this.fs_flags,true);view.setBigUint64(ptr+8,this.fs_rights_base,true);view.setBigUint64(ptr+16,this.fs_rights_inherited,true)}constructor(filetype,flags){this.fs_rights_base=0n;this.fs_rights_inherited=0n;this.fs_filetype=filetype;this.fs_flags=flags}}export const FSTFLAGS_ATIM=1<<0;export const FSTFLAGS_ATIM_NOW=1<<1;export const FSTFLAGS_MTIM=1<<2;export const FSTFLAGS_MTIM_NOW=1<<3;export const OFLAGS_CREAT=1<<0;export const OFLAGS_DIRECTORY=1<<1;export const OFLAGS_EXCL=1<<2;export const OFLAGS_TRUNC=1<<3;export class Filestat{write_bytes(view,ptr){view.setBigUint64(ptr,this.dev,true);view.setBigUint64(ptr+8,this.ino,true);view.setUint8(ptr+16,this.filetype);view.setBigUint64(ptr+24,this.nlink,true);view.setBigUint64(ptr+32,this.size,true);view.setBigUint64(ptr+38,this.atim,true);view.setBigUint64(ptr+46,this.mtim,true);view.setBigUint64(ptr+52,this.ctim,true)}constructor(filetype,size){this.dev=0n;this.ino=0n;this.nlink=0n;this.atim=0n;this.mtim=0n;this.ctim=0n;this.filetype=filetype;this.size=size}}export const EVENTTYPE_CLOCK=0;export const EVENTTYPE_FD_READ=1;export const EVENTTYPE_FD_WRITE=2;export const EVENTRWFLAGS_FD_READWRITE_HANGUP=1<<0;export const SUBCLOCKFLAGS_SUBSCRIPTION_CLOCK_ABSTIME=1<<0;export const SIGNAL_NONE=0;export const SIGNAL_HUP=1;export const SIGNAL_INT=2;export const SIGNAL_QUIT=3;export const SIGNAL_ILL=4;export const SIGNAL_TRAP=5;export const SIGNAL_ABRT=6;export const SIGNAL_BUS=7;export const SIGNAL_FPE=8;export const SIGNAL_KILL=9;export const SIGNAL_USR1=10;export const SIGNAL_SEGV=11;export const SIGNAL_USR2=12;export const SIGNAL_PIPE=13;export const SIGNAL_ALRM=14;export const SIGNAL_TERM=15;export const SIGNAL_CHLD=16;export const SIGNAL_CONT=17;export const SIGNAL_STOP=18;export const SIGNAL_TSTP=19;export const SIGNAL_TTIN=20;export const SIGNAL_TTOU=21;export const SIGNAL_URG=22;export const SIGNAL_XCPU=23;export const SIGNAL_XFSZ=24;export const SIGNAL_VTALRM=25;export const SIGNAL_PROF=26;export const SIGNAL_WINCH=27;export const SIGNAL_POLL=28;export const SIGNAL_PWR=29;export const SIGNAL_SYS=30;export const RIFLAGS_RECV_PEEK=1<<0;export const RIFLAGS_RECV_WAITALL=1<<1;export const ROFLAGS_RECV_DATA_TRUNCATED=1<<0;export const SDFLAGS_RD=1<<0;export const SDFLAGS_WR=1<<1;export const PREOPENTYPE_DIR=0;export class PrestatDir{write_bytes(view,ptr){view.setUint32(ptr,this.pr_name_len,true)}constructor(name_len){this.pr_name_len=name_len}}export class Prestat{static dir(name_len){const prestat=new Prestat;prestat.tag=PREOPENTYPE_DIR;prestat.inner=new PrestatDir(name_len);return prestat}write_bytes(view,ptr){view.setUint32(ptr,this.tag,true);this.inner.write_bytes(view,ptr+4)}}", "let Debug=class Debug{enable(enabled){this.log=createLogger(enabled===undefined?true:enabled,this.prefix)}get enabled(){return this.isEnabled}constructor(isEnabled){this.isEnabled=isEnabled;this.prefix=\"wasi:\";this.enable(isEnabled)}};function createLogger(enabled,prefix){if(enabled){const a=console.log.bind(console,\"%c%s\",\"color: #265BA0\",prefix);return a}else{return()=>{}}}export const debug=new Debug(false);", "import*as wasi from\"./wasi_defs.js\";import{debug}from\"./debug.js\";export class WASIProcExit extends Error{constructor(code){super(\"exit with exit code \"+code);this.code=code}}let WASI=class WASI{start(instance){this.inst=instance;try{instance.exports._start()}catch(e){if(e instanceof WASIProcExit){return e.code}else{throw e}}}initialize(instance){this.inst=instance;instance.exports._initialize()}constructor(args,env,fds,options={}){this.args=[];this.env=[];this.fds=[];debug.enable(options.debug);this.args=args;this.env=env;this.fds=fds;const self=this;this.wasiImport={args_sizes_get(argc,argv_buf_size){const buffer=new DataView(self.inst.exports.memory.buffer);buffer.setUint32(argc,self.args.length,true);let buf_size=0;for(const arg of self.args){buf_size+=arg.length+1}buffer.setUint32(argv_buf_size,buf_size,true);debug.log(buffer.getUint32(argc,true),buffer.getUint32(argv_buf_size,true));return 0},args_get(argv,argv_buf){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);const orig_argv_buf=argv_buf;for(let i=0;i<self.args.length;i++){buffer.setUint32(argv,argv_buf,true);argv+=4;const arg=new TextEncoder().encode(self.args[i]);buffer8.set(arg,argv_buf);buffer.setUint8(argv_buf+arg.length,0);argv_buf+=arg.length+1}if(debug.enabled){debug.log(new TextDecoder(\"utf-8\").decode(buffer8.slice(orig_argv_buf,argv_buf)))}return 0},environ_sizes_get(environ_count,environ_size){const buffer=new DataView(self.inst.exports.memory.buffer);buffer.setUint32(environ_count,self.env.length,true);let buf_size=0;for(const environ of self.env){buf_size+=environ.length+1}buffer.setUint32(environ_size,buf_size,true);debug.log(buffer.getUint32(environ_count,true),buffer.getUint32(environ_size,true));return 0},environ_get(environ,environ_buf){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);const orig_environ_buf=environ_buf;for(let i=0;i<self.env.length;i++){buffer.setUint32(environ,environ_buf,true);environ+=4;const e=new TextEncoder().encode(self.env[i]);buffer8.set(e,environ_buf);buffer.setUint8(environ_buf+e.length,0);environ_buf+=e.length+1}if(debug.enabled){debug.log(new TextDecoder(\"utf-8\").decode(buffer8.slice(orig_environ_buf,environ_buf)))}return 0},clock_res_get(id,res_ptr){let resolutionValue;switch(id){case wasi.CLOCKID_MONOTONIC:{resolutionValue=5000n;break}case wasi.CLOCKID_REALTIME:{resolutionValue=1000000n;break}default:return wasi.ERRNO_NOSYS}const view=new DataView(self.inst.exports.memory.buffer);view.setBigUint64(res_ptr,resolutionValue,true);return wasi.ERRNO_SUCCESS},clock_time_get(id,precision,time){const buffer=new DataView(self.inst.exports.memory.buffer);if(id===wasi.CLOCKID_REALTIME){buffer.setBigUint64(time,BigInt(new Date().getTime())*1000000n,true)}else if(id==wasi.CLOCKID_MONOTONIC){let monotonic_time;try{monotonic_time=BigInt(Math.round(performance.now()*1e6))}catch(e){monotonic_time=0n}buffer.setBigUint64(time,monotonic_time,true)}else{buffer.setBigUint64(time,0n,true)}return 0},fd_advise(fd,offset,len,advice){if(self.fds[fd]!=undefined){return self.fds[fd].fd_advise(offset,len,advice)}else{return wasi.ERRNO_BADF}},fd_allocate(fd,offset,len){if(self.fds[fd]!=undefined){return self.fds[fd].fd_allocate(offset,len)}else{return wasi.ERRNO_BADF}},fd_close(fd){if(self.fds[fd]!=undefined){const ret=self.fds[fd].fd_close();self.fds[fd]=undefined;return ret}else{return wasi.ERRNO_BADF}},fd_datasync(fd){if(self.fds[fd]!=undefined){return self.fds[fd].fd_datasync()}else{return wasi.ERRNO_BADF}},fd_fdstat_get(fd,fdstat_ptr){if(self.fds[fd]!=undefined){const{ret,fdstat}=self.fds[fd].fd_fdstat_get();if(fdstat!=null){fdstat.write_bytes(new DataView(self.inst.exports.memory.buffer),fdstat_ptr)}return ret}else{return wasi.ERRNO_BADF}},fd_fdstat_set_flags(fd,flags){if(self.fds[fd]!=undefined){return self.fds[fd].fd_fdstat_set_flags(flags)}else{return wasi.ERRNO_BADF}},fd_fdstat_set_rights(fd,fs_rights_base,fs_rights_inheriting){if(self.fds[fd]!=undefined){return self.fds[fd].fd_fdstat_set_rights(fs_rights_base,fs_rights_inheriting)}else{return wasi.ERRNO_BADF}},fd_filestat_get(fd,filestat_ptr){if(self.fds[fd]!=undefined){const{ret,filestat}=self.fds[fd].fd_filestat_get();if(filestat!=null){filestat.write_bytes(new DataView(self.inst.exports.memory.buffer),filestat_ptr)}return ret}else{return wasi.ERRNO_BADF}},fd_filestat_set_size(fd,size){if(self.fds[fd]!=undefined){return self.fds[fd].fd_filestat_set_size(size)}else{return wasi.ERRNO_BADF}},fd_filestat_set_times(fd,atim,mtim,fst_flags){if(self.fds[fd]!=undefined){return self.fds[fd].fd_filestat_set_times(atim,mtim,fst_flags)}else{return wasi.ERRNO_BADF}},fd_pread(fd,iovs_ptr,iovs_len,offset,nread_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const iovecs=wasi.Iovec.read_bytes_array(buffer,iovs_ptr,iovs_len);const{ret,nread}=self.fds[fd].fd_pread(buffer8,iovecs,offset);buffer.setUint32(nread_ptr,nread,true);return ret}else{return wasi.ERRNO_BADF}},fd_prestat_get(fd,buf_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const{ret,prestat}=self.fds[fd].fd_prestat_get();if(prestat!=null){prestat.write_bytes(buffer,buf_ptr)}return ret}else{return wasi.ERRNO_BADF}},fd_prestat_dir_name(fd,path_ptr,path_len){if(self.fds[fd]!=undefined){const{ret,prestat_dir_name}=self.fds[fd].fd_prestat_dir_name();if(prestat_dir_name!=null){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);buffer8.set(prestat_dir_name,path_ptr)}return ret}else{return wasi.ERRNO_BADF}},fd_pwrite(fd,iovs_ptr,iovs_len,offset,nwritten_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const iovecs=wasi.Ciovec.read_bytes_array(buffer,iovs_ptr,iovs_len);const{ret,nwritten}=self.fds[fd].fd_pwrite(buffer8,iovecs,offset);buffer.setUint32(nwritten_ptr,nwritten,true);return ret}else{return wasi.ERRNO_BADF}},fd_read(fd,iovs_ptr,iovs_len,nread_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const iovecs=wasi.Iovec.read_bytes_array(buffer,iovs_ptr,iovs_len);const{ret,nread}=self.fds[fd].fd_read(buffer8,iovecs);buffer.setUint32(nread_ptr,nread,true);return ret}else{return wasi.ERRNO_BADF}},fd_readdir(fd,buf,buf_len,cookie,bufused_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){let bufused=0;while(true){const{ret,dirent}=self.fds[fd].fd_readdir_single(cookie);if(ret!=0){buffer.setUint32(bufused_ptr,bufused,true);return ret}if(dirent==null){break}if(buf_len-bufused<dirent.head_length()){bufused=buf_len;break}const head_bytes=new ArrayBuffer(dirent.head_length());dirent.write_head_bytes(new DataView(head_bytes),0);buffer8.set(new Uint8Array(head_bytes).slice(0,Math.min(head_bytes.byteLength,buf_len-bufused)),buf);buf+=dirent.head_length();bufused+=dirent.head_length();if(buf_len-bufused<dirent.name_length()){bufused=buf_len;break}dirent.write_name_bytes(buffer8,buf,buf_len-bufused);buf+=dirent.name_length();bufused+=dirent.name_length();cookie=dirent.d_next}buffer.setUint32(bufused_ptr,bufused,true);return 0}else{return wasi.ERRNO_BADF}},fd_renumber(fd,to){if(self.fds[fd]!=undefined&&self.fds[to]!=undefined){const ret=self.fds[to].fd_close();if(ret!=0){return ret}self.fds[to]=self.fds[fd];self.fds[fd]=undefined;return 0}else{return wasi.ERRNO_BADF}},fd_seek(fd,offset,whence,offset_out_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const{ret,offset:offset_out}=self.fds[fd].fd_seek(offset,whence);buffer.setBigInt64(offset_out_ptr,offset_out,true);return ret}else{return wasi.ERRNO_BADF}},fd_sync(fd){if(self.fds[fd]!=undefined){return self.fds[fd].fd_sync()}else{return wasi.ERRNO_BADF}},fd_tell(fd,offset_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const{ret,offset}=self.fds[fd].fd_tell();buffer.setBigUint64(offset_ptr,offset,true);return ret}else{return wasi.ERRNO_BADF}},fd_write(fd,iovs_ptr,iovs_len,nwritten_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const iovecs=wasi.Ciovec.read_bytes_array(buffer,iovs_ptr,iovs_len);const{ret,nwritten}=self.fds[fd].fd_write(buffer8,iovecs);buffer.setUint32(nwritten_ptr,nwritten,true);return ret}else{return wasi.ERRNO_BADF}},path_create_directory(fd,path_ptr,path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));return self.fds[fd].path_create_directory(path)}},path_filestat_get(fd,flags,path_ptr,path_len,filestat_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));const{ret,filestat}=self.fds[fd].path_filestat_get(flags,path);if(filestat!=null){filestat.write_bytes(buffer,filestat_ptr)}return ret}else{return wasi.ERRNO_BADF}},path_filestat_set_times(fd,flags,path_ptr,path_len,atim,mtim,fst_flags){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));return self.fds[fd].path_filestat_set_times(flags,path,atim,mtim,fst_flags)}else{return wasi.ERRNO_BADF}},path_link(old_fd,old_flags,old_path_ptr,old_path_len,new_fd,new_path_ptr,new_path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[old_fd]!=undefined&&self.fds[new_fd]!=undefined){const old_path=new TextDecoder(\"utf-8\").decode(buffer8.slice(old_path_ptr,old_path_ptr+old_path_len));const new_path=new TextDecoder(\"utf-8\").decode(buffer8.slice(new_path_ptr,new_path_ptr+new_path_len));return self.fds[new_fd].path_link(old_fd,old_flags,old_path,new_path)}else{return wasi.ERRNO_BADF}},path_open(fd,dirflags,path_ptr,path_len,oflags,fs_rights_base,fs_rights_inheriting,fd_flags,opened_fd_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));debug.log(path);const{ret,fd_obj}=self.fds[fd].path_open(dirflags,path,oflags,fs_rights_base,fs_rights_inheriting,fd_flags);if(ret!=0){return ret}self.fds.push(fd_obj);const opened_fd=self.fds.length-1;buffer.setUint32(opened_fd_ptr,opened_fd,true);return 0}else{return wasi.ERRNO_BADF}},path_readlink(fd,path_ptr,path_len,buf_ptr,buf_len,nread_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));debug.log(path);const{ret,data}=self.fds[fd].path_readlink(path);if(data!=null){if(data.length>buf_len){buffer.setUint32(nread_ptr,0,true);return wasi.ERRNO_BADF}buffer8.set(data,buf_ptr);buffer.setUint32(nread_ptr,data.length,true)}return ret}else{return wasi.ERRNO_BADF}},path_remove_directory(fd,path_ptr,path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));return self.fds[fd].path_remove_directory(path)}else{return wasi.ERRNO_BADF}},path_rename(fd,old_path_ptr,old_path_len,new_fd,new_path_ptr,new_path_len){throw\"FIXME what is the best abstraction for this?\"},path_symlink(old_path_ptr,old_path_len,fd,new_path_ptr,new_path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const old_path=new TextDecoder(\"utf-8\").decode(buffer8.slice(old_path_ptr,old_path_ptr+old_path_len));const new_path=new TextDecoder(\"utf-8\").decode(buffer8.slice(new_path_ptr,new_path_ptr+new_path_len));return self.fds[fd].path_symlink(old_path,new_path)}else{return wasi.ERRNO_BADF}},path_unlink_file(fd,path_ptr,path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));return self.fds[fd].path_unlink_file(path)}else{return wasi.ERRNO_BADF}},poll_oneoff(in_,out,nsubscriptions){throw\"async io not supported\"},proc_exit(exit_code){throw new WASIProcExit(exit_code)},proc_raise(sig){throw\"raised signal \"+sig},sched_yield(){},random_get(buf,buf_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);for(let i=0;i<buf_len;i++){buffer8[buf+i]=Math.random()*256|0}},sock_recv(fd,ri_data,ri_flags){throw\"sockets not supported\"},sock_send(fd,si_data,si_flags){throw\"sockets not supported\"},sock_shutdown(fd,how){throw\"sockets not supported\"},sock_accept(fd,flags){throw\"sockets not supported\"}}}};export{WASI as default};", "import*as wasi from\"./wasi_defs.js\";export class Fd{fd_advise(offset,len,advice){return wasi.ERRNO_NOTSUP}fd_allocate(offset,len){return wasi.ERRNO_NOTSUP}fd_close(){return 0}fd_datasync(){return wasi.ERRNO_NOTSUP}fd_fdstat_get(){return{ret:wasi.ERRNO_NOTSUP,fdstat:null}}fd_fdstat_set_flags(flags){return wasi.ERRNO_NOTSUP}fd_fdstat_set_rights(fs_rights_base,fs_rights_inheriting){return wasi.ERRNO_NOTSUP}fd_filestat_get(){return{ret:wasi.ERRNO_NOTSUP,filestat:null}}fd_filestat_set_size(size){return wasi.ERRNO_NOTSUP}fd_filestat_set_times(atim,mtim,fst_flags){return wasi.ERRNO_NOTSUP}fd_pread(view8,iovs,offset){return{ret:wasi.ERRNO_NOTSUP,nread:0}}fd_prestat_get(){return{ret:wasi.ERRNO_NOTSUP,prestat:null}}fd_prestat_dir_name(){return{ret:wasi.ERRNO_NOTSUP,prestat_dir_name:null}}fd_pwrite(view8,iovs,offset){return{ret:wasi.ERRNO_NOTSUP,nwritten:0}}fd_read(view8,iovs){return{ret:wasi.ERRNO_NOTSUP,nread:0}}fd_readdir_single(cookie){return{ret:wasi.ERRNO_NOTSUP,dirent:null}}fd_seek(offset,whence){return{ret:wasi.ERRNO_NOTSUP,offset:0n}}fd_sync(){return 0}fd_tell(){return{ret:wasi.ERRNO_NOTSUP,offset:0n}}fd_write(view8,iovs){return{ret:wasi.ERRNO_NOTSUP,nwritten:0}}path_create_directory(path){return wasi.ERRNO_NOTSUP}path_filestat_get(flags,path){return{ret:wasi.ERRNO_NOTSUP,filestat:null}}path_filestat_set_times(flags,path,atim,mtim,fst_flags){return wasi.ERRNO_NOTSUP}path_link(old_fd,old_flags,old_path,new_path){return wasi.ERRNO_NOTSUP}path_open(dirflags,path,oflags,fs_rights_base,fs_rights_inheriting,fdflags){return{ret:wasi.ERRNO_NOTSUP,fd_obj:null}}path_readlink(path){return{ret:wasi.ERRNO_NOTSUP,data:null}}path_remove_directory(path){return wasi.ERRNO_NOTSUP}path_rename(old_path,new_fd,new_path){return wasi.ERRNO_NOTSUP}path_symlink(old_path,new_path){return wasi.ERRNO_NOTSUP}path_unlink_file(path){return wasi.ERRNO_NOTSUP}}", "import{debug}from\"./debug.js\";import*as wasi from\"./wasi_defs.js\";import{Fd}from\"./fd.js\";export class OpenFile extends Fd{fd_fdstat_get(){return{ret:0,fdstat:new wasi.Fdstat(wasi.FILETYPE_REGULAR_FILE,0)}}fd_read(view8,iovs){let nread=0;for(const iovec of iovs){if(this.file_pos<this.file.data.byteLength){const slice=this.file.data.slice(Number(this.file_pos),Number(this.file_pos+BigInt(iovec.buf_len)));view8.set(slice,iovec.buf);this.file_pos+=BigInt(slice.length);nread+=slice.length}else{break}}return{ret:0,nread}}fd_pread(view8,iovs,offset){let nread=0;for(const iovec of iovs){if(offset<this.file.data.byteLength){const slice=this.file.data.slice(Number(offset),Number(offset+BigInt(iovec.buf_len)));view8.set(slice,iovec.buf);offset+=BigInt(slice.length);nread+=slice.length}else{break}}return{ret:0,nread}}fd_seek(offset,whence){let calculated_offset;switch(whence){case wasi.WHENCE_SET:calculated_offset=offset;break;case wasi.WHENCE_CUR:calculated_offset=this.file_pos+offset;break;case wasi.WHENCE_END:calculated_offset=BigInt(this.file.data.byteLength)+offset;break;default:return{ret:wasi.ERRNO_INVAL,offset:0n}}if(calculated_offset<0){return{ret:wasi.ERRNO_INVAL,offset:0n}}this.file_pos=calculated_offset;return{ret:0,offset:this.file_pos}}fd_tell(){return{ret:0,offset:this.file_pos}}fd_write(view8,iovs){let nwritten=0;if(this.file.readonly)return{ret:wasi.ERRNO_BADF,nwritten};for(const iovec of iovs){const buffer=view8.slice(iovec.buf,iovec.buf+iovec.buf_len);if(this.file_pos+BigInt(buffer.byteLength)>this.file.size){const old=this.file.data;this.file.data=new Uint8Array(Number(this.file_pos+BigInt(buffer.byteLength)));this.file.data.set(old)}this.file.data.set(buffer.slice(0,Number(this.file.size-this.file_pos)),Number(this.file_pos));this.file_pos+=BigInt(buffer.byteLength);nwritten+=iovec.buf_len}return{ret:0,nwritten}}fd_pwrite(view8,iovs,offset){let nwritten=0;if(this.file.readonly)return{ret:wasi.ERRNO_BADF,nwritten};for(const iovec of iovs){const buffer=view8.slice(iovec.buf,iovec.buf+iovec.buf_len);if(offset+BigInt(buffer.byteLength)>this.file.size){const old=this.file.data;this.file.data=new Uint8Array(Number(offset+BigInt(buffer.byteLength)));this.file.data.set(old)}this.file.data.set(buffer.slice(0,Number(this.file.size-offset)),Number(offset));offset+=BigInt(buffer.byteLength);nwritten+=iovec.buf_len}return{ret:0,nwritten}}fd_filestat_get(){return{ret:0,filestat:this.file.stat()}}constructor(file){super();this.file_pos=0n;this.file=file}}export class OpenSyncOPFSFile extends Fd{fd_fdstat_get(){return{ret:0,fdstat:new wasi.Fdstat(wasi.FILETYPE_REGULAR_FILE,0)}}fd_filestat_get(){return{ret:0,filestat:new wasi.Filestat(wasi.FILETYPE_REGULAR_FILE,BigInt(this.file.handle.getSize()))}}fd_read(view8,iovs){let nread=0;for(const iovec of iovs){if(this.position<this.file.handle.getSize()){const buf=new Uint8Array(view8.buffer,iovec.buf,iovec.buf_len);const n=this.file.handle.read(buf,{at:Number(this.position)});this.position+=BigInt(n);nread+=n}else{break}}return{ret:0,nread}}fd_seek(offset,whence){let calculated_offset;switch(whence){case wasi.WHENCE_SET:calculated_offset=BigInt(offset);break;case wasi.WHENCE_CUR:calculated_offset=this.position+BigInt(offset);break;case wasi.WHENCE_END:calculated_offset=BigInt(this.file.handle.getSize())+BigInt(offset);break;default:return{ret:wasi.ERRNO_INVAL,offset:0n}}if(calculated_offset<0){return{ret:wasi.ERRNO_INVAL,offset:0n}}this.position=calculated_offset;return{ret:wasi.ERRNO_SUCCESS,offset:this.position}}fd_write(view8,iovs){let nwritten=0;if(this.file.readonly)return{ret:wasi.ERRNO_BADF,nwritten};for(const iovec of iovs){const buf=new Uint8Array(view8.buffer,iovec.buf,iovec.buf_len);const n=this.file.handle.write(buf,{at:Number(this.position)});this.position+=BigInt(n);nwritten+=n}return{ret:wasi.ERRNO_SUCCESS,nwritten}}fd_datasync(){this.file.handle.flush();return wasi.ERRNO_SUCCESS}fd_sync(){return this.fd_datasync()}fd_close(){return wasi.ERRNO_SUCCESS}constructor(file){super();this.position=0n;this.file=file}}export class OpenDirectory extends Fd{fd_fdstat_get(){return{ret:0,fdstat:new wasi.Fdstat(wasi.FILETYPE_DIRECTORY,0)}}fd_readdir_single(cookie){if(debug.enabled){debug.log(\"readdir_single\",cookie);debug.log(cookie,Object.keys(this.dir.contents))}debug.log(cookie,Object.keys(this.dir.contents).slice(Number(cookie)));if(cookie>=BigInt(Object.keys(this.dir.contents).length)){return{ret:0,dirent:null}}const name=Object.keys(this.dir.contents)[Number(cookie)];const entry=this.dir.contents[name];return{ret:0,dirent:new wasi.Dirent(cookie+1n,name,entry.stat().filetype)}}path_filestat_get(flags,path){const entry=this.dir.get_entry_for_path(path);if(entry==null){return{ret:wasi.ERRNO_NOENT,filestat:null}}return{ret:0,filestat:entry.stat()}}path_open(dirflags,path,oflags,fs_rights_base,fs_rights_inheriting,fd_flags){let entry=this.dir.get_entry_for_path(path);if(entry==null){if((oflags&wasi.OFLAGS_CREAT)==wasi.OFLAGS_CREAT){entry=this.dir.create_entry_for_path(path,(oflags&wasi.OFLAGS_DIRECTORY)==wasi.OFLAGS_DIRECTORY)}else{return{ret:wasi.ERRNO_NOENT,fd_obj:null}}}else if((oflags&wasi.OFLAGS_EXCL)==wasi.OFLAGS_EXCL){return{ret:wasi.ERRNO_EXIST,fd_obj:null}}if((oflags&wasi.OFLAGS_DIRECTORY)==wasi.OFLAGS_DIRECTORY&&entry.stat().filetype!==wasi.FILETYPE_DIRECTORY){return{ret:wasi.ERRNO_NOTDIR,fd_obj:null}}if(entry.readonly&&(fs_rights_base&BigInt(wasi.RIGHTS_FD_WRITE))==BigInt(wasi.RIGHTS_FD_WRITE)){return{ret:wasi.ERRNO_PERM,fd_obj:null}}if(!(entry instanceof Directory)&&(oflags&wasi.OFLAGS_TRUNC)==wasi.OFLAGS_TRUNC){const ret=entry.truncate();if(ret!=wasi.ERRNO_SUCCESS)return{ret,fd_obj:null}}return{ret:wasi.ERRNO_SUCCESS,fd_obj:entry.open(fd_flags)}}path_create_directory(path){return this.path_open(0,path,wasi.OFLAGS_CREAT|wasi.OFLAGS_DIRECTORY,0n,0n,0).ret}path_unlink_file(path){path=this.clean_path(path);const parentDirEntry=this.dir.get_parent_dir_for_path(path);const pathComponents=path.split(\"/\");const fileName=pathComponents[pathComponents.length-1];const entry=this.dir.get_entry_for_path(path);if(entry===null){return wasi.ERRNO_NOENT}if(entry.stat().filetype===wasi.FILETYPE_DIRECTORY){return wasi.ERRNO_ISDIR}delete parentDirEntry.contents[fileName];return wasi.ERRNO_SUCCESS}path_remove_directory(path){path=this.clean_path(path);const parentDirEntry=this.dir.get_parent_dir_for_path(path);const pathComponents=path.split(\"/\");const fileName=pathComponents[pathComponents.length-1];const entry=this.dir.get_entry_for_path(path);if(entry===null){return wasi.ERRNO_NOENT}if(!(entry instanceof Directory)||entry.stat().filetype!==wasi.FILETYPE_DIRECTORY){return wasi.ERRNO_NOTDIR}if(Object.keys(entry.contents).length!==0){return wasi.ERRNO_NOTEMPTY}if(parentDirEntry.contents[fileName]===undefined){return wasi.ERRNO_NOENT}delete parentDirEntry.contents[fileName];return wasi.ERRNO_SUCCESS}clean_path(path){while(path.length>0&&path[path.length-1]===\"/\"){path=path.slice(0,path.length-1)}return path}constructor(dir){super();this.dir=dir}}export class PreopenDirectory extends OpenDirectory{fd_prestat_get(){return{ret:0,prestat:wasi.Prestat.dir(this.prestat_name.length)}}fd_prestat_dir_name(){return{ret:0,prestat_dir_name:this.prestat_name}}constructor(name,contents){super(new Directory(contents));this.prestat_name=new TextEncoder().encode(name)}}export class File{open(fd_flags){const file=new OpenFile(this);if(fd_flags&wasi.FDFLAGS_APPEND)file.fd_seek(0n,wasi.WHENCE_END);return file}get size(){return BigInt(this.data.byteLength)}stat(){return new wasi.Filestat(wasi.FILETYPE_REGULAR_FILE,this.size)}truncate(){if(this.readonly)return wasi.ERRNO_PERM;this.data=new Uint8Array([]);return wasi.ERRNO_SUCCESS}constructor(data,options){this.data=new Uint8Array(data);this.readonly=!!options?.readonly}}export class SyncOPFSFile{open(fd_flags){const file=new OpenSyncOPFSFile(this);if(fd_flags&wasi.FDFLAGS_APPEND)file.fd_seek(0n,wasi.WHENCE_END);return file}get size(){return BigInt(this.handle.getSize())}stat(){return new wasi.Filestat(wasi.FILETYPE_REGULAR_FILE,this.size)}truncate(){if(this.readonly)return wasi.ERRNO_PERM;this.handle.truncate(0);return wasi.ERRNO_SUCCESS}constructor(handle,options){this.handle=handle;this.readonly=!!options?.readonly}}export class Directory{open(fd_flags){return new OpenDirectory(this)}stat(){return new wasi.Filestat(wasi.FILETYPE_DIRECTORY,0n)}get_entry_for_path(path){let entry=this;for(const component of path.split(\"/\")){if(component==\"\")break;if(component==\".\")continue;if(!(entry instanceof Directory)){return null}if(entry.contents[component]!=undefined){entry=entry.contents[component]}else{debug.log(component);return null}}return entry}get_parent_dir_for_path(path){if(path===\"\")return null;let entry=this;let parentEntry=entry;for(const component of path.split(\"/\")){if(component===\"\")break;if(component===\".\")continue;if(!(entry instanceof Directory)){debug.log(entry);return null}if(entry.contents[component]===undefined){debug.log(component);return null}parentEntry=entry;entry=entry.contents[component]}return parentEntry}create_entry_for_path(path,is_dir){let entry=this;const components=path.split(\"/\").filter(component=>component!=\"/\");for(let i=0;i<components.length;i++){const component=components[i];if(!(entry instanceof Directory)){break}if(entry.contents[component]!=undefined){entry=entry.contents[component]}else{debug.log(\"create\",component);if(i==components.length-1&&!is_dir){entry.contents[component]=new File(new ArrayBuffer(0))}else{entry.contents[component]=new Directory({})}entry=entry.contents[component]}}return entry}constructor(contents){this.readonly=false;this.contents=contents}}", "import { WASI, Fd, File, OpenFile, wasi } from '@bjorn3/browser_wasi_shim';\nimport { type InternalWasi } from '../mod.ts';\n\nclass Output extends Fd {\n  #mode: string;\n\n  constructor(mode: string) {\n    super();\n    this.#mode = mode;\n  }\n\n  fd_write(view8: Uint8Array, iovs: [wasi.Iovec]): { ret: number; nwritten: number } {\n    let nwritten = 0;\n    const decoder = new TextDecoder();\n    const str = iovs.reduce((acc, iovec, idx, all) => {\n      nwritten += iovec.buf_len;\n      const buffer = view8.slice(iovec.buf, iovec.buf + iovec.buf_len);\n      return acc + decoder.decode(buffer, { stream: idx !== all.length - 1 });\n    }, '');\n\n    (console[this.#mode] as any)(str);\n\n    return { ret: 0, nwritten };\n  }\n}\n\nexport async function loadWasi(\n  _allowedPaths: { [from: string]: string },\n  enableWasiOutput: boolean,\n): Promise<InternalWasi> {\n  const args: Array<string> = [];\n  const envVars: Array<string> = [];\n  const fds: Fd[] = enableWasiOutput\n    ? [\n        new Output('log'), // fd 0 is dup'd to stdout\n        new Output('log'),\n        new Output('error'),\n      ]\n    : [\n        new OpenFile(new File([])), // stdin\n        new OpenFile(new File([])), // stdout\n        new OpenFile(new File([])), // stderr\n      ];\n\n  const context = new WASI(args, envVars, fds);\n\n  return {\n    async importObject() {\n      return context.wasiImport;\n    },\n\n    async close() {\n      // noop\n    },\n\n    async initialize(instance: WebAssembly.Instance) {\n      const memory = instance.exports.memory as WebAssembly.Memory;\n\n      if (!memory) {\n        throw new Error('The module has to export a default memory.');\n      }\n\n      if (instance.exports._initialize) {\n        const init = instance.exports._initialize as CallableFunction;\n        if (context.initialize) {\n          context.initialize({\n            exports: {\n              memory,\n              _initialize: () => {\n                init();\n              },\n            },\n          });\n        } else {\n          init();\n        }\n      } else {\n        context.start({\n          exports: {\n            memory,\n            _start: () => {},\n          },\n        });\n      }\n    },\n  };\n}\n", "import expand from 'brace-expansion'\nimport { assertValidPattern } from './assert-valid-pattern.js'\nimport { AST, ExtglobType } from './ast.js'\nimport { escape } from './escape.js'\nimport { unescape } from './unescape.js'\n\ntype Platform =\n  | 'aix'\n  | 'android'\n  | 'darwin'\n  | 'freebsd'\n  | 'haiku'\n  | 'linux'\n  | 'openbsd'\n  | 'sunos'\n  | 'win32'\n  | 'cygwin'\n  | 'netbsd'\n\nexport interface MinimatchOptions {\n  nobrace?: boolean\n  nocomment?: boolean\n  nonegate?: boolean\n  debug?: boolean\n  noglobstar?: boolean\n  noext?: boolean\n  nonull?: boolean\n  windowsPathsNoEscape?: boolean\n  allowWindowsEscape?: boolean\n  partial?: boolean\n  dot?: boolean\n  nocase?: boolean\n  nocaseMagicOnly?: boolean\n  magicalBraces?: boolean\n  matchBase?: boolean\n  flipNegate?: boolean\n  preserveMultipleSlashes?: boolean\n  optimizationLevel?: number\n  platform?: Platform\n  windowsNoMagicRoot?: boolean\n}\n\nexport const minimatch = (\n  p: string,\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\n// Optimized checking for the most common glob patterns.\nconst starDotExtRE = /^\\*+([^+@!?\\*\\[\\(]*)$/\nconst starDotExtTest = (ext: string) => (f: string) =>\n  !f.startsWith('.') && f.endsWith(ext)\nconst starDotExtTestDot = (ext: string) => (f: string) => f.endsWith(ext)\nconst starDotExtTestNocase = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => !f.startsWith('.') && f.toLowerCase().endsWith(ext)\n}\nconst starDotExtTestNocaseDot = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => f.toLowerCase().endsWith(ext)\n}\nconst starDotStarRE = /^\\*+\\.\\*+$/\nconst starDotStarTest = (f: string) => !f.startsWith('.') && f.includes('.')\nconst starDotStarTestDot = (f: string) =>\n  f !== '.' && f !== '..' && f.includes('.')\nconst dotStarRE = /^\\.\\*+$/\nconst dotStarTest = (f: string) => f !== '.' && f !== '..' && f.startsWith('.')\nconst starRE = /^\\*+$/\nconst starTest = (f: string) => f.length !== 0 && !f.startsWith('.')\nconst starTestDot = (f: string) => f.length !== 0 && f !== '.' && f !== '..'\nconst qmarksRE = /^\\?+([^+@!?\\*\\[\\(]*)?$/\nconst qmarksTestNocase = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestNocaseDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTest = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTestNoExt = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && !f.startsWith('.')\n}\nconst qmarksTestNoExtDot = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && f !== '.' && f !== '..'\n}\n\n/* c8 ignore start */\nconst defaultPlatform: Platform = (\n  typeof process === 'object' && process\n    ? (typeof process.env === 'object' &&\n        process.env &&\n        process.env.__MINIMATCH_TESTING_PLATFORM__) ||\n      process.platform\n    : 'posix'\n) as Platform\ntype Sep = '\\\\' | '/'\nconst path: { [k: string]: { sep: Sep } } = {\n  win32: { sep: '\\\\' },\n  posix: { sep: '/' },\n}\n/* c8 ignore stop */\n\nexport const sep = defaultPlatform === 'win32' ? path.win32.sep : path.posix.sep\nminimatch.sep = sep\n\nexport const GLOBSTAR = Symbol('globstar **')\nminimatch.GLOBSTAR = GLOBSTAR\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\/|^)\\\\.).)*?'\n\nexport const filter =\n  (pattern: string, options: MinimatchOptions = {}) =>\n  (p: string) =>\n    minimatch(p, pattern, options)\nminimatch.filter = filter\n\nconst ext = (a: MinimatchOptions, b: MinimatchOptions = {}) =>\n  Object.assign({}, a, b)\n\nexport const defaults = (def: MinimatchOptions): typeof minimatch => {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  const orig = minimatch\n\n  const m = (p: string, pattern: string, options: MinimatchOptions = {}) =>\n    orig(p, pattern, ext(def, options))\n\n  return Object.assign(m, {\n    Minimatch: class Minimatch extends orig.Minimatch {\n      constructor(pattern: string, options: MinimatchOptions = {}) {\n        super(pattern, ext(def, options))\n      }\n      static defaults(options: MinimatchOptions) {\n        return orig.defaults(ext(def, options)).Minimatch\n      }\n    },\n\n    AST: class AST extends orig.AST {\n      /* c8 ignore start */\n      constructor(\n        type: ExtglobType | null,\n        parent?: AST,\n        options: MinimatchOptions = {}\n      ) {\n        super(type, parent, ext(def, options))\n      }\n      /* c8 ignore stop */\n\n      static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n        return orig.AST.fromGlob(pattern, ext(def, options))\n      }\n    },\n\n    unescape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.unescape(s, ext(def, options)),\n\n    escape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.escape(s, ext(def, options)),\n\n    filter: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.filter(pattern, ext(def, options)),\n\n    defaults: (options: MinimatchOptions) => orig.defaults(ext(def, options)),\n\n    makeRe: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.makeRe(pattern, ext(def, options)),\n\n    braceExpand: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.braceExpand(pattern, ext(def, options)),\n\n    match: (list: string[], pattern: string, options: MinimatchOptions = {}) =>\n      orig.match(list, pattern, ext(def, options)),\n\n    sep: orig.sep,\n    GLOBSTAR: GLOBSTAR as typeof GLOBSTAR,\n  })\n}\nminimatch.defaults = defaults\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nexport const braceExpand = (\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\nminimatch.braceExpand = braceExpand\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\n\nexport const makeRe = (pattern: string, options: MinimatchOptions = {}) =>\n  new Minimatch(pattern, options).makeRe()\nminimatch.makeRe = makeRe\n\nexport const match = (\n  list: string[],\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  const mm = new Minimatch(pattern, options)\n  list = list.filter(f => mm.match(f))\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\nminimatch.match = match\n\n// replace stuff like \\* with *\nconst globMagic = /[?*]|[+@!]\\(.*?\\)|\\[|\\]/\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\nexport type MMRegExp = RegExp & {\n  _src?: string\n  _glob?: string\n}\n\nexport type ParseReturnFiltered = string | MMRegExp | typeof GLOBSTAR\nexport type ParseReturn = ParseReturnFiltered | false\n\nexport class Minimatch {\n  options: MinimatchOptions\n  set: ParseReturnFiltered[][]\n  pattern: string\n\n  windowsPathsNoEscape: boolean\n  nonegate: boolean\n  negate: boolean\n  comment: boolean\n  empty: boolean\n  preserveMultipleSlashes: boolean\n  partial: boolean\n  globSet: string[]\n  globParts: string[][]\n  nocase: boolean\n\n  isWindows: boolean\n  platform: Platform\n  windowsNoMagicRoot: boolean\n\n  regexp: false | null | MMRegExp\n  constructor(pattern: string, options: MinimatchOptions = {}) {\n    assertValidPattern(pattern)\n\n    options = options || {}\n    this.options = options\n    this.pattern = pattern\n    this.platform = options.platform || defaultPlatform\n    this.isWindows = this.platform === 'win32'\n    this.windowsPathsNoEscape =\n      !!options.windowsPathsNoEscape || options.allowWindowsEscape === false\n    if (this.windowsPathsNoEscape) {\n      this.pattern = this.pattern.replace(/\\\\/g, '/')\n    }\n    this.preserveMultipleSlashes = !!options.preserveMultipleSlashes\n    this.regexp = null\n    this.negate = false\n    this.nonegate = !!options.nonegate\n    this.comment = false\n    this.empty = false\n    this.partial = !!options.partial\n    this.nocase = !!this.options.nocase\n    this.windowsNoMagicRoot =\n      options.windowsNoMagicRoot !== undefined\n        ? options.windowsNoMagicRoot\n        : !!(this.isWindows && this.nocase)\n\n    this.globSet = []\n    this.globParts = []\n    this.set = []\n\n    // make the set of regexps etc.\n    this.make()\n  }\n\n  hasMagic(): boolean {\n    if (this.options.magicalBraces && this.set.length > 1) {\n      return true\n    }\n    for (const pattern of this.set) {\n      for (const part of pattern) {\n        if (typeof part !== 'string') return true\n      }\n    }\n    return false\n  }\n\n  debug(..._: any[]) {}\n\n  make() {\n    const pattern = this.pattern\n    const options = this.options\n\n    // empty patterns and comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === '#') {\n      this.comment = true\n      return\n    }\n\n    if (!pattern) {\n      this.empty = true\n      return\n    }\n\n    // step 1: figure out negation, etc.\n    this.parseNegate()\n\n    // step 2: expand braces\n    this.globSet = [...new Set(this.braceExpand())]\n\n    if (options.debug) {\n      this.debug = (...args: any[]) => console.error(...args)\n    }\n\n    this.debug(this.pattern, this.globSet)\n\n    // step 3: now we have a set, so turn each one into a series of\n    // path-portion matching patterns.\n    // These will be regexps, except in the case of \"**\", which is\n    // set to the GLOBSTAR object for globstar behavior,\n    // and will not contain any / characters\n    //\n    // First, we preprocess to make the glob pattern sets a bit simpler\n    // and deduped.  There are some perf-killing patterns that can cause\n    // problems with a glob walk, but we can simplify them down a bit.\n    const rawGlobParts = this.globSet.map(s => this.slashSplit(s))\n    this.globParts = this.preprocess(rawGlobParts)\n    this.debug(this.pattern, this.globParts)\n\n    // glob --> regexps\n    let set = this.globParts.map((s, _, __) => {\n      if (this.isWindows && this.windowsNoMagicRoot) {\n        // check if it's a drive or unc path.\n        const isUNC =\n          s[0] === '' &&\n          s[1] === '' &&\n          (s[2] === '?' || !globMagic.test(s[2])) &&\n          !globMagic.test(s[3])\n        const isDrive = /^[a-z]:/i.test(s[0])\n        if (isUNC) {\n          return [...s.slice(0, 4), ...s.slice(4).map(ss => this.parse(ss))]\n        } else if (isDrive) {\n          return [s[0], ...s.slice(1).map(ss => this.parse(ss))]\n        }\n      }\n      return s.map(ss => this.parse(ss))\n    })\n\n    this.debug(this.pattern, set)\n\n    // filter out everything that didn't compile properly.\n    this.set = set.filter(\n      s => s.indexOf(false) === -1\n    ) as ParseReturnFiltered[][]\n\n    // do not treat the ? in UNC paths as magic\n    if (this.isWindows) {\n      for (let i = 0; i < this.set.length; i++) {\n        const p = this.set[i]\n        if (\n          p[0] === '' &&\n          p[1] === '' &&\n          this.globParts[i][2] === '?' &&\n          typeof p[3] === 'string' &&\n          /^[a-z]:$/i.test(p[3])\n        ) {\n          p[2] = '?'\n        }\n      }\n    }\n\n    this.debug(this.pattern, this.set)\n  }\n\n  // various transforms to equivalent pattern sets that are\n  // faster to process in a filesystem walk.  The goal is to\n  // eliminate what we can, and push all ** patterns as far\n  // to the right as possible, even if it increases the number\n  // of patterns that we have to process.\n  preprocess(globParts: string[][]) {\n    // if we're not in globstar mode, then turn all ** into *\n    if (this.options.noglobstar) {\n      for (let i = 0; i < globParts.length; i++) {\n        for (let j = 0; j < globParts[i].length; j++) {\n          if (globParts[i][j] === '**') {\n            globParts[i][j] = '*'\n          }\n        }\n      }\n    }\n\n    const { optimizationLevel = 1 } = this.options\n\n    if (optimizationLevel >= 2) {\n      // aggressive optimization for the purpose of fs walking\n      globParts = this.firstPhasePreProcess(globParts)\n      globParts = this.secondPhasePreProcess(globParts)\n    } else if (optimizationLevel >= 1) {\n      // just basic optimizations to remove some .. parts\n      globParts = this.levelOneOptimize(globParts)\n    } else {\n      globParts = this.adjascentGlobstarOptimize(globParts)\n    }\n\n    return globParts\n  }\n\n  // just get rid of adjascent ** portions\n  adjascentGlobstarOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      let gs: number = -1\n      while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n        let i = gs\n        while (parts[i + 1] === '**') {\n          i++\n        }\n        if (i !== gs) {\n          parts.splice(gs, i - gs)\n        }\n      }\n      return parts\n    })\n  }\n\n  // get rid of adjascent ** and resolve .. portions\n  levelOneOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      parts = parts.reduce((set: string[], part) => {\n        const prev = set[set.length - 1]\n        if (part === '**' && prev === '**') {\n          return set\n        }\n        if (part === '..') {\n          if (prev && prev !== '..' && prev !== '.' && prev !== '**') {\n            set.pop()\n            return set\n          }\n        }\n        set.push(part)\n        return set\n      }, [])\n      return parts.length === 0 ? [''] : parts\n    })\n  }\n\n  levelTwoFileOptimize(parts: string | string[]) {\n    if (!Array.isArray(parts)) {\n      parts = this.slashSplit(parts)\n    }\n    let didSomething: boolean = false\n    do {\n      didSomething = false\n      // <pre>/<e>/<rest> -> <pre>/<rest>\n      if (!this.preserveMultipleSlashes) {\n        for (let i = 1; i < parts.length - 1; i++) {\n          const p = parts[i]\n          // don't squeeze out UNC patterns\n          if (i === 1 && p === '' && parts[0] === '') continue\n          if (p === '.' || p === '') {\n            didSomething = true\n            parts.splice(i, 1)\n            i--\n          }\n        }\n        if (\n          parts[0] === '.' &&\n          parts.length === 2 &&\n          (parts[1] === '.' || parts[1] === '')\n        ) {\n          didSomething = true\n          parts.pop()\n        }\n      }\n\n      // <pre>/<p>/../<rest> -> <pre>/<rest>\n      let dd: number = 0\n      while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n        const p = parts[dd - 1]\n        if (p && p !== '.' && p !== '..' && p !== '**') {\n          didSomething = true\n          parts.splice(dd - 1, 2)\n          dd -= 2\n        }\n      }\n    } while (didSomething)\n    return parts.length === 0 ? [''] : parts\n  }\n\n  // First phase: single-pattern processing\n  // <pre> is 1 or more portions\n  // <rest> is 1 or more portions\n  // <p> is any portion other than ., .., '', or **\n  // <e> is . or ''\n  //\n  // **/.. is *brutal* for filesystem walking performance, because\n  // it effectively resets the recursive walk each time it occurs,\n  // and ** cannot be reduced out by a .. pattern part like a regexp\n  // or most strings (other than .., ., and '') can be.\n  //\n  // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n  // <pre>/<e>/<rest> -> <pre>/<rest>\n  // <pre>/<p>/../<rest> -> <pre>/<rest>\n  // **/**/<rest> -> **/<rest>\n  //\n  // **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow\n  // this WOULD be allowed if ** did follow symlinks, or * didn't\n  firstPhasePreProcess(globParts: string[][]) {\n    let didSomething = false\n    do {\n      didSomething = false\n      // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n      for (let parts of globParts) {\n        let gs: number = -1\n        while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n          let gss: number = gs\n          while (parts[gss + 1] === '**') {\n            // <pre>/**/**/<rest> -> <pre>/**/<rest>\n            gss++\n          }\n          // eg, if gs is 2 and gss is 4, that means we have 3 **\n          // parts, and can remove 2 of them.\n          if (gss > gs) {\n            parts.splice(gs + 1, gss - gs)\n          }\n\n          let next = parts[gs + 1]\n          const p = parts[gs + 2]\n          const p2 = parts[gs + 3]\n          if (next !== '..') continue\n          if (\n            !p ||\n            p === '.' ||\n            p === '..' ||\n            !p2 ||\n            p2 === '.' ||\n            p2 === '..'\n          ) {\n            continue\n          }\n          didSomething = true\n          // edit parts in place, and push the new one\n          parts.splice(gs, 1)\n          const other = parts.slice(0)\n          other[gs] = '**'\n          globParts.push(other)\n          gs--\n        }\n\n        // <pre>/<e>/<rest> -> <pre>/<rest>\n        if (!this.preserveMultipleSlashes) {\n          for (let i = 1; i < parts.length - 1; i++) {\n            const p = parts[i]\n            // don't squeeze out UNC patterns\n            if (i === 1 && p === '' && parts[0] === '') continue\n            if (p === '.' || p === '') {\n              didSomething = true\n              parts.splice(i, 1)\n              i--\n            }\n          }\n          if (\n            parts[0] === '.' &&\n            parts.length === 2 &&\n            (parts[1] === '.' || parts[1] === '')\n          ) {\n            didSomething = true\n            parts.pop()\n          }\n        }\n\n        // <pre>/<p>/../<rest> -> <pre>/<rest>\n        let dd: number = 0\n        while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n          const p = parts[dd - 1]\n          if (p && p !== '.' && p !== '..' && p !== '**') {\n            didSomething = true\n            const needDot = dd === 1 && parts[dd + 1] === '**'\n            const splin = needDot ? ['.'] : []\n            parts.splice(dd - 1, 2, ...splin)\n            if (parts.length === 0) parts.push('')\n            dd -= 2\n          }\n        }\n      }\n    } while (didSomething)\n\n    return globParts\n  }\n\n  // second phase: multi-pattern dedupes\n  // {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>\n  // {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>\n  // {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>\n  //\n  // {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>\n  // ^-- not valid because ** doens't follow symlinks\n  secondPhasePreProcess(globParts: string[][]): string[][] {\n    for (let i = 0; i < globParts.length - 1; i++) {\n      for (let j = i + 1; j < globParts.length; j++) {\n        const matched = this.partsMatch(\n          globParts[i],\n          globParts[j],\n          !this.preserveMultipleSlashes\n        )\n        if (!matched) continue\n        globParts[i] = matched\n        globParts[j] = []\n      }\n    }\n    return globParts.filter(gs => gs.length)\n  }\n\n  partsMatch(\n    a: string[],\n    b: string[],\n    emptyGSMatch: boolean = false\n  ): false | string[] {\n    let ai = 0\n    let bi = 0\n    let result: string[] = []\n    let which: string = ''\n    while (ai < a.length && bi < b.length) {\n      if (a[ai] === b[bi]) {\n        result.push(which === 'b' ? b[bi] : a[ai])\n        ai++\n        bi++\n      } else if (emptyGSMatch && a[ai] === '**' && b[bi] === a[ai + 1]) {\n        result.push(a[ai])\n        ai++\n      } else if (emptyGSMatch && b[bi] === '**' && a[ai] === b[bi + 1]) {\n        result.push(b[bi])\n        bi++\n      } else if (\n        a[ai] === '*' &&\n        b[bi] &&\n        (this.options.dot || !b[bi].startsWith('.')) &&\n        b[bi] !== '**'\n      ) {\n        if (which === 'b') return false\n        which = 'a'\n        result.push(a[ai])\n        ai++\n        bi++\n      } else if (\n        b[bi] === '*' &&\n        a[ai] &&\n        (this.options.dot || !a[ai].startsWith('.')) &&\n        a[ai] !== '**'\n      ) {\n        if (which === 'a') return false\n        which = 'b'\n        result.push(b[bi])\n        ai++\n        bi++\n      } else {\n        return false\n      }\n    }\n    // if we fall out of the loop, it means they two are identical\n    // as long as their lengths match\n    return a.length === b.length && result\n  }\n\n  parseNegate() {\n    if (this.nonegate) return\n\n    const pattern = this.pattern\n    let negate = false\n    let negateOffset = 0\n\n    for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\n      negate = !negate\n      negateOffset++\n    }\n\n    if (negateOffset) this.pattern = pattern.slice(negateOffset)\n    this.negate = negate\n  }\n\n  // set partial to true to test if, for example,\n  // \"/a/b\" matches the start of \"/*/b/*/d\"\n  // Partial means, if you run out of file before you run\n  // out of pattern, then that's fine, as long as all\n  // the parts match.\n  matchOne(file: string[], pattern: ParseReturn[], partial: boolean = false) {\n    const options = this.options\n\n    // UNC paths like //?/X:/... can match X:/... and vice versa\n    // Drive letters in absolute drive or unc paths are always compared\n    // case-insensitively.\n    if (this.isWindows) {\n      const fileDrive = typeof file[0] === 'string' && /^[a-z]:$/i.test(file[0])\n      const fileUNC =\n        !fileDrive &&\n        file[0] === '' &&\n        file[1] === '' &&\n        file[2] === '?' &&\n        /^[a-z]:$/i.test(file[3])\n\n      const patternDrive =\n        typeof pattern[0] === 'string' && /^[a-z]:$/i.test(pattern[0])\n      const patternUNC =\n        !patternDrive &&\n        pattern[0] === '' &&\n        pattern[1] === '' &&\n        pattern[2] === '?' &&\n        typeof pattern[3] === 'string' &&\n        /^[a-z]:$/i.test(pattern[3])\n\n      const fdi = fileUNC ? 3 : fileDrive ? 0 : undefined\n      const pdi = patternUNC ? 3 : patternDrive ? 0 : undefined\n      if (typeof fdi === 'number' && typeof pdi === 'number') {\n        const [fd, pd]: [string, string] = [file[fdi], pattern[pdi] as string]\n        if (fd.toLowerCase() === pd.toLowerCase()) {\n          pattern[pdi] = fd\n          if (pdi > fdi) {\n            pattern = pattern.slice( pdi)\n          } else if (fdi > pdi) {\n            file = file.slice(fdi)\n          }\n        }\n      }\n    }\n\n    // resolve and reduce . and .. portions in the file as well.\n    // dont' need to do the second phase, because it's only one string[]\n    const { optimizationLevel = 1 } = this.options\n    if (optimizationLevel >= 2) {\n      file = this.levelTwoFileOptimize(file)\n    }\n\n    this.debug('matchOne', this, { file, pattern })\n    this.debug('matchOne', file.length, pattern.length)\n\n    for (\n      var fi = 0, pi = 0, fl = file.length, pl = pattern.length;\n      fi < fl && pi < pl;\n      fi++, pi++\n    ) {\n      this.debug('matchOne loop')\n      var p = pattern[pi]\n      var f = file[fi]\n\n      this.debug(pattern, p, f)\n\n      // should be impossible.\n      // some invalid regexp stuff in the set.\n      /* c8 ignore start */\n      if (p === false) {\n        return false\n      }\n      /* c8 ignore stop */\n\n      if (p === GLOBSTAR) {\n        this.debug('GLOBSTAR', [pattern, p, f])\n\n        // \"**\"\n        // a/**/b/**/c would match the following:\n        // a/b/x/y/z/c\n        // a/x/y/z/b/c\n        // a/b/x/b/x/c\n        // a/b/c\n        // To do this, take the rest of the pattern after\n        // the **, and see if it would match the file remainder.\n        // If so, return success.\n        // If not, the ** \"swallows\" a segment, and try again.\n        // This is recursively awful.\n        //\n        // a/**/b/**/c matching a/b/x/y/z/c\n        // - a matches a\n        // - doublestar\n        //   - matchOne(b/x/y/z/c, b/**/c)\n        //     - b matches b\n        //     - doublestar\n        //       - matchOne(x/y/z/c, c) -> no\n        //       - matchOne(y/z/c, c) -> no\n        //       - matchOne(z/c, c) -> no\n        //       - matchOne(c, c) yes, hit\n        var fr = fi\n        var pr = pi + 1\n        if (pr === pl) {\n          this.debug('** at the end')\n          // a ** at the end will just swallow the rest.\n          // We have found a match.\n          // however, it will not swallow /.x, unless\n          // options.dot is set.\n          // . and .. are *never* matched by **, for explosively\n          // exponential reasons.\n          for (; fi < fl; fi++) {\n            if (\n              file[fi] === '.' ||\n              file[fi] === '..' ||\n              (!options.dot && file[fi].charAt(0) === '.')\n            )\n              return false\n          }\n          return true\n        }\n\n        // ok, let's see if we can swallow whatever we can.\n        while (fr < fl) {\n          var swallowee = file[fr]\n\n          this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n          // XXX remove this slice.  Just pass the start index.\n          if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n            this.debug('globstar found match!', fr, fl, swallowee)\n            // found a match.\n            return true\n          } else {\n            // can't swallow \".\" or \"..\" ever.\n            // can only swallow \".foo\" when explicitly asked.\n            if (\n              swallowee === '.' ||\n              swallowee === '..' ||\n              (!options.dot && swallowee.charAt(0) === '.')\n            ) {\n              this.debug('dot detected!', file, fr, pattern, pr)\n              break\n            }\n\n            // ** swallows a segment, and continue.\n            this.debug('globstar swallow a segment, and continue')\n            fr++\n          }\n        }\n\n        // no match was found.\n        // However, in partial mode, we can't say this is necessarily over.\n        /* c8 ignore start */\n        if (partial) {\n          // ran out of file\n          this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n          if (fr === fl) {\n            return true\n          }\n        }\n        /* c8 ignore stop */\n        return false\n      }\n\n      // something other than **\n      // non-magic patterns just have to match exactly\n      // patterns with magic have been turned into regexps.\n      let hit: boolean\n      if (typeof p === 'string') {\n        hit = f === p\n        this.debug('string match', p, f, hit)\n      } else {\n        hit = p.test(f)\n        this.debug('pattern match', p, f, hit)\n      }\n\n      if (!hit) return false\n    }\n\n    // Note: ending in / means that we'll get a final \"\"\n    // at the end of the pattern.  This can only match a\n    // corresponding \"\" at the end of the file.\n    // If the file ends in /, then it can only match a\n    // a pattern that ends in /, unless the pattern just\n    // doesn't have any more for it. But, a/b/ should *not*\n    // match \"a/b/*\", even though \"\" matches against the\n    // [^/]*? pattern, except in partial mode, where it might\n    // simply not be reached yet.\n    // However, a/b/ should still satisfy a/*\n\n    // now either we fell off the end of the pattern, or we're done.\n    if (fi === fl && pi === pl) {\n      // ran out of pattern and filename at the same time.\n      // an exact hit!\n      return true\n    } else if (fi === fl) {\n      // ran out of file, but still had pattern left.\n      // this is ok if we're doing the match as part of\n      // a glob fs traversal.\n      return partial\n    } else if (pi === pl) {\n      // ran out of pattern, still have file left.\n      // this is only acceptable if we're on the very last\n      // empty segment of a file with a trailing slash.\n      // a/* should match a/b/\n      return fi === fl - 1 && file[fi] === ''\n\n      /* c8 ignore start */\n    } else {\n      // should be unreachable.\n      throw new Error('wtf?')\n    }\n    /* c8 ignore stop */\n  }\n\n  braceExpand() {\n    return braceExpand(this.pattern, this.options)\n  }\n\n  parse(pattern: string): ParseReturn {\n    assertValidPattern(pattern)\n\n    const options = this.options\n\n    // shortcuts\n    if (pattern === '**') return GLOBSTAR\n    if (pattern === '') return ''\n\n    // far and away, the most common glob pattern parts are\n    // *, *.*, and *.<ext>  Add a fast check method for those.\n    let m: RegExpMatchArray | null\n    let fastTest: null | ((f: string) => boolean) = null\n    if ((m = pattern.match(starRE))) {\n      fastTest = options.dot ? starTestDot : starTest\n    } else if ((m = pattern.match(starDotExtRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? starDotExtTestNocaseDot\n            : starDotExtTestNocase\n          : options.dot\n          ? starDotExtTestDot\n          : starDotExtTest\n      )(m[1])\n    } else if ((m = pattern.match(qmarksRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? qmarksTestNocaseDot\n            : qmarksTestNocase\n          : options.dot\n          ? qmarksTestDot\n          : qmarksTest\n      )(m)\n    } else if ((m = pattern.match(starDotStarRE))) {\n      fastTest = options.dot ? starDotStarTestDot : starDotStarTest\n    } else if ((m = pattern.match(dotStarRE))) {\n      fastTest = dotStarTest\n    }\n\n    const re = AST.fromGlob(pattern, this.options).toMMPattern()\n    return fastTest ? Object.assign(re, { test: fastTest }) : re\n  }\n\n  makeRe() {\n    if (this.regexp || this.regexp === false) return this.regexp\n\n    // at this point, this.set is a 2d array of partial\n    // pattern strings, or \"**\".\n    //\n    // It's better to use .match().  This function shouldn't\n    // be used, really, but it's pretty convenient sometimes,\n    // when you just want to work with a regex.\n    const set = this.set\n\n    if (!set.length) {\n      this.regexp = false\n      return this.regexp\n    }\n    const options = this.options\n\n    const twoStar = options.noglobstar\n      ? star\n      : options.dot\n      ? twoStarDot\n      : twoStarNoDot\n    const flags = new Set(options.nocase ? ['i'] : [])\n\n    // regexpify non-globstar patterns\n    // if ** is only item, then we just do one twoStar\n    // if ** is first, and there are more, prepend (\\/|twoStar\\/)? to next\n    // if ** is last, append (\\/twoStar|) to previous\n    // if ** is in the middle, append (\\/|\\/twoStar\\/) to previous\n    // then filter out GLOBSTAR symbols\n    let re = set\n      .map(pattern => {\n        const pp: (string | typeof GLOBSTAR)[] = pattern.map(p => {\n          if (p instanceof RegExp) {\n            for (const f of p.flags.split('')) flags.add(f)\n          }\n          return typeof p === 'string'\n            ? regExpEscape(p)\n            : p === GLOBSTAR\n            ? GLOBSTAR\n            : p._src\n        }) as (string | typeof GLOBSTAR)[]\n        pp.forEach((p, i) => {\n          const next = pp[i + 1]\n          const prev = pp[i - 1]\n          if (p !== GLOBSTAR || prev === GLOBSTAR) {\n            return\n          }\n          if (prev === undefined) {\n            if (next !== undefined && next !== GLOBSTAR) {\n              pp[i + 1] = '(?:\\\\/|' + twoStar + '\\\\/)?' + next\n            } else {\n              pp[i] = twoStar\n            }\n          } else if (next === undefined) {\n            pp[i - 1] = prev + '(?:\\\\/|' + twoStar + ')?'\n          } else if (next !== GLOBSTAR) {\n            pp[i - 1] = prev + '(?:\\\\/|\\\\/' + twoStar + '\\\\/)' + next\n            pp[i + 1] = GLOBSTAR\n          }\n        })\n        return pp.filter(p => p !== GLOBSTAR).join('/')\n      })\n      .join('|')\n\n    // need to wrap in parens if we had more than one thing with |,\n    // otherwise only the first will be anchored to ^ and the last to $\n    const [open, close] = set.length > 1 ? ['(?:', ')'] : ['', '']\n    // must match entire pattern\n    // ending in a * or ** will make it less strict.\n    re = '^' + open + re + close + '$'\n\n    // can match anything, as long as it's not this.\n    if (this.negate) re = '^(?!' + re + ').+$'\n\n    try {\n      this.regexp = new RegExp(re, [...flags].join(''))\n      /* c8 ignore start */\n    } catch (ex) {\n      // should be impossible\n      this.regexp = false\n    }\n    /* c8 ignore stop */\n    return this.regexp\n  }\n\n  slashSplit(p: string) {\n    // if p starts with // on windows, we preserve that\n    // so that UNC paths aren't broken.  Otherwise, any number of\n    // / characters are coalesced into one, unless\n    // preserveMultipleSlashes is set to true.\n    if (this.preserveMultipleSlashes) {\n      return p.split('/')\n    } else if (this.isWindows && /^\\/\\/[^\\/]+/.test(p)) {\n      // add an extra '' for the one we lose\n      return ['', ...p.split(/\\/+/)]\n    } else {\n      return p.split(/\\/+/)\n    }\n  }\n\n  match(f: string, partial = this.partial) {\n    this.debug('match', f, this.pattern)\n    // short-circuit in the case of busted things.\n    // comments, etc.\n    if (this.comment) {\n      return false\n    }\n    if (this.empty) {\n      return f === ''\n    }\n\n    if (f === '/' && partial) {\n      return true\n    }\n\n    const options = this.options\n\n    // windows: need to use /, not \\\n    if (this.isWindows) {\n      f = f.split('\\\\').join('/')\n    }\n\n    // treat the test path as a set of pathparts.\n    const ff = this.slashSplit(f)\n    this.debug(this.pattern, 'split', ff)\n\n    // just ONE of the pattern sets in this.set needs to match\n    // in order for it to be valid.  If negating, then just one\n    // match means that we have failed.\n    // Either way, return on the first hit.\n\n    const set = this.set\n    this.debug(this.pattern, 'set', set)\n\n    // Find the basename of the path by looking for the last non-empty segment\n    let filename: string = ff[ff.length - 1]\n    if (!filename) {\n      for (let i = ff.length - 2; !filename && i >= 0; i--) {\n        filename = ff[i]\n      }\n    }\n\n    for (let i = 0; i < set.length; i++) {\n      const pattern = set[i]\n      let file = ff\n      if (options.matchBase && pattern.length === 1) {\n        file = [filename]\n      }\n      const hit = this.matchOne(file, pattern, partial)\n      if (hit) {\n        if (options.flipNegate) {\n          return true\n        }\n        return !this.negate\n      }\n    }\n\n    // didn't get any hits.  this is success if it's a negative\n    // pattern, failure otherwise.\n    if (options.flipNegate) {\n      return false\n    }\n    return this.negate\n  }\n\n  static defaults(def: MinimatchOptions) {\n    return minimatch.defaults(def).Minimatch\n  }\n}\n/* c8 ignore start */\nexport { AST } from './ast.js'\nexport { escape } from './escape.js'\nexport { unescape } from './unescape.js'\n/* c8 ignore stop */\nminimatch.AST = AST\nminimatch.Minimatch = Minimatch\nminimatch.escape = escape\nminimatch.unescape = unescape\n", "const MAX_PATTERN_LENGTH = 1024 * 64\nexport const assertValidPattern: (pattern: any) => void = (\n  pattern: any\n): asserts pattern is string => {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n", "// translate the various posix character classes into unicode properties\n// this works across all unicode locales\n\n// { <posix class>: [<translation>, /u flag required, negated]\nconst posixClasses: { [k: string]: [e: string, u: boolean, n?: boolean] } = {\n  '[:alnum:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}', true],\n  '[:alpha:]': ['\\\\p{L}\\\\p{Nl}', true],\n  '[:ascii:]': ['\\\\x' + '00-\\\\x' + '7f', false],\n  '[:blank:]': ['\\\\p{Zs}\\\\t', true],\n  '[:cntrl:]': ['\\\\p{Cc}', true],\n  '[:digit:]': ['\\\\p{Nd}', true],\n  '[:graph:]': ['\\\\p{Z}\\\\p{C}', true, true],\n  '[:lower:]': ['\\\\p{Ll}', true],\n  '[:print:]': ['\\\\p{C}', true],\n  '[:punct:]': ['\\\\p{P}', true],\n  '[:space:]': ['\\\\p{Z}\\\\t\\\\r\\\\n\\\\v\\\\f', true],\n  '[:upper:]': ['\\\\p{Lu}', true],\n  '[:word:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}\\\\p{Pc}', true],\n  '[:xdigit:]': ['A-Fa-f0-9', false],\n}\n\n// only need to escape a few things inside of brace expressions\n// escapes: [ \\ ] -\nconst braceEscape = (s: string) => s.replace(/[[\\]\\\\-]/g, '\\\\$&')\n// escape all regexp magic characters\nconst regexpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// everything has already been escaped, we just have to join\nconst rangesToString = (ranges: string[]): string => ranges.join('')\n\nexport type ParseClassResult = [\n  src: string,\n  uFlag: boolean,\n  consumed: number,\n  hasMagic: boolean\n]\n\n// takes a glob string at a posix brace expression, and returns\n// an equivalent regular expression source, and boolean indicating\n// whether the /u flag needs to be applied, and the number of chars\n// consumed to parse the character class.\n// This also removes out of order ranges, and returns ($.) if the\n// entire class just no good.\nexport const parseClass = (\n  glob: string,\n  position: number\n): ParseClassResult => {\n  const pos = position\n  /* c8 ignore start */\n  if (glob.charAt(pos) !== '[') {\n    throw new Error('not in a brace expression')\n  }\n  /* c8 ignore stop */\n  const ranges: string[] = []\n  const negs: string[] = []\n\n  let i = pos + 1\n  let sawStart = false\n  let uflag = false\n  let escaping = false\n  let negate = false\n  let endPos = pos\n  let rangeStart = ''\n  WHILE: while (i < glob.length) {\n    const c = glob.charAt(i)\n    if ((c === '!' || c === '^') && i === pos + 1) {\n      negate = true\n      i++\n      continue\n    }\n\n    if (c === ']' && sawStart && !escaping) {\n      endPos = i + 1\n      break\n    }\n\n    sawStart = true\n    if (c === '\\\\') {\n      if (!escaping) {\n        escaping = true\n        i++\n        continue\n      }\n      // escaped \\ char, fall through and treat like normal char\n    }\n    if (c === '[' && !escaping) {\n      // either a posix class, a collation equivalent, or just a [\n      for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {\n        if (glob.startsWith(cls, i)) {\n          // invalid, [a-[] is fine, but not [a-[:alpha]]\n          if (rangeStart) {\n            return ['$.', false, glob.length - pos, true]\n          }\n          i += cls.length\n          if (neg) negs.push(unip)\n          else ranges.push(unip)\n          uflag = uflag || u\n          continue WHILE\n        }\n      }\n    }\n\n    // now it's just a normal character, effectively\n    escaping = false\n    if (rangeStart) {\n      // throw this range away if it's not valid, but others\n      // can still match.\n      if (c > rangeStart) {\n        ranges.push(braceEscape(rangeStart) + '-' + braceEscape(c))\n      } else if (c === rangeStart) {\n        ranges.push(braceEscape(c))\n      }\n      rangeStart = ''\n      i++\n      continue\n    }\n\n    // now might be the start of a range.\n    // can be either c-d or c-] or c<more...>] or c] at this point\n    if (glob.startsWith('-]', i + 1)) {\n      ranges.push(braceEscape(c + '-'))\n      i += 2\n      continue\n    }\n    if (glob.startsWith('-', i + 1)) {\n      rangeStart = c\n      i += 2\n      continue\n    }\n\n    // not the start of a range, just a single character\n    ranges.push(braceEscape(c))\n    i++\n  }\n\n  if (endPos < i) {\n    // didn't see the end of the class, not a valid class,\n    // but might still be valid as a literal match.\n    return ['', false, 0, false]\n  }\n\n  // if we got no ranges and no negates, then we have a range that\n  // cannot possibly match anything, and that poisons the whole glob\n  if (!ranges.length && !negs.length) {\n    return ['$.', false, glob.length - pos, true]\n  }\n\n  // if we got one positive range, and it's a single character, then that's\n  // not actually a magic pattern, it's just that one literal character.\n  // we should not treat that as \"magic\", we should just return the literal\n  // character. [_] is a perfectly valid way to escape glob magic chars.\n  if (\n    negs.length === 0 &&\n    ranges.length === 1 &&\n    /^\\\\?.$/.test(ranges[0]) &&\n    !negate\n  ) {\n    const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0]\n    return [regexpEscape(r), false, endPos - pos, false]\n  }\n\n  const sranges = '[' + (negate ? '^' : '') + rangesToString(ranges) + ']'\n  const snegs = '[' + (negate ? '' : '^') + rangesToString(negs) + ']'\n  const comb =\n    ranges.length && negs.length\n      ? '(' + sranges + '|' + snegs + ')'\n      : ranges.length\n      ? sranges\n      : snegs\n\n  return [comb, uflag, endPos - pos, true]\n}\n", "import { MinimatchOptions } from './index.js'\n/**\n * Un-escape a string that has been escaped with {@link escape}.\n *\n * If the {@link windowsPathsNoEscape} option is used, then square-brace\n * escapes are removed, but not backslash escapes.  For example, it will turn\n * the string `'[*]'` into `*`, but it will not turn `'\\\\*'` into `'*'`,\n * becuase `\\` is a path separator in `windowsPathsNoEscape` mode.\n *\n * When `windowsPathsNoEscape` is not set, then both brace escapes and\n * backslash escapes are removed.\n *\n * Slashes (and backslashes in `windowsPathsNoEscape` mode) cannot be escaped\n * or unescaped.\n */\nexport const unescape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  return windowsPathsNoEscape\n    ? s.replace(/\\[([^\\/\\\\])\\]/g, '$1')\n    : s.replace(/((?!\\\\).|^)\\[([^\\/\\\\])\\]/g, '$1$2').replace(/\\\\([^\\/])/g, '$1')\n}\n", "// parse a single path portion\n\nimport { parseClass } from './brace-expressions.js'\nimport { MinimatchOptions, MMRegExp } from './index.js'\nimport { unescape } from './unescape.js'\n\n// classes [] are handled by the parseClass method\n// for positive extglobs, we sub-parse the contents, and combine,\n// with the appropriate regexp close.\n// for negative extglobs, we sub-parse the contents, but then\n// have to include the rest of the pattern, then the parent, etc.,\n// as the thing that cannot be because RegExp negative lookaheads\n// are different from globs.\n//\n// So for example:\n// a@(i|w!(x|y)z|j)b => ^a(i|w((!?(x|y)zb).*)z|j)b$\n//   1   2 3   4 5 6      1   2    3   46      5 6\n//\n// Assembling the extglob requires not just the negated patterns themselves,\n// but also anything following the negative patterns up to the boundary\n// of the current pattern, plus anything following in the parent pattern.\n//\n//\n// So, first, we parse the string into an AST of extglobs, without turning\n// anything into regexps yet.\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y']}, 'z'], ['j']]}, 'b']\n//\n// Then, for all the negative extglobs, we append whatever comes after in\n// each parent as their tail\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y'], 'z', 'b'}, 'z'], ['j']]}, 'b']\n//\n// Lastly, we turn each of these pieces into a regexp, and join\n//\n//                                 v----- .* because there's more following,\n//                                 v    v  otherwise, .+ because it must be\n//                                 v    v  *something* there.\n// ['^a', {@ ['i', 'w(?:(!?(?:x|y).*zb$).*)z', 'j' ]}, 'b$']\n//   copy what follows into here--^^^^^\n// ['^a', '(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)', 'b$']\n// ['^a(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)b$']\n\nexport type ExtglobType = '!' | '?' | '+' | '*' | '@'\nconst types = new Set<ExtglobType>(['!', '?', '+', '*', '@'])\nconst isExtglobType = (c: string): c is ExtglobType =>\n  types.has(c as ExtglobType)\n\n// Patterns that get prepended to bind to the start of either the\n// entire string, or just a single path portion, to prevent dots\n// and/or traversal patterns, when needed.\n// Exts don't need the ^ or / bit, because the root binds that already.\nconst startNoTraversal = '(?!(?:^|/)\\\\.\\\\.?(?:$|/))'\nconst startNoDot = '(?!\\\\.)'\n\n// characters that indicate a start of pattern needs the \"no dots\" bit,\n// because a dot *might* be matched. ( is not in the list, because in\n// the case of a child extglob, it will handle the prevention itself.\nconst addPatternStart = new Set(['[', '.'])\n// cases where traversal is A-OK, no dot prevention needed\nconst justDots = new Set(['..', '.'])\nconst reSpecials = new Set('().*{}+?[]^$\\\\!')\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// any single thing other than /\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n// use + when we need to ensure that *something* matches, because the * is\n// the only thing in the path portion.\nconst starNoEmpty = qmark + '+?'\n\n// remove the \\ chars that we added if we end up doing a nonmagic compare\n// const deslash = (s: string) => s.replace(/\\\\(.)/g, '$1')\n\nexport class AST {\n  type: ExtglobType | null\n  readonly #root: AST\n\n  #hasMagic?: boolean\n  #uflag: boolean = false\n  #parts: (string | AST)[] = []\n  readonly #parent?: AST\n  readonly #parentIndex: number\n  #negs: AST[]\n  #filledNegs: boolean = false\n  #options: MinimatchOptions\n  #toString?: string\n  // set to true if it's an extglob with no children\n  // (which really means one child of '')\n  #emptyExt: boolean = false\n\n  constructor(\n    type: ExtglobType | null,\n    parent?: AST,\n    options: MinimatchOptions = {}\n  ) {\n    this.type = type\n    // extglobs are inherently magical\n    if (type) this.#hasMagic = true\n    this.#parent = parent\n    this.#root = this.#parent ? this.#parent.#root : this\n    this.#options = this.#root === this ? options : this.#root.#options\n    this.#negs = this.#root === this ? [] : this.#root.#negs\n    if (type === '!' && !this.#root.#filledNegs) this.#negs.push(this)\n    this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0\n  }\n\n  get hasMagic(): boolean | undefined {\n    /* c8 ignore start */\n    if (this.#hasMagic !== undefined) return this.#hasMagic\n    /* c8 ignore stop */\n    for (const p of this.#parts) {\n      if (typeof p === 'string') continue\n      if (p.type || p.hasMagic) return (this.#hasMagic = true)\n    }\n    // note: will be undefined until we generate the regexp src and find out\n    return this.#hasMagic\n  }\n\n  // reconstructs the pattern\n  toString(): string {\n    if (this.#toString !== undefined) return this.#toString\n    if (!this.type) {\n      return (this.#toString = this.#parts.map(p => String(p)).join(''))\n    } else {\n      return (this.#toString =\n        this.type + '(' + this.#parts.map(p => String(p)).join('|') + ')')\n    }\n  }\n\n  #fillNegs() {\n    /* c8 ignore start */\n    if (this !== this.#root) throw new Error('should only call on root')\n    if (this.#filledNegs) return this\n    /* c8 ignore stop */\n\n    // call toString() once to fill this out\n    this.toString()\n    this.#filledNegs = true\n    let n: AST | undefined\n    while ((n = this.#negs.pop())) {\n      if (n.type !== '!') continue\n      // walk up the tree, appending everthing that comes AFTER parentIndex\n      let p: AST | undefined = n\n      let pp = p.#parent\n      while (pp) {\n        for (\n          let i = p.#parentIndex + 1;\n          !pp.type && i < pp.#parts.length;\n          i++\n        ) {\n          for (const part of n.#parts) {\n            /* c8 ignore start */\n            if (typeof part === 'string') {\n              throw new Error('string part in extglob AST??')\n            }\n            /* c8 ignore stop */\n            part.copyIn(pp.#parts[i])\n          }\n        }\n        p = pp\n        pp = p.#parent\n      }\n    }\n    return this\n  }\n\n  push(...parts: (string | AST)[]) {\n    for (const p of parts) {\n      if (p === '') continue\n      /* c8 ignore start */\n      if (typeof p !== 'string' && !(p instanceof AST && p.#parent === this)) {\n        throw new Error('invalid part: ' + p)\n      }\n      /* c8 ignore stop */\n      this.#parts.push(p)\n    }\n  }\n\n  toJSON() {\n    const ret: any[] =\n      this.type === null\n        ? this.#parts.slice().map(p => (typeof p === 'string' ? p : p.toJSON()))\n        : [this.type, ...this.#parts.map(p => (p as AST).toJSON())]\n    if (this.isStart() && !this.type) ret.unshift([])\n    if (\n      this.isEnd() &&\n      (this === this.#root ||\n        (this.#root.#filledNegs && this.#parent?.type === '!'))\n    ) {\n      ret.push({})\n    }\n    return ret\n  }\n\n  isStart(): boolean {\n    if (this.#root === this) return true\n    // if (this.type) return !!this.#parent?.isStart()\n    if (!this.#parent?.isStart()) return false\n    if (this.#parentIndex === 0) return true\n    // if everything AHEAD of this is a negation, then it's still the \"start\"\n    const p = this.#parent\n    for (let i = 0; i < this.#parentIndex; i++) {\n      const pp = p.#parts[i]\n      if (!(pp instanceof AST && pp.type === '!')) {\n        return false\n      }\n    }\n    return true\n  }\n\n  isEnd(): boolean {\n    if (this.#root === this) return true\n    if (this.#parent?.type === '!') return true\n    if (!this.#parent?.isEnd()) return false\n    if (!this.type) return this.#parent?.isEnd()\n    // if not root, it'll always have a parent\n    /* c8 ignore start */\n    const pl = this.#parent ? this.#parent.#parts.length : 0\n    /* c8 ignore stop */\n    return this.#parentIndex === pl - 1\n  }\n\n  copyIn(part: AST | string) {\n    if (typeof part === 'string') this.push(part)\n    else this.push(part.clone(this))\n  }\n\n  clone(parent: AST) {\n    const c = new AST(this.type, parent)\n    for (const p of this.#parts) {\n      c.copyIn(p)\n    }\n    return c\n  }\n\n  static #parseAST(\n    str: string,\n    ast: AST,\n    pos: number,\n    opt: MinimatchOptions\n  ): number {\n    let escaping = false\n    let inBrace = false\n    let braceStart = -1\n    let braceNeg = false\n    if (ast.type === null) {\n      // outside of a extglob, append until we find a start\n      let i = pos\n      let acc = ''\n      while (i < str.length) {\n        const c = str.charAt(i++)\n        // still accumulate escapes at this point, but we do ignore\n        // starts that are escaped\n        if (escaping || c === '\\\\') {\n          escaping = !escaping\n          acc += c\n          continue\n        }\n\n        if (inBrace) {\n          if (i === braceStart + 1) {\n            if (c === '^' || c === '!') {\n              braceNeg = true\n            }\n          } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n            inBrace = false\n          }\n          acc += c\n          continue\n        } else if (c === '[') {\n          inBrace = true\n          braceStart = i\n          braceNeg = false\n          acc += c\n          continue\n        }\n\n        if (!opt.noext && isExtglobType(c) && str.charAt(i) === '(') {\n          ast.push(acc)\n          acc = ''\n          const ext = new AST(c, ast)\n          i = AST.#parseAST(str, ext, i, opt)\n          ast.push(ext)\n          continue\n        }\n        acc += c\n      }\n      ast.push(acc)\n      return i\n    }\n\n    // some kind of extglob, pos is at the (\n    // find the next | or )\n    let i = pos + 1\n    let part = new AST(null, ast)\n    const parts: AST[] = []\n    let acc = ''\n    while (i < str.length) {\n      const c = str.charAt(i++)\n      // still accumulate escapes at this point, but we do ignore\n      // starts that are escaped\n      if (escaping || c === '\\\\') {\n        escaping = !escaping\n        acc += c\n        continue\n      }\n\n      if (inBrace) {\n        if (i === braceStart + 1) {\n          if (c === '^' || c === '!') {\n            braceNeg = true\n          }\n        } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n          inBrace = false\n        }\n        acc += c\n        continue\n      } else if (c === '[') {\n        inBrace = true\n        braceStart = i\n        braceNeg = false\n        acc += c\n        continue\n      }\n\n      if (isExtglobType(c) && str.charAt(i) === '(') {\n        part.push(acc)\n        acc = ''\n        const ext = new AST(c, part)\n        part.push(ext)\n        i = AST.#parseAST(str, ext, i, opt)\n        continue\n      }\n      if (c === '|') {\n        part.push(acc)\n        acc = ''\n        parts.push(part)\n        part = new AST(null, ast)\n        continue\n      }\n      if (c === ')') {\n        if (acc === '' && ast.#parts.length === 0) {\n          ast.#emptyExt = true\n        }\n        part.push(acc)\n        acc = ''\n        ast.push(...parts, part)\n        return i\n      }\n      acc += c\n    }\n\n    // unfinished extglob\n    // if we got here, it was a malformed extglob! not an extglob, but\n    // maybe something else in there.\n    ast.type = null\n    ast.#hasMagic = undefined\n    ast.#parts = [str.substring(pos - 1)]\n    return i\n  }\n\n  static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n    const ast = new AST(null, undefined, options)\n    AST.#parseAST(pattern, ast, 0, options)\n    return ast\n  }\n\n  // returns the regular expression if there's magic, or the unescaped\n  // string if not.\n  toMMPattern(): MMRegExp | string {\n    // should only be called on root\n    /* c8 ignore start */\n    if (this !== this.#root) return this.#root.toMMPattern()\n    /* c8 ignore stop */\n    const glob = this.toString()\n    const [re, body, hasMagic, uflag] = this.toRegExpSource()\n    // if we're in nocase mode, and not nocaseMagicOnly, then we do\n    // still need a regular expression if we have to case-insensitively\n    // match capital/lowercase characters.\n    const anyMagic =\n      hasMagic ||\n      this.#hasMagic ||\n      (this.#options.nocase &&\n        !this.#options.nocaseMagicOnly &&\n        glob.toUpperCase() !== glob.toLowerCase())\n    if (!anyMagic) {\n      return body\n    }\n\n    const flags = (this.#options.nocase ? 'i' : '') + (uflag ? 'u' : '')\n    return Object.assign(new RegExp(`^${re}$`, flags), {\n      _src: re,\n      _glob: glob,\n    })\n  }\n\n  // returns the string match, the regexp source, whether there's magic\n  // in the regexp (so a regular expression is required) and whether or\n  // not the uflag is needed for the regular expression (for posix classes)\n  // TODO: instead of injecting the start/end at this point, just return\n  // the BODY of the regexp, along with the start/end portions suitable\n  // for binding the start/end in either a joined full-path makeRe context\n  // (where we bind to (^|/), or a standalone matchPart context (where\n  // we bind to ^, and not /).  Otherwise slashes get duped!\n  //\n  // In part-matching mode, the start is:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: ^(?!\\.\\.?$)\n  // - if dots allowed or not possible: ^\n  // - if dots possible and not allowed: ^(?!\\.)\n  // end is:\n  // - if not isEnd(): nothing\n  // - else: $\n  //\n  // In full-path matching mode, we put the slash at the START of the\n  // pattern, so start is:\n  // - if first pattern: same as part-matching mode\n  // - if not isStart(): nothing\n  // - if traversal possible, but not allowed: /(?!\\.\\.?(?:$|/))\n  // - if dots allowed or not possible: /\n  // - if dots possible and not allowed: /(?!\\.)\n  // end is:\n  // - if last pattern, same as part-matching mode\n  // - else nothing\n  //\n  // Always put the (?:$|/) on negated tails, though, because that has to be\n  // there to bind the end of the negated pattern portion, and it's easier to\n  // just stick it in now rather than try to inject it later in the middle of\n  // the pattern.\n  //\n  // We can just always return the same end, and leave it up to the caller\n  // to know whether it's going to be used joined or in parts.\n  // And, if the start is adjusted slightly, can do the same there:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: (?:/|^)(?!\\.\\.?$)\n  // - if dots allowed or not possible: (?:/|^)\n  // - if dots possible and not allowed: (?:/|^)(?!\\.)\n  //\n  // But it's better to have a simpler binding without a conditional, for\n  // performance, so probably better to return both start options.\n  //\n  // Then the caller just ignores the end if it's not the first pattern,\n  // and the start always gets applied.\n  //\n  // But that's always going to be $ if it's the ending pattern, or nothing,\n  // so the caller can just attach $ at the end of the pattern when building.\n  //\n  // So the todo is:\n  // - better detect what kind of start is needed\n  // - return both flavors of starting pattern\n  // - attach $ at the end of the pattern when creating the actual RegExp\n  //\n  // Ah, but wait, no, that all only applies to the root when the first pattern\n  // is not an extglob. If the first pattern IS an extglob, then we need all\n  // that dot prevention biz to live in the extglob portions, because eg\n  // +(*|.x*) can match .xy but not .yx.\n  //\n  // So, return the two flavors if it's #root and the first child is not an\n  // AST, otherwise leave it to the child AST to handle it, and there,\n  // use the (?:^|/) style of start binding.\n  //\n  // Even simplified further:\n  // - Since the start for a join is eg /(?!\\.) and the start for a part\n  // is ^(?!\\.), we can just prepend (?!\\.) to the pattern (either root\n  // or start or whatever) and prepend ^ or / at the Regexp construction.\n  toRegExpSource(\n    allowDot?: boolean\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    const dot = allowDot ?? !!this.#options.dot\n    if (this.#root === this) this.#fillNegs()\n    if (!this.type) {\n      const noEmpty = this.isStart() && this.isEnd()\n      const src = this.#parts\n        .map(p => {\n          const [re, _, hasMagic, uflag] =\n            typeof p === 'string'\n              ? AST.#parseGlob(p, this.#hasMagic, noEmpty)\n              : p.toRegExpSource(allowDot)\n          this.#hasMagic = this.#hasMagic || hasMagic\n          this.#uflag = this.#uflag || uflag\n          return re\n        })\n        .join('')\n\n      let start = ''\n      if (this.isStart()) {\n        if (typeof this.#parts[0] === 'string') {\n          // this is the string that will match the start of the pattern,\n          // so we need to protect against dots and such.\n\n          // '.' and '..' cannot match unless the pattern is that exactly,\n          // even if it starts with . or dot:true is set.\n          const dotTravAllowed =\n            this.#parts.length === 1 && justDots.has(this.#parts[0])\n          if (!dotTravAllowed) {\n            const aps = addPatternStart\n            // check if we have a possibility of matching . or ..,\n            // and prevent that.\n            const needNoTrav =\n              // dots are allowed, and the pattern starts with [ or .\n              (dot && aps.has(src.charAt(0))) ||\n              // the pattern starts with \\., and then [ or .\n              (src.startsWith('\\\\.') && aps.has(src.charAt(2))) ||\n              // the pattern starts with \\.\\., and then [ or .\n              (src.startsWith('\\\\.\\\\.') && aps.has(src.charAt(4)))\n            // no need to prevent dots if it can't match a dot, or if a\n            // sub-pattern will be preventing it anyway.\n            const needNoDot = !dot && !allowDot && aps.has(src.charAt(0))\n\n            start = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : ''\n          }\n        }\n      }\n\n      // append the \"end of path portion\" pattern to negation tails\n      let end = ''\n      if (\n        this.isEnd() &&\n        this.#root.#filledNegs &&\n        this.#parent?.type === '!'\n      ) {\n        end = '(?:$|\\\\/)'\n      }\n      const final = start + src + end\n      return [\n        final,\n        unescape(src),\n        (this.#hasMagic = !!this.#hasMagic),\n        this.#uflag,\n      ]\n    }\n\n    // We need to calculate the body *twice* if it's a repeat pattern\n    // at the start, once in nodot mode, then again in dot mode, so a\n    // pattern like *(?) can match 'x.y'\n\n    const repeated = this.type === '*' || this.type === '+'\n    // some kind of extglob\n    const start = this.type === '!' ? '(?:(?!(?:' : '(?:'\n    let body = this.#partsToRegExp(dot)\n\n    if (this.isStart() && this.isEnd() && !body && this.type !== '!') {\n      // invalid extglob, has to at least be *something* present, if it's\n      // the entire path portion.\n      const s = this.toString()\n      this.#parts = [s]\n      this.type = null\n      this.#hasMagic = undefined\n      return [s, unescape(this.toString()), false, false]\n    }\n\n    // XXX abstract out this map method\n    let bodyDotAllowed =\n      !repeated || allowDot || dot || !startNoDot\n        ? ''\n        : this.#partsToRegExp(true)\n    if (bodyDotAllowed === body) {\n      bodyDotAllowed = ''\n    }\n    if (bodyDotAllowed) {\n      body = `(?:${body})(?:${bodyDotAllowed})*?`\n    }\n\n    // an empty !() is exactly equivalent to a starNoEmpty\n    let final = ''\n    if (this.type === '!' && this.#emptyExt) {\n      final = (this.isStart() && !dot ? startNoDot : '') + starNoEmpty\n    } else {\n      const close =\n        this.type === '!'\n          ? // !() must match something,but !(x) can match ''\n            '))' +\n            (this.isStart() && !dot && !allowDot ? startNoDot : '') +\n            star +\n            ')'\n          : this.type === '@'\n          ? ')'\n          : this.type === '?'\n          ? ')?'\n          : this.type === '+' && bodyDotAllowed\n          ? ')'\n          : this.type === '*' && bodyDotAllowed\n          ? `)?`\n          : `)${this.type}`\n      final = start + body + close\n    }\n    return [\n      final,\n      unescape(body),\n      (this.#hasMagic = !!this.#hasMagic),\n      this.#uflag,\n    ]\n  }\n\n  #partsToRegExp(dot: boolean) {\n    return this.#parts\n      .map(p => {\n        // extglob ASTs should only contain parent ASTs\n        /* c8 ignore start */\n        if (typeof p === 'string') {\n          throw new Error('string type in extglob ast??')\n        }\n        /* c8 ignore stop */\n        // can ignore hasMagic, because extglobs are already always magic\n        const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot)\n        this.#uflag = this.#uflag || uflag\n        return re\n      })\n      .filter(p => !(this.isStart() && this.isEnd()) || !!p)\n      .join('|')\n  }\n\n  static #parseGlob(\n    glob: string,\n    hasMagic: boolean | undefined,\n    noEmpty: boolean = false\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    let escaping = false\n    let re = ''\n    let uflag = false\n    for (let i = 0; i < glob.length; i++) {\n      const c = glob.charAt(i)\n      if (escaping) {\n        escaping = false\n        re += (reSpecials.has(c) ? '\\\\' : '') + c\n        continue\n      }\n      if (c === '\\\\') {\n        if (i === glob.length - 1) {\n          re += '\\\\\\\\'\n        } else {\n          escaping = true\n        }\n        continue\n      }\n      if (c === '[') {\n        const [src, needUflag, consumed, magic] = parseClass(glob, i)\n        if (consumed) {\n          re += src\n          uflag = uflag || needUflag\n          i += consumed - 1\n          hasMagic = hasMagic || magic\n          continue\n        }\n      }\n      if (c === '*') {\n        if (noEmpty && glob === '*') re += starNoEmpty\n        else re += star\n        hasMagic = true\n        continue\n      }\n      if (c === '?') {\n        re += qmark\n        hasMagic = true\n        continue\n      }\n      re += regExpEscape(c)\n    }\n    return [re, unescape(glob), !!hasMagic, uflag]\n  }\n}\n", "import { MinimatchOptions } from './index.js'\n/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */\nexport const escape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  // don't need to escape +@! because we escape the parens\n  // that make those magic, and escaping ! as [!] isn't valid,\n  // because [!]] is a valid glob class meaning not ']'.\n  return windowsPathsNoEscape\n    ? s.replace(/[?*()[\\]]/g, '[$&]')\n    : s.replace(/[?*()[\\]\\\\]/g, '\\\\$&')\n}\n", "import { minimatch } from 'minimatch';\n\nexport function matches(text: string, pattern: string): boolean {\n  return minimatch(text, pattern);\n}\n", "import { CallContext, ENV } from './call-context.ts';\nimport { MemoryOptions } from './interfaces.ts';\nimport { EXTISM_ENV } from './foreground-plugin.ts';\nimport { matches } from './polyfills/deno-minimatch.ts';\n\nexport class HttpContext {\n  fetch: typeof fetch;\n  lastStatusCode: number;\n  lastHeaders: Record<string, string> | null;\n  allowedHosts: string[];\n  memoryOptions: MemoryOptions;\n\n  constructor(\n    _fetch: typeof fetch,\n    allowedHosts: string[],\n    memoryOptions: MemoryOptions,\n    allowResponseHeaders: boolean,\n  ) {\n    this.fetch = _fetch;\n    this.allowedHosts = allowedHosts;\n    this.lastStatusCode = 0;\n    this.memoryOptions = memoryOptions;\n    this.lastHeaders = allowResponseHeaders ? {} : null;\n  }\n\n  contribute(functions: Record<string, Record<string, any>>) {\n    functions[EXTISM_ENV] ??= {};\n    functions[EXTISM_ENV].http_request = (callContext: CallContext, reqaddr: bigint, bodyaddr: bigint) =>\n      this.makeRequest(callContext, reqaddr, bodyaddr);\n    functions[EXTISM_ENV].http_status_code = () => this.lastStatusCode;\n    functions[EXTISM_ENV].http_headers = (callContext: CallContext) => {\n      if (this.lastHeaders === null) {\n        return 0n;\n      }\n      return callContext.store(JSON.stringify(this.lastHeaders));\n    };\n  }\n\n  async makeRequest(callContext: CallContext, reqaddr: bigint, bodyaddr: bigint) {\n    if (this.lastHeaders !== null) {\n      this.lastHeaders = {};\n    }\n    this.lastStatusCode = 0;\n\n    const req = callContext.read(reqaddr);\n    if (req === null) {\n      return 0n;\n    }\n\n    const { headers, header, url: rawUrl, method: m } = req.json();\n    const method = m ?? 'GET';\n    const url = new URL(rawUrl);\n\n    const isAllowed = this.allowedHosts.some((allowedHost) => {\n      return allowedHost === url.hostname || matches(url.hostname, allowedHost);\n    });\n\n    if (!isAllowed) {\n      throw new Error(`Call error: HTTP request to \"${url}\" is not allowed (no allowedHosts match \"${url.hostname}\")`);\n    }\n\n    const body = bodyaddr === 0n || method === 'GET' || method === 'HEAD' ? null : callContext.read(bodyaddr)?.bytes();\n    const fetch = this.fetch;\n    const response = await fetch(rawUrl, {\n      headers: headers || header,\n      method,\n      ...(body ? { body: body.slice() } : {}),\n    });\n\n    this.lastStatusCode = response.status;\n\n    if (this.lastHeaders !== null) {\n      this.lastHeaders = Object.fromEntries(response.headers);\n    }\n\n    try {\n      const bytes = this.memoryOptions.maxHttpResponseBytes\n        ? await readBodyUpTo(response, this.memoryOptions.maxHttpResponseBytes)\n        : new Uint8Array(await response.arrayBuffer());\n\n      const result = callContext.store(bytes);\n\n      return result;\n    } catch (err) {\n      if (err instanceof Error) {\n        const ptr = callContext.store(new TextEncoder().encode(err.message));\n        callContext[ENV].log_error(ptr);\n        return 0n;\n      }\n      return 0n;\n    }\n  }\n}\n\nasync function readBodyUpTo(response: Response, maxBytes: number): Promise<Uint8Array> {\n  const reader = response.body?.getReader();\n  if (!reader) {\n    return new Uint8Array(0);\n  }\n\n  let receivedLength = 0;\n  const chunks = [];\n\n  while (receivedLength < maxBytes) {\n    const { done, value } = await reader.read();\n    if (done) {\n      break;\n    }\n    chunks.push(value);\n    receivedLength += value.length;\n    if (receivedLength >= maxBytes) {\n      throw new Error(`Response body exceeded ${maxBytes} bytes`);\n    }\n  }\n\n  const limitedResponseBody = new Uint8Array(receivedLength);\n  let position = 0;\n  for (const chunk of chunks) {\n    limitedResponseBody.set(chunk, position);\n    position += chunk.length;\n  }\n\n  return limitedResponseBody;\n}\n", "import { BEGIN, CallContext, END, ENV, GET_BLOCK, RESET, SET_HOST_CONTEXT, STORE } from './call-context.ts';\nimport { type InternalConfig, InternalWasi, PluginOutput } from './interfaces.ts';\nimport { CAPABILITIES } from './polyfills/deno-capabilities.ts';\nimport { loadWasi } from './polyfills/deno-wasi.ts';\nimport { HttpContext } from './http-context.ts';\n\nexport const EXTISM_ENV = 'extism:host/env';\n\ntype InstantiatedModule = [WebAssembly.Module, WebAssembly.Instance];\n\ninterface SuspendingCtor {\n  new (fn: CallableFunction): any;\n}\n\nconst AsyncFunction = (async () => {}).constructor;\nconst Suspending: SuspendingCtor | undefined = (WebAssembly as any).Suspending;\nconst promising: CallableFunction | undefined = (WebAssembly as any).promising;\n\nexport class ForegroundPlugin {\n  #context: CallContext;\n  #instancePair: InstantiatedModule;\n  #active: boolean = false;\n  #wasi: InternalWasi[];\n  #opts: InternalConfig;\n  #suspendsOnInvoke: boolean;\n\n  constructor(\n    opts: InternalConfig,\n    context: CallContext,\n    instancePair: InstantiatedModule,\n    wasi: InternalWasi[],\n    suspendsOnInvoke: boolean,\n  ) {\n    this.#context = context;\n    this.#instancePair = instancePair;\n    this.#wasi = wasi;\n    this.#opts = opts;\n    this.#suspendsOnInvoke = suspendsOnInvoke;\n  }\n\n  async reset(): Promise<boolean> {\n    if (this.isActive()) {\n      return false;\n    }\n\n    this.#context[RESET]();\n    return true;\n  }\n\n  isActive() {\n    return this.#active;\n  }\n\n  async functionExists(funcName: string): Promise<boolean> {\n    return typeof this.#instancePair[1].exports[funcName] === 'function';\n  }\n\n  async callBlock(funcName: string, input: number | null): Promise<[number | null, number | null]> {\n    this.#active = true;\n    const func: CallableFunction | undefined = this.#instancePair[1].exports[funcName] as CallableFunction;\n\n    if (!func) {\n      throw Error(`Plugin error: function \"${funcName}\" does not exist`);\n    }\n\n    if (typeof func !== 'function') {\n      throw Error(`Plugin error: export \"${funcName}\" is not a function`);\n    }\n\n    this.#context[BEGIN](input ?? null);\n    try {\n      this.#suspendsOnInvoke ? await (promising as any)(func)() : func();\n      return this.#context[END]();\n    } catch (err) {\n      this.#context[END]();\n      throw err;\n    } finally {\n      this.#active = false;\n    }\n  }\n\n  async call<T = any>(funcName: string, input?: string | Uint8Array, hostContext?: T): Promise<PluginOutput | null> {\n    this.#context[RESET]();\n\n    const inputIdx = this.#context[STORE](input);\n    this.#context[SET_HOST_CONTEXT](hostContext);\n\n    const [errorIdx, outputIdx] = await this.callBlock(funcName, inputIdx);\n    const shouldThrow = errorIdx !== null;\n    const idx = errorIdx ?? outputIdx;\n\n    if (idx === null) {\n      return null;\n    }\n\n    const block = this.#context[GET_BLOCK](idx);\n    if (!block) {\n      return null;\n    }\n\n    const output = new PluginOutput(block.buffer);\n    if (shouldThrow) {\n      throw new Error(`Plugin-originated error: ${output.string()}`);\n    }\n    return output;\n  }\n\n  async getExports(): Promise<WebAssembly.ModuleExportDescriptor[]> {\n    return WebAssembly.Module.exports(this.#instancePair[0]) || [];\n  }\n\n  async getImports(): Promise<WebAssembly.ModuleImportDescriptor[]> {\n    return WebAssembly.Module.imports(this.#instancePair[0]) || [];\n  }\n\n  async getInstance(): Promise<WebAssembly.Instance> {\n    return this.#instancePair[1];\n  }\n\n  async close(): Promise<void> {\n    await Promise.all(this.#wasi.map((xs) => xs.close()));\n    this.#wasi.length = 0;\n  }\n}\n\nexport async function createForegroundPlugin(\n  opts: InternalConfig,\n  names: string[],\n  modules: WebAssembly.Module[],\n  context: CallContext = new CallContext(ArrayBuffer, opts.logger, opts.logLevel, opts.config, opts.memory),\n): Promise<ForegroundPlugin> {\n  const imports: Record<string, Record<string, any>> = {\n    [EXTISM_ENV]: context[ENV],\n    env: {},\n  };\n\n  let suspendsOnInvoke = false;\n  for (const namespace in opts.functions) {\n    imports[namespace] = imports[namespace] || {};\n    for (const [name, func] of Object.entries(opts.functions[namespace])) {\n      const isAsync = func.constructor === AsyncFunction;\n      suspendsOnInvoke ||= isAsync;\n      const wrapped = func.bind(null, context);\n      imports[namespace][name] = isAsync ? new Suspending!(wrapped) : wrapped;\n    }\n  }\n\n  if (suspendsOnInvoke && (!Suspending || !promising)) {\n    throw new TypeError(\n      'This platform does not support async function imports on the main thread; consider using `runInWorker`.',\n    );\n  }\n\n  // find the \"main\" module and try to instantiate it.\n  const mainIndex = names.indexOf('main');\n  if (mainIndex === -1) {\n    throw new Error('Unreachable: manifests must have at least one \"main\" module. Enforced by \"src/manifest.ts\")');\n  }\n  const seen: Map<WebAssembly.Module, WebAssembly.Instance> = new Map();\n  const wasiList: InternalWasi[] = [];\n\n  const mutableFlags = { suspendsOnInvoke };\n  const instance = await instantiateModule(\n    context,\n    ['main'],\n    modules[mainIndex],\n    imports,\n    opts,\n    wasiList,\n    names,\n    modules,\n    seen,\n    mutableFlags,\n  );\n\n  return new ForegroundPlugin(opts, context, [modules[mainIndex], instance], wasiList, mutableFlags.suspendsOnInvoke);\n}\n\nasync function instantiateModule(\n  context: CallContext,\n  current: string[],\n  module: WebAssembly.Module,\n  imports: Record<string, Record<string, any>>,\n  opts: InternalConfig,\n  wasiList: InternalWasi[],\n  names: string[],\n  modules: WebAssembly.Module[],\n  linked: Map<WebAssembly.Module, WebAssembly.Instance | null>,\n  mutableFlags: { suspendsOnInvoke: boolean },\n) {\n  linked.set(module, null);\n\n  const instantiationImports: Record<string, Record<string, WebAssembly.ExportValue | CallableFunction>> = {};\n  const requested = WebAssembly.Module.imports(module);\n\n  let wasi = null;\n  for (const { kind, module, name } of requested) {\n    const nameIdx = names.indexOf(module);\n\n    if (nameIdx === -1) {\n      if (module === 'wasi_snapshot_preview1' && wasi === null) {\n        if (!CAPABILITIES.supportsWasiPreview1) {\n          throw new Error('WASI is not supported on this platform');\n        }\n\n        if (!opts.wasiEnabled) {\n          throw new Error('WASI is not enabled; see the \"useWasi\" plugin option');\n        }\n\n        if (wasi === null) {\n          wasi = await loadWasi(opts.allowedPaths, opts.enableWasiOutput);\n          wasiList.push(wasi);\n          imports.wasi_snapshot_preview1 = await wasi.importObject();\n        }\n      }\n\n      // lookup from \"imports\"\n      if (!Object.hasOwnProperty.call(imports, module)) {\n        throw new Error(\n          `from module \"${current.join(\n            '\"/\"',\n          )}\": cannot resolve import \"${module}\" \"${name}\": not provided by host imports nor linked manifest items`,\n        );\n      }\n\n      if (!Object.hasOwnProperty.call(imports[module], name)) {\n        throw new Error(\n          `from module \"${current.join(\n            '\"/\"',\n          )}\": cannot resolve import \"${module}\" \"${name}\" (\"${module}\" is a host module, but does not contain \"${name}\")`,\n        );\n      }\n\n      // XXX(chrisdickinson): This is a bit of a hack, admittedly. So what's going on here?\n      //\n      // JSPI is going on here. Let me explain: at the time of writing, the js-sdk supports\n      // JSPI by detecting AsyncFunction use in the `functions` parameter. When we detect an\n      // async function in imports we _must_ mark all exported Wasm functions as \"promising\" --\n      // that is, they might call a host function that suspends the stack.\n      //\n      // If we were to mark extism's http_request as async, we would _always_ set exports as\n      // \"promising\". This adds unnecessary overhead for folks who aren't using `http_request`.\n      // Instead, we detect if any of the manifest items *import* `http_request`. If they\n      // haven't overridden the default CallContext implementation, we provide an HttpContext\n      // on-demand.\n      //\n      // Unfortuantely this duplicates a little bit of logic-- in particular, we have to bind\n      // CallContext to each of the HttpContext contributions (See \"REBIND\" below.)\n      if (\n        module === EXTISM_ENV &&\n        name === 'http_request' &&\n        promising &&\n        imports[module][name] === context[ENV].http_request\n      ) {\n        const httpContext = new HttpContext(opts.fetch, opts.allowedHosts, opts.memory, opts.allowHttpResponseHeaders);\n\n        mutableFlags.suspendsOnInvoke = true;\n\n        const contributions = {} as any;\n        httpContext.contribute(contributions);\n        for (const [key, entry] of Object.entries(contributions[EXTISM_ENV] as { [k: string]: CallableFunction })) {\n          // REBIND:\n          imports[module][key] = (entry as any).bind(null, context);\n        }\n        imports[module][name] = new Suspending!(imports[module][name]);\n      }\n\n      switch (kind) {\n        case `function`: {\n          instantiationImports[module] ??= {};\n          instantiationImports[module][name] = imports[module][name] as CallableFunction;\n          break;\n        }\n        default:\n          throw new Error(\n            `from module \"${current.join(\n              '\"/\"',\n            )}\": in import \"${module}\" \"${name}\", \"${kind}\"-typed host imports are not supported yet`,\n          );\n      }\n    } else {\n      // lookup from \"linked\"\n      const provider = modules[nameIdx];\n      const providerExports = WebAssembly.Module.exports(provider);\n\n      const target = providerExports.find((xs) => {\n        return xs.name === name && xs.kind === kind;\n      });\n\n      if (!target) {\n        throw new Error(\n          `from module \"${current.join('\"/\"')}\": cannot import \"${module}\" \"${name}\"; no export matched request`,\n        );\n      }\n\n      // If the dependency provides \"_start\", treat it as a WASI Command module; instantiate it (and its subtree) directly.\n      const instance = providerExports.find((xs) => xs.name === '_start')\n        ? await instantiateModule(\n            context,\n            [...current, module],\n            provider,\n            imports,\n            opts,\n            wasiList,\n            names,\n            modules,\n            new Map(),\n            mutableFlags,\n          )\n        : !linked.has(provider)\n        ? (await instantiateModule(\n            context,\n            [...current, module],\n            provider,\n            imports,\n            opts,\n            wasiList,\n            names,\n            modules,\n            linked,\n            mutableFlags,\n          ),\n          linked.get(provider))\n        : linked.get(provider);\n\n      if (!instance) {\n        // circular import, either make a trampoline or bail\n        if (kind === 'function') {\n          instantiationImports[module] = {};\n          let cached: CallableFunction | null = null;\n          instantiationImports[module][name] = (...args: (number | bigint)[]) => {\n            if (cached) {\n              return cached(...args);\n            }\n            const instance = linked.get(modules[nameIdx]);\n            if (!instance) {\n              throw new Error(\n                `from module instance \"${current.join('\"/\"')}\": target module \"${module}\" was never instantiated`,\n              );\n            }\n            cached = instance.exports[name] as CallableFunction;\n            return cached(...args);\n          };\n        } else {\n          throw new Error(\n            `from module \"${current.join(\n              '\"/\"',\n            )}\": cannot import \"${module}\" \"${name}\"; circular imports of type=\"${kind}\" are not supported`,\n          );\n        }\n      } else {\n        // Add each requested import value piecemeal, since we have to validate that _all_ import requests are satisfied by this\n        // module.\n        instantiationImports[module] ??= {};\n        instantiationImports[module][name] = instance.exports[name] as WebAssembly.ExportValue;\n      }\n    }\n  }\n\n  const instance = await WebAssembly.instantiate(module, instantiationImports);\n\n  const guestType = instance.exports.hs_init\n    ? 'haskell'\n    : instance.exports._initialize\n    ? 'reactor'\n    : instance.exports._start\n    ? 'command'\n    : 'none';\n\n  if (wasi) {\n    await wasi?.initialize(instance);\n    if (instance.exports.hs_init) {\n      (instance.exports.hs_init as CallableFunction)();\n    }\n  } else {\n    switch (guestType) {\n      case 'command':\n        if (instance.exports._initialize) {\n          (instance.exports._initialize as CallableFunction)();\n        }\n\n        (instance.exports._start as CallableFunction)();\n        break;\n      case 'reactor':\n        (instance.exports._initialize as CallableFunction)();\n        break;\n      case 'haskell':\n        (instance.exports.hs_init as CallableFunction)();\n        break;\n    }\n  }\n\n  linked.set(module, instance);\n  return instance;\n}\n", "export const WORKER_URL = new URL(\"data:text/javascript;base64,\");\n", "// This is a polyfill for the main thread in a browser context.\n// We're making the native Worker API look like node's worker_threads\n// implementation.\nexport const parentPort = null;\n\nconst HANDLER_MAP = new WeakMap();\n\nexport class Worker extends (global.Worker || Object) {\n  constructor(url: string) {\n    super(url, { type: 'module', credentials: 'omit', name: 'extism-worker', crossOriginIsolated: true } as any);\n  }\n\n  on(ev: string, action: any) {\n    const handler = (ev: any) => action(ev.data);\n    HANDLER_MAP.set(action, handler);\n    this.addEventListener(ev, handler);\n  }\n\n  removeListener(ev: string, action: any) {\n    const handler = HANDLER_MAP.get(action);\n    if (handler) {\n      this.removeEventListener(ev, handler);\n    }\n  }\n\n  once(ev: string, action: any) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    this.addEventListener(ev, function handler(...args) {\n      self.removeEventListener(ev, handler);\n      action.call(self, ...args);\n    });\n  }\n}\n", "/*eslint-disable no-empty*/\nimport {\n  CallContext,\n  ENV,\n  EXPORT_STATE,\n  GET_BLOCK,\n  IMPORT_STATE,\n  RESET,\n  SET_HOST_CONTEXT,\n  STORE,\n} from './call-context.ts';\nimport { type InternalConfig, PluginOutput, SAB_BASE_OFFSET, SharedArrayBufferSection } from './interfaces.ts';\nimport { WORKER_URL } from './worker-url.ts';\nimport { Worker } from 'node:worker_threads';\nimport { CAPABILITIES } from './polyfills/deno-capabilities.ts';\nimport { EXTISM_ENV } from './foreground-plugin.ts';\nimport { HttpContext } from './http-context.ts';\n\n// Firefox has not yet implemented Atomics.waitAsync, but we can polyfill\n// it using a worker as a one-off.\n//\n// TODO: we should probably give _each_ background plugin its own waiter\n// script.\nconst AtomicsWaitAsync =\n  Atomics.waitAsync ||\n  (() => {\n    const src = `onmessage = ev => {\n    const [b, i, v] = ev.data\n    const f = new Int32Array(b)\n    postMessage(Atomics.wait(f, i, v));\n  }`;\n\n    const blob = new (Blob as any)([src], { type: 'text/javascript' });\n    const url = URL.createObjectURL(blob);\n    const w = new Worker(url, { execArgv: [] });\n    return (ia: any, index, value) => {\n      const promise = new Promise((resolve) => {\n        w.once('message', (data) => {\n          resolve(data);\n        });\n      });\n      w.postMessage([ia.buffer, index, value]);\n      return { async: true, value: promise };\n    };\n  })();\n\nclass BackgroundPlugin {\n  sharedData: SharedArrayBuffer;\n  sharedDataView: DataView;\n  hostFlag: Int32Array;\n  opts: InternalConfig;\n  worker: Worker;\n  modules: WebAssembly.Module[];\n  names: string[];\n\n  #context: CallContext;\n  #request: [(result: any) => void, (result: any) => void] | null = null;\n\n  constructor(\n    worker: Worker,\n    sharedData: SharedArrayBuffer,\n    names: string[],\n    modules: WebAssembly.Module[],\n    opts: InternalConfig,\n    context: CallContext,\n  ) {\n    this.sharedData = sharedData;\n    this.sharedDataView = new DataView(sharedData);\n    this.hostFlag = new Int32Array(sharedData);\n    this.opts = opts;\n    this.names = names;\n    this.modules = modules;\n    this.worker = worker;\n    this.#context = context;\n    this.hostFlag[0] = SAB_BASE_OFFSET;\n\n    this.worker.on('message', (ev) => this.#handleMessage(ev));\n  }\n\n  async #handleTimeout() {\n    // block new requests from coming in & the current request from settling\n    const request = this.#request;\n    this.#request = [() => {}, () => {}];\n\n    const timedOut = {};\n    const failed = {};\n    const result = await Promise.race(\n      [\n        timeout(this.opts.timeoutMs, timedOut),\n        Promise.all([terminateWorker(this.worker), createWorker(this.opts, this.names, this.modules, this.sharedData)]),\n      ].filter(Boolean),\n    ).catch(() => failed);\n    this.#context[RESET]();\n\n    // Oof. The Wasm module failed to even _restart_ in the time allotted. There's\n    // not much we can do at this point. Release as much memory as we can while\n    // squatting on `this.#request` so the plugin always looks \"active\".\n    if (result === timedOut) {\n      this.opts.logger.error(\n        'EXTISM: Plugin timed out while handling a timeout. Plugin will hang. This Wasm module may have a non-trivial `start` section.',\n      );\n      this.worker = null as unknown as any;\n      // TODO: expose some way to observe that the plugin is in a \"poisoned\" state.\n      return;\n    }\n\n    // The worker failed to start up for some other reason. This is pretty unlikely to happen!\n    if (result === failed) {\n      this.opts.logger.error('EXTISM: Plugin failed to restart during a timeout. Plugin will hang.');\n      this.worker = null as unknown as any;\n      return;\n    }\n    const [, worker] = result as any[];\n    this.worker = worker as Worker;\n\n    if (request) {\n      request.pop()!(new Error('EXTISM: call canceled due to timeout'));\n    }\n    this.#request = null;\n\n    this.worker.on('message', (ev) => this.#handleMessage(ev));\n  }\n\n  async reset(): Promise<boolean> {\n    if (this.isActive()) {\n      return false;\n    }\n\n    await this.#invoke('reset');\n\n    this.#context[RESET]();\n    return true;\n  }\n\n  isActive() {\n    return Boolean(this.#request);\n  }\n\n  async #handleMessage(ev: any) {\n    switch (ev?.type) {\n      case 'invoke':\n        return this.#handleInvoke(ev);\n      case 'return':\n        return this.#handleReturn(ev);\n      case 'log':\n        return this.#handleLog(ev);\n    }\n  }\n\n  #handleLog(ev: any) {\n    const fn = (this.opts.logger as any)[ev.level as string];\n    if (typeof fn !== 'function') {\n      this.opts.logger?.error(`failed to find loglevel=\"${ev.level}\" on logger: message=${ev.message}`);\n    } else {\n      fn.call(this.opts.logger, ev.message);\n    }\n  }\n\n  #handleReturn(ev: any) {\n    const responder = this.#request || null;\n    if (responder === null) {\n      // This is fatal, we should probably panic\n      throw new Error(`received \"return\" call with no corresponding request`);\n    }\n\n    this.#request = null;\n\n    const [resolve, reject] = responder;\n\n    if (!Array.isArray(ev.results) || ev.results.length !== 2) {\n      return reject(new Error(`received malformed \"return\"`) as any);\n    }\n\n    const [err, data] = ev.results;\n\n    err ? reject(err) : resolve(data);\n  }\n\n  // host -> guest() invoke\n  async #invoke(handler: string, ...args: any[]): Promise<any> {\n    if (this.#request) {\n      throw new Error('plugin is not reentrant');\n    }\n    let resolve, reject;\n    const promise = new Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n\n    this.#request = [resolve as any, reject as any];\n\n    if (!this.worker) {\n      throw new Error('worker not initialized');\n    }\n\n    const timedOut = {};\n\n    // Since this creates a new promise, we need to provide\n    // an empty error handler.\n    Promise.race([timeout(this.opts.timeoutMs, timedOut), promise].filter(Boolean)).then(\n      async (v) => {\n        if (v === timedOut) {\n          await this.#handleTimeout();\n        }\n      },\n      () => {},\n    );\n\n    this.worker.postMessage({\n      type: 'invoke',\n      handler,\n      args,\n    });\n\n    return promise;\n  }\n\n  async functionExists(funcName: string): Promise<boolean> {\n    return await this.#invoke('functionExists', funcName);\n  }\n\n  // host -> guest invoke()\n  async call<T = any>(funcName: string, input?: string | Uint8Array, hostContext?: T): Promise<PluginOutput | null> {\n    const index = this.#context[STORE](input);\n    this.#context[SET_HOST_CONTEXT](hostContext);\n\n    const [errorIdx, outputIdx] = await this.callBlock(funcName, index);\n\n    const shouldThrow = errorIdx !== null;\n    const idx = errorIdx ?? outputIdx;\n\n    if (idx === null) {\n      return null;\n    }\n\n    const block = this.#context[GET_BLOCK](idx);\n\n    if (block === null) {\n      return null;\n    }\n\n    const buf = new PluginOutput(\n      CAPABILITIES.allowSharedBufferCodec ? block.buffer : new Uint8Array(block.buffer).slice().buffer,\n    );\n\n    if (shouldThrow) {\n      const msg = new TextDecoder().decode(buf);\n      throw new Error(`Plugin-originated error: ${msg}`);\n    }\n\n    return buf;\n  }\n\n  async callBlock(funcName: string, input: number | null): Promise<[number | null, number | null]> {\n    const exported = this.#context[EXPORT_STATE]();\n    const { results, state } = await this.#invoke('call', funcName, input, exported);\n    this.#context[IMPORT_STATE](state, true);\n\n    const [err, data] = results;\n    if (err) {\n      throw err;\n    }\n\n    return data;\n  }\n\n  async getExports(): Promise<WebAssembly.ModuleExportDescriptor[]> {\n    return await this.#invoke('getExports');\n  }\n\n  async getImports(): Promise<WebAssembly.ModuleImportDescriptor[]> {\n    return await this.#invoke('getImports');\n  }\n\n  async getInstance(): Promise<WebAssembly.Instance> {\n    throw new Error('todo');\n  }\n\n  async close(): Promise<void> {\n    if (this.worker) {\n      await terminateWorker(this.worker);\n      this.worker = null as any;\n    }\n  }\n\n  // guest -> host invoke()\n  async #handleInvoke(ev: any) {\n    const writer = new RingBufferWriter(this.sharedData);\n    const namespace = this.opts.functions[ev.namespace];\n    const func = (namespace ?? {})[ev.func];\n    // XXX(chrisdickinson): this is c\u00FCrs\u00EBd code. Add a setTimeout because some platforms\n    // don't spin their event loops if the only pending item is a Promise generated by Atomics.waitAsync.\n    //\n    // - https://github.com/nodejs/node/pull/44409\n    // - https://github.com/denoland/deno/issues/14786\n    const timer = setInterval(() => {}, 0);\n    try {\n      if (!func) {\n        throw Error(`Plugin error: host function \"${ev.namespace}\" \"${ev.func}\" does not exist`);\n      }\n\n      // Fill the shared array buffer with an expected garbage value to make debugging\n      // errors more straightforward\n      new Uint8Array(this.sharedData).subarray(8).fill(0xfe);\n\n      this.#context[IMPORT_STATE](ev.state, true);\n\n      const data = await func(this.#context, ...ev.args);\n\n      const { blocks } = this.#context[EXPORT_STATE]();\n\n      // Writes to the ring buffer MAY return a promise if the write would wrap.\n      // Writes that fit within the ring buffer return void.\n      let promise: any;\n      for (const [buffer, destination] of blocks) {\n        promise = writer.writeUint8(SharedArrayBufferSection.Block);\n        if (promise) {\n          await promise;\n        }\n\n        promise = writer.writeUint32(destination);\n        if (promise) {\n          await promise;\n        }\n\n        promise = writer.writeUint32(buffer?.byteLength || 0);\n        if (promise) {\n          await promise;\n        }\n\n        if (buffer) {\n          promise = writer.write(buffer);\n          if (promise) {\n            await promise;\n          }\n        }\n      }\n\n      if (typeof data === 'bigint') {\n        promise = writer.writeUint8(SharedArrayBufferSection.RetI64);\n        if (promise) {\n          await promise;\n        }\n\n        promise = writer.writeUint64(data);\n        if (promise) {\n          await promise;\n        }\n      } else if (typeof data === 'number') {\n        promise = writer.writeUint8(SharedArrayBufferSection.RetF64);\n        if (promise) {\n          await promise;\n        }\n\n        promise = writer.writeFloat64(data);\n        if (promise) {\n          await promise;\n        }\n      } else {\n        promise = writer.writeUint8(SharedArrayBufferSection.RetVoid);\n        if (promise) {\n          await promise;\n        }\n      }\n\n      promise = writer.writeUint8(SharedArrayBufferSection.End);\n      if (promise) {\n        await promise;\n      }\n      await writer.flush();\n    } catch (err) {\n      this.close();\n      const [, reject] = this.#request as any[];\n      this.#request = null;\n      return reject(err);\n    } finally {\n      clearInterval(timer);\n    }\n  }\n}\n\n// Return control to the waiting promise. Anecdotally, this appears to help\n// with a race condition in Bun.\nconst MAX_WAIT = 500;\nclass RingBufferWriter {\n  output: SharedArrayBuffer;\n  scratch: ArrayBuffer;\n  scratchView: DataView;\n  outputOffset: number;\n  flag: Int32Array;\n\n  static SAB_IDX = 0;\n\n  constructor(output: SharedArrayBuffer) {\n    this.scratch = new ArrayBuffer(8);\n    this.scratchView = new DataView(this.scratch);\n    this.output = output;\n    this.outputOffset = SAB_BASE_OFFSET;\n    this.flag = new Int32Array(this.output);\n    this.wait(0);\n  }\n\n  async wait(lastKnownValue: number) {\n    // if the flag == SAB_BASE_OFFSET, that means \"we have ownership\", every other value means \"the thread has ownership\"\n    let value = 0;\n    do {\n      value = Atomics.load(this.flag, 0);\n      if (value === lastKnownValue) {\n        const { value: result, async } = AtomicsWaitAsync(this.flag, 0, lastKnownValue, MAX_WAIT);\n        if (async) {\n          if ((await result) === 'timed-out') {\n            continue;\n          }\n        }\n      }\n    } while (value === lastKnownValue);\n  }\n\n  signal() {\n    const old = Atomics.load(this.flag, 0);\n    while (Atomics.compareExchange(this.flag, 0, old, this.outputOffset) === old) {}\n    Atomics.notify(this.flag, 0, 1);\n  }\n\n  async flush() {\n    if (this.outputOffset === SAB_BASE_OFFSET) {\n      // no need to flush -- we haven't written anything!\n      return;\n    }\n\n    const workerId = this.outputOffset;\n    this.signal();\n    this.outputOffset = SAB_BASE_OFFSET;\n    await this.wait(workerId);\n  }\n\n  async spanningWrite(input: Uint8Array) {\n    let inputOffset = 0;\n    let toWrite = this.output.byteLength - this.outputOffset;\n    let flushedWriteCount = 1 + Math.floor((input.byteLength - toWrite) / (this.output.byteLength - SAB_BASE_OFFSET));\n    const finalWrite = (input.byteLength - toWrite) % (this.output.byteLength - SAB_BASE_OFFSET);\n\n    do {\n      new Uint8Array(this.output).set(input.subarray(inputOffset, inputOffset + toWrite), this.outputOffset);\n\n      // increment the offset so we know we've written _something_ (and can bypass the \"did we not write anything\" check in `flush()`)\n      this.outputOffset += toWrite;\n      inputOffset += toWrite;\n      await this.flush();\n\n      // reset toWrite to the maximum available length. (So we may write 29 bytes the first time, but 4096 the next N times.\n      toWrite = this.output.byteLength - SAB_BASE_OFFSET;\n      --flushedWriteCount;\n    } while (flushedWriteCount != 0);\n\n    if (finalWrite) {\n      this.write(input.subarray(inputOffset, inputOffset + finalWrite));\n    }\n  }\n\n  write(bytes: ArrayBufferLike): void | Promise<void> {\n    if (bytes.byteLength + this.outputOffset < this.output.byteLength) {\n      new Uint8Array(this.output).set(new Uint8Array(bytes), this.outputOffset);\n      this.outputOffset += bytes.byteLength;\n      return;\n    }\n\n    return this.spanningWrite(new Uint8Array(bytes));\n  }\n\n  writeUint8(value: number): void | Promise<void> {\n    this.scratchView.setUint8(0, value);\n    return this.write(this.scratch.slice(0, 1));\n  }\n\n  writeUint32(value: number): void | Promise<void> {\n    this.scratchView.setUint32(0, value, true);\n    return this.write(this.scratch.slice(0, 4));\n  }\n\n  writeUint64(value: bigint): void | Promise<void> {\n    this.scratchView.setBigUint64(0, value, true);\n    return this.write(this.scratch.slice(0, 8));\n  }\n\n  writeFloat64(value: number): void | Promise<void> {\n    this.scratchView.setFloat64(0, value, true);\n    return this.write(this.scratch.slice(0, 8));\n  }\n}\n\nexport async function createBackgroundPlugin(\n  opts: InternalConfig,\n  names: string[],\n  modules: WebAssembly.Module[],\n): Promise<BackgroundPlugin> {\n  const context = new CallContext(SharedArrayBuffer, opts.logger, opts.logLevel, opts.config, opts.memory);\n  const httpContext = new HttpContext(opts.fetch, opts.allowedHosts, opts.memory, opts.allowHttpResponseHeaders);\n  httpContext.contribute(opts.functions);\n\n  // NB(chrisdickinson): In order for the host and guest to have the same \"view\" of the\n  // variables, forward the guest's var_get/var_set methods up to the host CallContext.\n  // If they're overridden, however, preserve the user-provided values.\n  opts.functions[EXTISM_ENV] ??= {};\n  opts.functions[EXTISM_ENV].var_get ??= (_: CallContext, key: bigint) => {\n    return context[ENV].var_get(key);\n  };\n  opts.functions[EXTISM_ENV].var_set ??= (_: CallContext, key: bigint, val: bigint) => {\n    return context[ENV].var_set(key, val);\n  };\n\n  // NB(chrisdickinson): We *have* to create the SharedArrayBuffer in\n  // the parent context because -- for whatever reason! -- chromium does\n  // not allow the creation of shared buffers in worker contexts, but firefox\n  // and webkit do.\n  const sharedData = new (SharedArrayBuffer as any)(opts.sharedArrayBufferSize);\n  new Uint8Array(sharedData).subarray(8).fill(0xfe);\n\n  const timedOut = {};\n\n  // If we fail to initialize the worker (because Wasm hangs), we need access to\n  // the partially-initialized worker so that we can terminate its thread.\n  let earlyWorker: Worker;\n  const onworker = (w: Worker) => {\n    earlyWorker = w;\n  };\n\n  const worker = await Promise.race(\n    [timeout(opts.timeoutMs, timedOut), createWorker(opts, names, modules, sharedData, onworker)].filter(Boolean),\n  );\n\n  if (worker === timedOut) {\n    await terminateWorker(earlyWorker!);\n    throw new Error('EXTISM: timed out while waiting for plugin to instantiate');\n  }\n  return new BackgroundPlugin(worker as Worker, sharedData, names, modules, opts, context);\n}\n\nasync function createWorker(\n  opts: InternalConfig,\n  names: string[],\n  modules: WebAssembly.Module[],\n  sharedData: SharedArrayBuffer,\n  onworker: (_w: Worker) => void = (_w: Worker) => {},\n): Promise<Worker> {\n  const worker = new Worker(WORKER_URL, opts.nodeWorkerArgs);\n  onworker(worker);\n\n  await new Promise((resolve, reject) => {\n    worker.on('message', function handler(ev) {\n      if (ev?.type !== 'initialized') {\n        reject(new Error(`received unexpected message (type=${ev?.type})`));\n      }\n\n      worker.removeListener('message', handler);\n      resolve(null);\n    });\n  });\n\n  const onready = new Promise((resolve, reject) => {\n    worker.on('message', function handler(ev) {\n      if (ev?.type !== 'ready') {\n        reject(new Error(`received unexpected message (type=${ev?.type})`));\n      }\n\n      worker.removeListener('message', handler);\n      resolve(null);\n    });\n  });\n\n  const { fetch: _, logger: __, ...rest } = opts;\n  const message = {\n    ...rest,\n    type: 'init',\n    functions: Object.fromEntries(Object.entries(opts.functions || {}).map(([k, v]) => [k, Object.keys(v)])),\n    names,\n    modules,\n    sharedData,\n  };\n\n  worker.postMessage(message);\n  await onready;\n\n  return worker;\n}\n\nfunction timeout(ms: number | null, sentinel: any) {\n  return ms === null ? null : new Promise((resolve) => setTimeout(() => resolve(sentinel), ms));\n}\n\nasync function terminateWorker(w: Worker) {\n  if (typeof (globalThis as any).Bun !== 'undefined') {\n    const timer = setTimeout(() => {}, 10);\n    await w.terminate();\n    clearTimeout(timer);\n  } else {\n    await w.terminate();\n  }\n}\n", "import { CAPABILITIES } from './polyfills/deno-capabilities.ts';\n\nimport {\n  logLevelToPriority,\n  type ExtismPluginOptions,\n  type InternalConfig,\n  type ManifestLike,\n  type Plugin,\n} from './interfaces.ts';\n\nimport { toWasmModuleData as _toWasmModuleData } from './manifest.ts';\n\nimport { createForegroundPlugin as _createForegroundPlugin } from './foreground-plugin.ts';\nimport { createBackgroundPlugin as _createBackgroundPlugin } from './background-plugin.ts';\n\nexport { CAPABILITIES } from './polyfills/deno-capabilities.ts';\n\nexport type {\n  Capabilities,\n  ExtismPluginOptions,\n  LogLevel,\n  Manifest,\n  ManifestLike,\n  ManifestWasm,\n  ManifestWasmData,\n  ManifestWasmModule,\n  ManifestWasmPath,\n  ManifestWasmResponse,\n  ManifestWasmUrl,\n  MemoryOptions,\n  Plugin,\n  PluginConfig,\n  PluginConfigLike,\n  PluginOutput,\n} from './interfaces.ts';\n\nexport type { CallContext, CallContext as CurrentPlugin } from './call-context.ts';\n\n/**\n * Create a {@link Plugin} given a {@link ManifestLike} and {@link ExtismPluginOptions}.\n *\n * Plugins wrap Wasm modules, exposing rich access to exported functions.\n *\n * ```ts\n * const plugin = await createPlugin(\n *   'https://github.com/extism/plugins/releases/download/v0.3.0/count_vowels.wasm',\n *   { useWasi: true }\n * );\n *\n * try {\n *   const result = await plugin.call('count_vowels', 'hello world');\n *   const parsed = result.json();\n *\n *   console.log(parsed); // { count: 3, total: 3, vowels: \"aeiouAEIOU\" }\n * } finally {\n *   await plugin.close();\n * }\n * ```\n *\n * {@link Plugin | `Plugin`} can run on a background thread when the\n * environment supports it. You can see if the current environment supports\n * background plugins by checking the {@link Capabilities#hasWorkerCapability |\n * `hasWorkerCapability`} property of {@link CAPABILITIES}.\n *\n * @param manifest A {@link ManifestLike | `ManifestLike`}. May be a `string`\n * representing a URL, JSON, a path to a wasm file ({@link\n * Capabilities#manifestSupportsPaths | in environments} where paths are\n * supported); an [ArrayBuffer](https://mdn.io/ArrayBuffer); or a {@link\n * Manifest}.\n *\n * @param opts {@link ExtismPluginOptions | options} for controlling the behavior\n * of the plugin.\n *\n * @returns a promise for a {@link Plugin}.\n */\nexport async function createPlugin(\n  manifest: ManifestLike | PromiseLike<ManifestLike>,\n  opts: ExtismPluginOptions = {},\n): Promise<Plugin> {\n  opts = { ...opts };\n  opts.useWasi ??= false;\n  opts.enableWasiOutput ??= opts.useWasi ? CAPABILITIES.extismStdoutEnvVarSet : false;\n  opts.functions = opts.functions || {};\n\n  // TODO(chrisdickinson): reset this to `CAPABILITIES.hasWorkerCapability` once we've fixed https://github.com/extism/js-sdk/issues/46.\n  opts.runInWorker ??= false;\n\n  opts.logger ??= console;\n  opts.logLevel ??= 'silent';\n  opts.fetch ??= fetch;\n\n  const [manifestOpts, names, moduleData] = await _toWasmModuleData(\n    await Promise.resolve(manifest),\n    opts.fetch ?? fetch,\n  );\n\n  opts.allowedPaths = opts.allowedPaths || manifestOpts.allowedPaths || {};\n  opts.allowedHosts = opts.allowedHosts || manifestOpts.allowedHosts || [];\n  opts.config = opts.config || manifestOpts.config || {};\n  opts.memory = opts.memory || manifestOpts.memory || {};\n  opts.timeoutMs = opts.timeoutMs || manifestOpts.timeoutMs || null;\n  opts.nodeWorkerArgs = Object.assign(\n    {\n      name: 'extism plugin',\n      execArgv: ['--disable-warning=ExperimentalWarning'],\n    },\n    opts.nodeWorkerArgs || {},\n  );\n\n  if (opts.allowedHosts.length && !opts.runInWorker) {\n    if (!(WebAssembly as any).Suspending) {\n      throw new TypeError(\n        '\"allowedHosts\" requires \"runInWorker: true\". HTTP functions are only available to plugins running in a worker.',\n      );\n    }\n  }\n\n  if (opts.timeoutMs && !opts.runInWorker) {\n    throw new TypeError(\n      '\"timeout\" requires \"runInWorker: true\". Call timeouts are only available to plugins running in a worker.',\n    );\n  }\n\n  if (opts.runInWorker && !CAPABILITIES.hasWorkerCapability) {\n    throw new Error(\n      'Cannot enable off-thread wasm; current context is not `crossOriginIsolated` (see https://mdn.io/crossOriginIsolated)',\n    );\n  }\n\n  for (const guest in opts.allowedPaths) {\n    const host = opts.allowedPaths[guest];\n\n    if (host.startsWith('ro:')) {\n      throw new Error(`Readonly dirs are not supported: ${host}`);\n    }\n  }\n\n  const ic: InternalConfig = {\n    allowedHosts: opts.allowedHosts as [],\n    allowedPaths: opts.allowedPaths,\n    functions: opts.functions,\n    fetch: opts.fetch || fetch,\n    wasiEnabled: opts.useWasi,\n    logger: opts.logger,\n    logLevel: logLevelToPriority(opts.logLevel || 'silent'),\n    config: opts.config,\n    enableWasiOutput: opts.enableWasiOutput,\n    sharedArrayBufferSize: Number(opts.sharedArrayBufferSize) || 1 << 16,\n    timeoutMs: opts.timeoutMs,\n    memory: opts.memory,\n    allowHttpResponseHeaders: !!opts.allowHttpResponseHeaders,\n    nodeWorkerArgs: opts.nodeWorkerArgs || {},\n  };\n\n  return (opts.runInWorker ? _createBackgroundPlugin : _createForegroundPlugin)(ic, names, moduleData);\n}\n\nexport { createPlugin as newPlugin };\n\nexport default createPlugin;\n"],
  "mappings": "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",
  "names": ["require_balanced_match", "__commonJSMin", "exports", "module", "balanced", "a", "b", "str", "maybeMatch", "r", "range", "reg", "m", "begs", "beg", "left", "right", "result", "ai", "bi", "i", "require_brace_expansion", "__commonJSMin", "exports", "module", "balanced", "expandTop", "escSlash", "escOpen", "escClose", "escComma", "escPeriod", "numeric", "str", "escapeBraces", "unescapeBraces", "parseCommaParts", "parts", "m", "pre", "body", "post", "p", "postParts", "expand", "embrace", "isPadded", "el", "lte", "i", "y", "gte", "isTop", "expansions", "k", "expansion", "isNumericSequence", "isAlphaSequence", "isSequence", "isOptions", "n", "N", "x", "width", "incr", "test", "reverse", "pad", "c", "need", "z", "j", "WebAssembly", "CAPABILITIES", "_decoder", "_bytes", "_PluginOutput", "buffer", "__privateAdd", "__privateGet", "__privateSet", "_byteOffset", "_value", "_littleEndian", "PluginOutput", "SAB_BASE_OFFSET", "logLevelToPriority", "level", "priorityToLogLevel", "readFile", "_path", "responseToModule", "response", "hasHash", "headers", "data", "_populateWasmField", "candidate", "_fetch", "parseManifestFromJson", "response", "contentType", "badItemIdx", "item", "json", "parsed", "intoManifest", "manifest", "toWasmModuleData", "input", "names", "manifestOpts", "manifestsWasm", "idx", "all", "module", "buffer", "data", "path", "readFile", "result", "responseToModule", "potentialName", "hashBuffer", "checkBuffer", "eq", "i", "hashAsString", "xs", "BEGIN", "END", "ENV", "SET_HOST_CONTEXT", "GET_BLOCK", "IMPORT_STATE", "EXPORT_STATE", "STORE", "RESET", "Block", "arrayBuffer", "local", "idx", "addr", "_a", "CallContext", "type", "logger", "logLevel", "config", "memoryOptions", "#blocks", "#vars", "n", "blockIdx", "offset", "#stack", "#input", "length", "block", "error", "item", "key", "#config", "result", "stored", "valueaddr", "#logger", "valueBlock", "copied", "err", "_requestOffset", "_bodyOffset", "#handleLog", "logLevelToPriority", "#logLevel", "#arrayBufferType", "#decoder", "#encoder", "#memoryOptions", "#varsSize", "#hostContext", "size", "index", "totalBytes", "acc", "totalPages", "name", "PluginOutput", "value", "buffer", "variable", "newSize", "CAPABILITIES", "input", "priorityToLogLevel", "v", "incomingLevel", "level", "text", "state", "copy", "buf", "dst", "hostContext", "outputIdx", "errorIdx", "outputPosition", "Iovec", "view", "ptr", "iovec", "len", "iovecs", "Ciovec", "WHENCE_SET", "WHENCE_CUR", "WHENCE_END", "FILETYPE_REGULAR_FILE", "FDFLAGS_APPEND", "FDFLAGS_DSYNC", "FDFLAGS_NONBLOCK", "FDFLAGS_RSYNC", "FDFLAGS_SYNC", "Fdstat", "view", "ptr", "filetype", "flags", "FSTFLAGS_ATIM", "FSTFLAGS_ATIM_NOW", "FSTFLAGS_MTIM", "FSTFLAGS_MTIM_NOW", "OFLAGS_CREAT", "OFLAGS_DIRECTORY", "OFLAGS_EXCL", "OFLAGS_TRUNC", "Filestat", "size", "EVENTRWFLAGS_FD_READWRITE_HANGUP", "SUBCLOCKFLAGS_SUBSCRIPTION_CLOCK_ABSTIME", "RIFLAGS_RECV_PEEK", "RIFLAGS_RECV_WAITALL", "ROFLAGS_RECV_DATA_TRUNCATED", "SDFLAGS_RD", "SDFLAGS_WR", "Debug", "enabled", "createLogger", "isEnabled", "prefix", "debug", "WASIProcExit", "code", "WASI", "instance", "args", "env", "fds", "options", "debug", "self", "argc", "argv_buf_size", "buffer", "buf_size", "arg", "argv", "argv_buf", "buffer8", "orig_argv_buf", "i", "environ_count", "environ_size", "environ", "environ_buf", "orig_environ_buf", "e", "id", "res_ptr", "resolutionValue", "precision", "time", "monotonic_time", "fd", "offset", "len", "advice", "ret", "fdstat_ptr", "fdstat", "flags", "fs_rights_base", "fs_rights_inheriting", "filestat_ptr", "filestat", "size", "atim", "mtim", "fst_flags", "iovs_ptr", "iovs_len", "nread_ptr", "iovecs", "Iovec", "nread", "buf_ptr", "prestat", "path_ptr", "path_len", "prestat_dir_name", "nwritten_ptr", "Ciovec", "nwritten", "buf", "buf_len", "cookie", "bufused_ptr", "bufused", "dirent", "head_bytes", "to", "whence", "offset_out_ptr", "offset_out", "offset_ptr", "path", "old_fd", "old_flags", "old_path_ptr", "old_path_len", "new_fd", "new_path_ptr", "new_path_len", "old_path", "new_path", "dirflags", "oflags", "fd_flags", "opened_fd_ptr", "fd_obj", "opened_fd", "data", "in_", "out", "nsubscriptions", "exit_code", "sig", "ri_data", "ri_flags", "si_data", "si_flags", "how", "Fd", "offset", "len", "advice", "flags", "fs_rights_base", "fs_rights_inheriting", "size", "atim", "mtim", "fst_flags", "view8", "iovs", "cookie", "whence", "path", "old_fd", "old_flags", "old_path", "new_path", "dirflags", "oflags", "fdflags", "new_fd", "OpenFile", "Fd", "Fdstat", "FILETYPE_REGULAR_FILE", "view8", "iovs", "nread", "iovec", "slice", "offset", "whence", "calculated_offset", "WHENCE_SET", "WHENCE_CUR", "WHENCE_END", "nwritten", "buffer", "old", "file", "File", "fd_flags", "file", "OpenFile", "FDFLAGS_APPEND", "WHENCE_END", "Filestat", "FILETYPE_REGULAR_FILE", "data", "options", "Output", "Fd", "#mode", "mode", "view8", "iovs", "nwritten", "decoder", "str", "acc", "iovec", "idx", "all", "buffer", "loadWasi", "_allowedPaths", "enableWasiOutput", "args", "envVars", "fds", "OpenFile", "File", "context", "WASI", "instance", "memory", "init", "import_brace_expansion", "assertValidPattern", "pattern", "posixClasses", "braceEscape", "s", "regexpEscape", "rangesToString", "ranges", "parseClass", "glob", "position", "pos", "negs", "sawStart", "uflag", "escaping", "negate", "endPos", "rangeStart", "WHILE", "c", "cls", "unip", "u", "neg", "r", "sranges", "snegs", "unescape", "s", "windowsPathsNoEscape", "types", "isExtglobType", "c", "startNoTraversal", "startNoDot", "addPatternStart", "justDots", "reSpecials", "regExpEscape", "s", "qmark", "star", "starNoEmpty", "_root", "_hasMagic", "_uflag", "_parts", "_parent", "_parentIndex", "_negs", "_filledNegs", "_options", "_toString", "_emptyExt", "_fillNegs", "fillNegs_fn", "_parseAST", "parseAST_fn", "_partsToRegExp", "partsToRegExp_fn", "_parseGlob", "parseGlob_fn", "_AST", "type", "parent", "options", "__privateAdd", "__publicField", "__privateSet", "__privateGet", "p", "parts", "ret", "i", "pp", "pl", "part", "pattern", "_a", "ast", "__privateMethod", "glob", "re", "body", "hasMagic", "uflag", "flags", "allowDot", "dot", "noEmpty", "src", "_", "start", "aps", "needNoTrav", "needNoDot", "end", "unescape", "repeated", "bodyDotAllowed", "final", "close", "AST", "n", "str", "pos", "opt", "_b", "escaping", "inBrace", "braceStart", "braceNeg", "acc", "ext", "needUflag", "consumed", "magic", "parseClass", "escape", "s", "windowsPathsNoEscape", "minimatch", "p", "pattern", "options", "assertValidPattern", "Minimatch", "starDotExtRE", "starDotExtTest", "ext", "f", "starDotExtTestDot", "starDotExtTestNocase", "starDotExtTestNocaseDot", "starDotStarRE", "starDotStarTest", "starDotStarTestDot", "dotStarRE", "dotStarTest", "starRE", "starTest", "starTestDot", "qmarksRE", "qmarksTestNocase", "$0", "noext", "qmarksTestNoExt", "qmarksTestNocaseDot", "qmarksTestNoExtDot", "qmarksTestDot", "qmarksTest", "len", "defaultPlatform", "path", "sep", "GLOBSTAR", "qmark", "star", "twoStarDot", "twoStarNoDot", "filter", "a", "b", "defaults", "def", "orig", "type", "parent", "list", "braceExpand", "expand", "makeRe", "match", "mm", "globMagic", "regExpEscape", "s", "part", "_", "args", "rawGlobParts", "set", "__", "isUNC", "isDrive", "ss", "globParts", "i", "j", "optimizationLevel", "parts", "gs", "prev", "didSomething", "dd", "gss", "next", "p2", "other", "splin", "matched", "emptyGSMatch", "ai", "bi", "result", "which", "negate", "negateOffset", "file", "partial", "fileDrive", "fileUNC", "patternDrive", "patternUNC", "fdi", "pdi", "fd", "pd", "fi", "pi", "fl", "pl", "fr", "pr", "swallowee", "hit", "m", "fastTest", "re", "AST", "twoStar", "flags", "pp", "open", "close", "ff", "filename", "escape", "unescape", "matches", "text", "pattern", "minimatch", "HttpContext", "_fetch", "allowedHosts", "memoryOptions", "allowResponseHeaders", "functions", "EXTISM_ENV", "callContext", "reqaddr", "bodyaddr", "req", "headers", "header", "rawUrl", "m", "method", "url", "allowedHost", "matches", "body", "fetch", "response", "bytes", "readBodyUpTo", "err", "ptr", "ENV", "maxBytes", "reader", "receivedLength", "chunks", "done", "value", "limitedResponseBody", "position", "chunk", "EXTISM_ENV", "AsyncFunction", "Suspending", "promising", "ForegroundPlugin", "#context", "#instancePair", "#active", "#wasi", "#opts", "#suspendsOnInvoke", "opts", "context", "instancePair", "wasi", "suspendsOnInvoke", "RESET", "funcName", "input", "func", "BEGIN", "END", "err", "hostContext", "inputIdx", "STORE", "SET_HOST_CONTEXT", "errorIdx", "outputIdx", "shouldThrow", "idx", "block", "GET_BLOCK", "output", "PluginOutput", "xs", "createForegroundPlugin", "names", "modules", "CallContext", "imports", "ENV", "namespace", "name", "isAsync", "wrapped", "mainIndex", "seen", "wasiList", "mutableFlags", "instance", "instantiateModule", "current", "module", "linked", "instantiationImports", "requested", "kind", "nameIdx", "CAPABILITIES", "loadWasi", "httpContext", "HttpContext", "contributions", "key", "entry", "provider", "providerExports", "cached", "args", "guestType", "WORKER_URL", "HANDLER_MAP", "Worker", "url", "ev", "action", "handler", "self", "args", "AtomicsWaitAsync", "src", "blob", "url", "w", "Worker", "ia", "index", "value", "promise", "resolve", "data", "BackgroundPlugin", "worker", "sharedData", "names", "modules", "opts", "context", "#request", "#context", "SAB_BASE_OFFSET", "ev", "#handleMessage", "#handleTimeout", "request", "timedOut", "failed", "result", "timeout", "terminateWorker", "createWorker", "RESET", "#invoke", "#handleInvoke", "#handleReturn", "#handleLog", "fn", "responder", "reject", "err", "handler", "args", "res", "rej", "v", "funcName", "input", "hostContext", "STORE", "SET_HOST_CONTEXT", "errorIdx", "outputIdx", "shouldThrow", "idx", "block", "GET_BLOCK", "buf", "PluginOutput", "CAPABILITIES", "msg", "exported", "EXPORT_STATE", "results", "state", "IMPORT_STATE", "writer", "RingBufferWriter", "func", "timer", "blocks", "buffer", "destination", "MAX_WAIT", "output", "lastKnownValue", "async", "old", "workerId", "inputOffset", "toWrite", "flushedWriteCount", "finalWrite", "bytes", "createBackgroundPlugin", "CallContext", "HttpContext", "EXTISM_ENV", "_", "key", "ENV", "val", "earlyWorker", "onworker", "_w", "WORKER_URL", "onready", "__", "rest", "message", "k", "ms", "sentinel", "createPlugin", "manifest", "opts", "CAPABILITIES", "manifestOpts", "names", "moduleData", "toWasmModuleData", "guest", "host", "ic", "logLevelToPriority", "createBackgroundPlugin", "createForegroundPlugin", "mod_default", "createPlugin"]
}
